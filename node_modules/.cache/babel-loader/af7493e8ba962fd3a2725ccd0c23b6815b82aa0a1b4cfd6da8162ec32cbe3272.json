{"ast":null,"code":"var _jsxFileName = \"/home/toto/Downloads/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\";\nimport Footer from \"./Footer\";\n\n/*CSS*/\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"./MovieCarousel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({\n    title: \"Loading Movies\"\n  });\n  const [playing, setPlaying] = useState(false);\n  const [cast, setCast] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"\");\n  const fetchMovies = async (searchKey, category, searchType, fromDate, toDate) => {\n    const type = searchKey ? \"search\" : \"discover\";\n    let params = {\n      api_key: API_KEY,\n      query: searchKey,\n      with_genres: category ? category : undefined\n    };\n\n    // Si hay un tipo de búsqueda específico, lo agregamos a los parámetros\n    if (searchType) {\n      params = {\n        ...params,\n        ...{\n          sort_by: searchType\n        }\n      };\n    }\n\n    // Agregar parámetros de fecha si se proporcionan\n    if (fromDate && toDate) {\n      params[\"primary_release_date.gte\"] = fromDate;\n      params[\"primary_release_date.lte\"] = toDate;\n    }\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: params\n    });\n    const filteredMovies = results.filter(movie => !movie.title.toLowerCase().includes(\"tiburon\") && movie.title !== \"No Way Up\" && movie.title !== \"Jaws\" && movie.title !== \"Sharknado\" && movie.title !== \"Deep Blue Sea\" && movie.title !== \"The Meg\" && movie.title !== \"Shark\" && movie.title !== \"Under Paris\");\n    setMovies(filteredMovies);\n    setMovie(filteredMovies[0]);\n    if (filteredMovies.length) {\n      await fetchMovie(filteredMovies[0].id);\n    }\n  };\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos,credits\"\n      }\n    });\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n    setMovie(data);\n    if (data.credits && data.credits.cast) {\n      setCast(data.credits.cast);\n    }\n  };\n  const selectMovie = async movie => {\n    fetchMovie(movie.id);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchKey, category, searchType);\n  };\n  const goToHomePage = () => {\n    window.location.href = \"/\";\n  };\n  const handleCategoryChange = category => {\n    setCategory(category);\n    setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n    fetchMovies(searchKey, category, searchType);\n  };\n  useEffect(() => {\n    // eslint-disable-next-line\n    fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n  }, []);\n  const fetchPopularMovies = async () => {\n    setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n    fetchMovies(searchKey, category, \"popularity.desc\");\n  };\n  const fetchRecentMovies = async () => {\n    const currentDate = new Date();\n    const fromDate = new Date(currentDate);\n    const toDate = new Date(currentDate);\n\n    // Restar y sumar 1 mes a la fecha actual\n    fromDate.setMonth(currentDate.getMonth() - 1);\n    toDate.setMonth(currentDate.getMonth() + 1);\n\n    // Formatear las fechas para el formato requerido por la API (YYYY-MM-DD)\n    const fromDateString = fromDate.toISOString().split(\"T\")[0];\n    const toDateString = toDate.toISOString().split(\"T\")[0];\n    setSearchType(\"release_date.desc\"); // Establecer el tipo de búsqueda como más reciente\n\n    // Hacer la llamada a la API con las fechas limitadas\n    fetchMovies(searchKey, category, `release_date.desc`, fromDateString, toDateString);\n  };\n  const fetchTopRatedMovies = async () => {\n    setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n    fetchMovies(searchKey, category, \"vote_average.desc\");\n  };\n  const fetchTopRatedMoviesAll = async () => {\n    setSearchType(\"top_rated\"); // Establece el tipo de búsqueda como top_rated\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/movie/top_rated`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    setMovies(results);\n    setMovie(results[0]);\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  };\n  const categories = {\n    28: \"Action\",\n    35: \"Comedy\",\n    18: \"Drama\",\n    27: \"Horror\",\n    10749: \"Romance\",\n    878: \"Science Fiction\",\n    10751: \"Family\",\n    16: \"Animation\",\n    80: \"Crime\",\n    37: \"Western\",\n    36: \"History\",\n    14: \"Fantasy\",\n    53: \"Thriller\",\n    10752: \"War\",\n    12: \"Adventure\",\n    99: \"Documentary\",\n    10402: \"Music\",\n    10770: \"TV Movie\",\n    9648: \"Mystery\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"menu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-and-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logo\",\n          onClick: goToHomePage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://imgfz.com/i/5hQ3ZSJ.png\",\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"container mb-4\",\n          onSubmit: searchMovies,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"search\",\n            onChange: e => setSearchKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: searchMovies,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: category,\n            onChange: e => handleCategoryChange(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), Object.entries(categories).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: fetchTopRatedMoviesAll,\n            children: \"All time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: fetchPopularMovies,\n            children: \"Popular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: fetchRecentMovies,\n            children: \"Recent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: fetchTopRatedMovies,\n            children: \"Top Rated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MovieCarousel, {\n        movies: movies,\n        selectMovie: selectMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewtrailer\",\n          style: {\n            backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`\n          },\n          children: [trailer && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trailer-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${IMAGE_PATH}${movie.poster_path}`,\n              alt: movie.title,\n              className: \"movie-poster\",\n              width: \"560\",\n              height: \"815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"560\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${trailer.key}`,\n              title: \"YouTube video player\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cast-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Cast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [cast.filter(actor => actor.department === \"Directing\").map(director => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Director: \", director.name]\n              }, director.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 45\n              }, this)), cast.filter(actor => actor.order <= 10 && actor.department !== \"Directing\").map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [actor.character, \" - \", actor.name]\n              }, actor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this), playing ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPlaying(false),\n            className: \"boton\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-white\",\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white\",\n                children: movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_movies\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row_movies\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col_movies\",\n          onClick: () => selectMovie(movie),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${URL_IMAGE + movie.poster_path}`,\n            alt: \"\",\n            height: 600,\n            width: \"150%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", movie.vote_average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 29\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"dusWROsTQxYpEQFfLbu1OAFHpUk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieCarousel","Footer","jsxDEV","_jsxDEV","App","_s","movies","setMovies","searchKey","setSearchKey","trailer","setTrailer","movie","setMovie","title","playing","setPlaying","cast","setCast","category","setCategory","searchType","setSearchType","fetchMovies","fromDate","toDate","type","params","api_key","API_KEY","query","with_genres","undefined","sort_by","data","results","get","API_URL","filteredMovies","filter","toLowerCase","includes","length","fetchMovie","id","append_to_response","videos","find","vid","name","credits","selectMovie","window","scrollTo","searchMovies","e","preventDefault","goToHomePage","location","href","handleCategoryChange","fetchPopularMovies","fetchRecentMovies","currentDate","Date","setMonth","getMonth","fromDateString","toISOString","split","toDateString","fetchTopRatedMovies","fetchTopRatedMoviesAll","categories","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","target","value","Object","entries","map","style","backgroundImage","IMAGE_PATH","backdrop_path","poster_path","width","height","key","allow","allowFullScreen","actor","department","director","order","character","overview","URL_IMAGE","vote_average","_c","$RefreshReg$"],"sources":["/home/toto/Downloads/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\"; \nimport Footer from \"./Footer\";\n\n/*CSS*/\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"./MovieCarousel.css\";\n\n\nfunction App() {\n    \n\n    const [movies, setMovies] = useState([]);\n    const [searchKey, setSearchKey] = useState(\"\");\n    const [trailer, setTrailer] = useState(null);\n    const [movie, setMovie] = useState({ title: \"Loading Movies\" });\n    const [playing, setPlaying] = useState(false);\n    const [cast, setCast] = useState([]);\n    const [category, setCategory] = useState(\"\");\n    const [searchType, setSearchType] = useState(\"\");\n\n    const fetchMovies = async (\n        searchKey,\n        category,\n        searchType,\n        fromDate,\n        toDate\n    ) => {\n        const type = searchKey ? \"search\" : \"discover\";\n        let params = {\n            api_key: API_KEY,\n            query: searchKey,\n            with_genres: category ? category : undefined,\n        };\n\n        // Si hay un tipo de búsqueda específico, lo agregamos a los parámetros\n        if (searchType) {\n            params = { ...params, ...{ sort_by: searchType } };\n        }\n\n        // Agregar parámetros de fecha si se proporcionan\n        if (fromDate && toDate) {\n            params[\"primary_release_date.gte\"] = fromDate;\n            params[\"primary_release_date.lte\"] = toDate;\n        }\n\n        const {\n            data: { results },\n        } = await axios.get(`${API_URL}/${type}/movie`, {\n            params: params,\n        });\n\n        const filteredMovies = results.filter(\n            (movie) =>\n                !movie.title.toLowerCase().includes(\"tiburon\") &&\n                movie.title !== \"No Way Up\" &&\n                movie.title !== \"Jaws\" &&\n                movie.title !== \"Sharknado\" &&\n                movie.title !== \"Deep Blue Sea\" &&\n                movie.title !== \"The Meg\" &&\n                movie.title !== \"Shark\"&&\n                movie.title !== \"Under Paris\" \n        );\n\n        setMovies(filteredMovies);\n        setMovie(filteredMovies[0]);\n\n        if (filteredMovies.length) {\n            await fetchMovie(filteredMovies[0].id);\n        }\n    };\n\n    const fetchMovie = async (id) => {\n        const { data } = await axios.get(`${API_URL}/movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n                append_to_response: \"videos,credits\",\n            },\n        });\n\n        if (data.videos && data.videos.results) {\n            const trailer = data.videos.results.find(\n                (vid) => vid.name === \"Official Trailer\"\n            );\n            setTrailer(trailer ? trailer : data.videos.results[0]);\n        }\n        setMovie(data);\n        if (data.credits && data.credits.cast) {\n            setCast(data.credits.cast);\n        }\n    };\n\n    const selectMovie = async (movie) => {\n        fetchMovie(movie.id);\n        setMovie(movie);\n        window.scrollTo(0, 0);\n    };\n\n    const searchMovies = (e) => {\n        e.preventDefault();\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    const goToHomePage = () => {\n        window.location.href = \"/\";\n    };\n\n    const handleCategoryChange = (category) => {\n        setCategory(category);\n        setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    useEffect(() => {\n        // eslint-disable-next-line\n        fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n    }, []);\n\n    const fetchPopularMovies = async () => {\n        setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n        fetchMovies(searchKey, category, \"popularity.desc\");\n    };\n\n    const fetchRecentMovies = async () => {\n        const currentDate = new Date();\n        const fromDate = new Date(currentDate);\n        const toDate = new Date(currentDate);\n\n        // Restar y sumar 1 mes a la fecha actual\n        fromDate.setMonth(currentDate.getMonth() - 1);\n        toDate.setMonth(currentDate.getMonth() + 1);\n\n        // Formatear las fechas para el formato requerido por la API (YYYY-MM-DD)\n        const fromDateString = fromDate.toISOString().split(\"T\")[0];\n        const toDateString = toDate.toISOString().split(\"T\")[0];\n\n        setSearchType(\"release_date.desc\"); // Establecer el tipo de búsqueda como más reciente\n\n        // Hacer la llamada a la API con las fechas limitadas\n        fetchMovies(\n            searchKey,\n            category,\n            `release_date.desc`,\n            fromDateString,\n            toDateString\n        );\n    };\n\n    const fetchTopRatedMovies = async () => {\n        setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n        fetchMovies(searchKey, category, \"vote_average.desc\");\n    };\n\n    \n    const fetchTopRatedMoviesAll = async () => {\n        setSearchType(\"top_rated\"); // Establece el tipo de búsqueda como top_rated\n        const {\n            data: { results },\n        } = await axios.get(`${API_URL}/movie/top_rated`, {\n            params: {\n                api_key: API_KEY,\n            },\n        });\n\n        setMovies(results);\n        setMovie(results[0]);\n        if (results.length) {\n            await fetchMovie(results[0].id);\n        }\n    };\n\n    const categories = {\n        28: \"Action\",\n        35: \"Comedy\",\n        18: \"Drama\",\n        27: \"Horror\",\n        10749: \"Romance\",\n        878: \"Science Fiction\",\n        10751: \"Family\",\n        16: \"Animation\",\n        80: \"Crime\",\n        37: \"Western\",\n        36: \"History\",\n        14: \"Fantasy\",\n        53: \"Thriller\",\n        10752: \"War\",\n        12: \"Adventure\",\n        99: \"Documentary\",\n        10402: \"Music\",\n        10770: \"TV Movie\",\n        9648: \"Mystery\",\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"menu\">\n                <div className=\"logo-and-search\">\n                    <button className=\"logo\" onClick={goToHomePage}>\n                        <img src=\"http://imgfz.com/i/5hQ3ZSJ.png\" alt=\"Logo\" />\n                    </button>\n                    <form className=\"container mb-4\" onSubmit={searchMovies}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"search\"\n                            onChange={(e) => setSearchKey(e.target.value)}\n                        />\n                        <button\n                            className=\"btn btn-primary\"\n                            onClick={searchMovies}\n                        >\n                            Search\n                        </button>\n                    </form>\n                    <div className=\"category-buttons\">\n                        <select\n                            value={category}\n                            onChange={(e) =>\n                                handleCategoryChange(e.target.value)\n                            }\n                        >\n                            <option value=\"\">All</option>\n                            {Object.entries(categories).map(([id, name]) => (\n                                <option key={id} value={id}>\n                                    {name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"category-buttons\">\n                <button className=\"filter-button\" onClick={fetchTopRatedMoviesAll}>All time</button>\n                <button className=\"filter-button\" onClick={fetchPopularMovies}>Popular</button>\n                <button className=\"filter-button\" onClick={fetchRecentMovies}>Recent</button>\n                <button className=\"filter-button\" onClick={fetchTopRatedMovies}>Top Rated</button>\n            </div>\n                </div>\n            </header>\n            <div>\n            <MovieCarousel movies={movies} selectMovie={selectMovie} />\n                <main>\n\n\n                    {movie ? (\n                        <div\n                            className=\"viewtrailer\"\n                            style={{\n                                backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n                            }}\n                        >\n                            {trailer && (\n                                <div className=\"trailer-container\">\n                                    <img\n                                        src={`${IMAGE_PATH}${movie.poster_path}`}\n                                        alt={movie.title}\n                                        className=\"movie-poster\"\n                                        width=\"560\"\n                                        height=\"815\"\n                                    />\n                                    <iframe\n                                        width=\"560\"\n                                        height=\"315\"\n                                        src={`https://www.youtube.com/embed/${trailer.key}`}\n                                        title=\"YouTube video player\"\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                        allowFullScreen\n                                    ></iframe>\n                                </div>\n                            )}\n                            <div className=\"cast-container\">\n                                <h2>Cast</h2>\n                                <ul>\n                                    {cast\n                                        .filter(\n                                            (actor) =>\n                                                actor.department === \"Directing\"\n                                        )\n                                        .map((director) => (\n                                            <li key={director.id}>\n                                                Director: {director.name}\n                                            </li>\n                                        ))}\n                                    {cast\n                                        .filter(\n                                            (actor) =>\n                                                actor.order <= 10 &&\n                                                actor.department !== \"Directing\"\n                                        )\n                                        .map((actor) => (\n                                            <li key={actor.id}>\n                                                {actor.character} - {actor.name}\n                                            </li>\n                                        ))}\n                                </ul>\n                            </div>\n                            {playing ? (\n                                <button\n                                    onClick={() => setPlaying(false)}\n                                    className=\"boton\"\n                                >\n                                    Close\n                                </button>\n                            ) : (\n                                <div className=\"container\">\n                                    <div>\n                                        <h1 className=\"text-white\">\n                                            {movie.title}\n                                        </h1>\n                                        <p className=\"text-white\">\n                                            {movie.overview}\n                                        </p>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    ) : null}\n                </main>\n            </div>\n\n            <div className=\"container_movies\">\n                <div className=\"row_movies\">\n                    {movies.map((movie) => (\n                        <div\n                            key={movie.id}\n                            className=\"col_movies\"\n                            onClick={() => selectMovie(movie)}\n                        >\n                            <img\n                                src={`${URL_IMAGE + movie.poster_path}`}\n                                alt=\"\"\n                                height={600}\n                                width=\"150%\"\n                            />\n                            <h4>{movie.title}</h4>\n                            <p>Rating: {movie.vote_average}</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}