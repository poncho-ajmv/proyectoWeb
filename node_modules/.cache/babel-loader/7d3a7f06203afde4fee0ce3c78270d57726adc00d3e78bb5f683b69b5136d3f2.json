{"ast":null,"code":"var _jsxFileName = \"/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { movies } from \"./moviesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = () => {\n  _s();\n  const [randomMovies, setRandomMovies] = useState([]);\n  useEffect(() => {\n    generateRandomMovies();\n  }, []);\n  const generateRandomMovies = () => {\n    const randomMoviesArray = [];\n    while (randomMoviesArray.length < 5) {\n      const randomIndex = Math.floor(Math.random() * movies.length);\n      if (!randomMoviesArray.includes(randomIndex)) {\n        randomMoviesArray.push(randomIndex);\n      }\n    }\n    setRandomMovies(randomMoviesArray);\n  };\n  const handleClick = () => {\n    generateRandomMovies();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Random Movie Posters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-posters\",\n      children: randomMovies.map(index => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movies[index].poster,\n        alt: movies[index].title,\n        className: \"movie-poster\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Next Random Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieCard, \"QewMyE1AR3vt//Ky2asHEZqo2SI=\");\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","useState","useEffect","movies","jsxDEV","_jsxDEV","MovieCard","_s","randomMovies","setRandomMovies","generateRandomMovies","randomMoviesArray","length","randomIndex","Math","floor","random","includes","push","handleClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","src","poster","alt","title","onClick","_c","$RefreshReg$"],"sources":["/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { movies } from \"./moviesData\";\n\nconst MovieCard = () => {\n    const [randomMovies, setRandomMovies] = useState([]);\n\n    useEffect(() => {\n        generateRandomMovies();\n    }, []);\n\n    const generateRandomMovies = () => {\n        const randomMoviesArray = [];\n        while (randomMoviesArray.length < 5) {\n            const randomIndex = Math.floor(Math.random() * movies.length);\n            if (!randomMoviesArray.includes(randomIndex)) {\n                randomMoviesArray.push(randomIndex);\n            }\n        }\n        setRandomMovies(randomMoviesArray);\n    };\n\n    const handleClick = () => {\n        generateRandomMovies();\n    };\n\n    return (\n        <div className=\"movie-card\">\n            <h2>Random Movie Posters</h2>\n            <div className=\"movie-posters\">\n                {randomMovies.map((index) => (\n                    <img\n                        key={index}\n                        src={movies[index].poster}\n                        alt={movies[index].title}\n                        className=\"movie-poster\"\n                    />\n                ))}\n            </div>\n            <button onClick={handleClick}>Next Random Movies</button>\n        </div>\n    );\n};\n\nexport default MovieCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZQ,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,iBAAiB,GAAG,EAAE;IAC5B,OAAOA,iBAAiB,CAACC,MAAM,GAAG,CAAC,EAAE;MACjC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGb,MAAM,CAACS,MAAM,CAAC;MAC7D,IAAI,CAACD,iBAAiB,CAACM,QAAQ,CAACJ,WAAW,CAAC,EAAE;QAC1CF,iBAAiB,CAACO,IAAI,CAACL,WAAW,CAAC;MACvC;IACJ;IACAJ,eAAe,CAACE,iBAAiB,CAAC;EACtC,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACtBT,oBAAoB,CAAC,CAAC;EAC1B,CAAC;EAED,oBACIL,OAAA;IAAKe,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBhB,OAAA;MAAAgB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BpB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,EACzBb,YAAY,CAACkB,GAAG,CAAEC,KAAK,iBACpBtB,OAAA;QAEIuB,GAAG,EAAEzB,MAAM,CAACwB,KAAK,CAAC,CAACE,MAAO;QAC1BC,GAAG,EAAE3B,MAAM,CAACwB,KAAK,CAAC,CAACI,KAAM;QACzBX,SAAS,EAAC;MAAc,GAHnBO,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNpB,OAAA;MAAQ2B,OAAO,EAAEb,WAAY;MAAAE,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAAClB,EAAA,CAtCID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}