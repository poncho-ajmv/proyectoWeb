{"ast":null,"code":"import axios from \"axios\"; // Asegúrate de tener instalada la biblioteca axios\n\nconst apiKey = \"674684d28cd5c404ad1bf06cd1a5d482\";\nconst fetchPoster = async movieTitle => {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${encodeURIComponent(movieTitle)}`);\n    const posterPath = response.data.results[0].poster_path; // Suponiendo que obtienes el primer resultado\n    if (posterPath) {\n      return `https://image.tmdb.org/t/p/w500/${posterPath}`;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error al obtener el póster:\", error);\n    return null;\n  }\n};\nconst updateMoviesWithPoster = async () => {\n  for (const movie of movies) {\n    const posterUrl = await fetchPoster(movie.title);\n    if (posterUrl) {\n      movie.poster = posterUrl;\n    } else {\n      console.log(`No se encontró el póster para la película \"${movie.title}\"`);\n    }\n  }\n};\n\n// Llama a la función para actualizar los pósters de las películas\nupdateMoviesWithPoster().then(() => {\n  console.log(\"Pósters actualizados correctamente.\");\n  console.log(movies); // Muestra las películas con los nuevos pósters\n}).catch(error => {\n  console.error(\"Error al actualizar los pósters:\", error);\n});","map":{"version":3,"names":["axios","apiKey","fetchPoster","movieTitle","response","get","encodeURIComponent","posterPath","data","results","poster_path","error","console","updateMoviesWithPoster","movie","movies","posterUrl","title","poster","log","then","catch"],"sources":["/home/poncho/toto/CODE/React/proyect/src/moviesData.js"],"sourcesContent":["import axios from \"axios\"; // Asegúrate de tener instalada la biblioteca axios\n\nconst apiKey = \"674684d28cd5c404ad1bf06cd1a5d482\";\n\nconst fetchPoster = async (movieTitle) => {\n    try {\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${encodeURIComponent(\n                movieTitle\n            )}`\n        );\n        const posterPath = response.data.results[0].poster_path; // Suponiendo que obtienes el primer resultado\n        if (posterPath) {\n            return `https://image.tmdb.org/t/p/w500/${posterPath}`;\n        } else {\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Error al obtener el póster:\", error);\n        return null;\n    }\n};\n\nconst updateMoviesWithPoster = async () => {\n    for (const movie of movies) {\n        const posterUrl = await fetchPoster(movie.title);\n        if (posterUrl) {\n            movie.poster = posterUrl;\n        } else {\n            console.log(\n                `No se encontró el póster para la película \"${movie.title}\"`\n            );\n        }\n    }\n};\n\n// Llama a la función para actualizar los pósters de las películas\nupdateMoviesWithPoster()\n    .then(() => {\n        console.log(\"Pósters actualizados correctamente.\");\n        console.log(movies); // Muestra las películas con los nuevos pósters\n    })\n    .catch((error) => {\n        console.error(\"Error al actualizar los pósters:\", error);\n    });\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,MAAMC,MAAM,GAAG,kCAAkC;AAEjD,MAAMC,WAAW,GAAG,MAAOC,UAAU,IAAK;EACtC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC3B,qDAAoDJ,MAAO,UAASK,kBAAkB,CACnFH,UACJ,CAAE,EACN,CAAC;IACD,MAAMI,UAAU,GAAGH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACzD,IAAIH,UAAU,EAAE;MACZ,OAAQ,mCAAkCA,UAAW,EAAC;IAC1D,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,IAAI;EACf;AACJ,CAAC;AAED,MAAME,sBAAsB,GAAG,MAAAA,CAAA,KAAY;EACvC,KAAK,MAAMC,KAAK,IAAIC,MAAM,EAAE;IACxB,MAAMC,SAAS,GAAG,MAAMd,WAAW,CAACY,KAAK,CAACG,KAAK,CAAC;IAChD,IAAID,SAAS,EAAE;MACXF,KAAK,CAACI,MAAM,GAAGF,SAAS;IAC5B,CAAC,MAAM;MACHJ,OAAO,CAACO,GAAG,CACN,8CAA6CL,KAAK,CAACG,KAAM,GAC9D,CAAC;IACL;EACJ;AACJ,CAAC;;AAED;AACAJ,sBAAsB,CAAC,CAAC,CACnBO,IAAI,CAAC,MAAM;EACRR,OAAO,CAACO,GAAG,CAAC,qCAAqC,CAAC;EAClDP,OAAO,CAACO,GAAG,CAACJ,MAAM,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CACDM,KAAK,CAAEV,KAAK,IAAK;EACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;AAC5D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}