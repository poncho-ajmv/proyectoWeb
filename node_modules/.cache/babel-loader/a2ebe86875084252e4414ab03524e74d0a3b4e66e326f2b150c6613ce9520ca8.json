{"ast":null,"code":"// moviesData.js\nconst MOVIEPOSTERDB_API_KEY = \"234\";\nconst MOVIEPOSTERDB_API_SECRET = \"tS5SPZa4ikob6q5ExKK86NRdvLIqAQLWxj93bFxZ\";\nconst fetchMovieDetails = async imdbId => {\n  try {\n    const response = await fetch(`http://api.movieposterdb.com/movie/${imdbId}?api_key=${MOVIEPOSTERDB_API_KEY}&api_secret=${MOVIEPOSTERDB_API_SECRET}`);\n    const data = await response.json();\n    if (data && data.Posters && data.Posters.length > 0) {\n      const posterUrl = data.Posters[0].Url;\n      const title = data.Title;\n      return {\n        poster: posterUrl,\n        title: title\n      };\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error fetching movie details:\", error);\n    return null;\n  }\n};\nconst movies = [{\n  imdbId: \"tt1375666\",\n  // Ejemplo de ID de IMDb (Inception)\n  people: []\n}, {\n  imdbId: \"tt0068646\",\n  // Ejemplo de ID de IMDb (The Godfather)\n  people: []\n}\n// Agrega más películas con sus respectivos IDs de IMDb\n];\nconst fillMovieDetails = async () => {\n  for (const movie of movies) {\n    const movieDetails = await fetchMovieDetails(movie.imdbId);\n    if (movieDetails) {\n      movie.title = movieDetails.title;\n      movie.poster = movieDetails.poster;\n    }\n  }\n};\nfillMovieDetails();\nexport default movies;","map":{"version":3,"names":["MOVIEPOSTERDB_API_KEY","MOVIEPOSTERDB_API_SECRET","fetchMovieDetails","imdbId","response","fetch","data","json","Posters","length","posterUrl","Url","title","Title","poster","error","console","movies","people","fillMovieDetails","movie","movieDetails"],"sources":["/home/poncho/toto/CODE/React/proyect/src/moviesData.js"],"sourcesContent":["// moviesData.js\nconst MOVIEPOSTERDB_API_KEY = \"234\";\nconst MOVIEPOSTERDB_API_SECRET = \"tS5SPZa4ikob6q5ExKK86NRdvLIqAQLWxj93bFxZ\";\n\nconst fetchMovieDetails = async (imdbId) => {\n    try {\n        const response = await fetch(\n            `http://api.movieposterdb.com/movie/${imdbId}?api_key=${MOVIEPOSTERDB_API_KEY}&api_secret=${MOVIEPOSTERDB_API_SECRET}`\n        );\n        const data = await response.json();\n        if (data && data.Posters && data.Posters.length > 0) {\n            const posterUrl = data.Posters[0].Url;\n            const title = data.Title;\n            return { poster: posterUrl, title: title };\n        } else {\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n        return null;\n    }\n};\n\nconst movies = [\n    {\n        imdbId: \"tt1375666\", // Ejemplo de ID de IMDb (Inception)\n        people: [],\n    },\n    {\n        imdbId: \"tt0068646\", // Ejemplo de ID de IMDb (The Godfather)\n        people: [],\n    },\n    // Agrega más películas con sus respectivos IDs de IMDb\n];\n\nconst fillMovieDetails = async () => {\n    for (const movie of movies) {\n        const movieDetails = await fetchMovieDetails(movie.imdbId);\n        if (movieDetails) {\n            movie.title = movieDetails.title;\n            movie.poster = movieDetails.poster;\n        }\n    }\n};\n\nfillMovieDetails();\n\nexport default movies;\n"],"mappings":"AAAA;AACA,MAAMA,qBAAqB,GAAG,KAAK;AACnC,MAAMC,wBAAwB,GAAG,0CAA0C;AAE3E,MAAMC,iBAAiB,GAAG,MAAOC,MAAM,IAAK;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,sCAAqCF,MAAO,YAAWH,qBAAsB,eAAcC,wBAAyB,EACzH,CAAC;IACD,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,IAAIA,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MACjD,MAAMC,SAAS,GAAGJ,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACG,GAAG;MACrC,MAAMC,KAAK,GAAGN,IAAI,CAACO,KAAK;MACxB,OAAO;QAAEC,MAAM,EAAEJ,SAAS;QAAEE,KAAK,EAAEA;MAAM,CAAC;IAC9C,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI;EACf;AACJ,CAAC;AAED,MAAME,MAAM,GAAG,CACX;EACId,MAAM,EAAE,WAAW;EAAE;EACrBe,MAAM,EAAE;AACZ,CAAC,EACD;EACIf,MAAM,EAAE,WAAW;EAAE;EACrBe,MAAM,EAAE;AACZ;AACA;AAAA,CACH;AAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACjC,KAAK,MAAMC,KAAK,IAAIH,MAAM,EAAE;IACxB,MAAMI,YAAY,GAAG,MAAMnB,iBAAiB,CAACkB,KAAK,CAACjB,MAAM,CAAC;IAC1D,IAAIkB,YAAY,EAAE;MACdD,KAAK,CAACR,KAAK,GAAGS,YAAY,CAACT,KAAK;MAChCQ,KAAK,CAACN,MAAM,GAAGO,YAAY,CAACP,MAAM;IACtC;EACJ;AACJ,CAAC;AAEDK,gBAAgB,CAAC,CAAC;AAElB,eAAeF,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}