{"ast":null,"code":"// moviesData.js\nimport axios from 'axios';\nconst extractYoutubeId = url => {\n  const regExp = /^.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n  const match = url.match(regExp);\n  return match && match[1].length === 11 ? match[1] : null;\n};\nconst fetchMovies = async () => {\n  try {\n    const response = await axios.get('URL_DE_TU_API');\n    return response.data.movies; // Suponiendo que la API devuelve un objeto con una propiedad 'movies' que contiene la información de las películas\n  } catch (error) {\n    console.error('Error al obtener las películas:', error);\n    return [];\n  }\n};\nconst moviesData = async () => {\n  const movies = await fetchMovies();\n  movies.forEach(movie => {\n    movie.youtubeId = extractYoutubeId(movie.youtubeLink);\n  });\n  return movies;\n};\nexport default moviesData;","map":{"version":3,"names":["axios","extractYoutubeId","url","regExp","match","length","fetchMovies","response","get","data","movies","error","console","moviesData","forEach","movie","youtubeId","youtubeLink"],"sources":["/home/poncho/toto/CODE/React/proyect/src/App.js"],"sourcesContent":["// moviesData.js\nimport axios from 'axios';\n\nconst extractYoutubeId = (url) => {\n    const regExp = /^.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n    const match = url.match(regExp);\n    return match && match[1].length === 11 ? match[1] : null;\n};\n\nconst fetchMovies = async () => {\n    try {\n        const response = await axios.get('URL_DE_TU_API');\n        return response.data.movies; // Suponiendo que la API devuelve un objeto con una propiedad 'movies' que contiene la información de las películas\n    } catch (error) {\n        console.error('Error al obtener las películas:', error);\n        return [];\n    }\n};\n\nconst moviesData = async () => {\n    const movies = await fetchMovies();\n    movies.forEach((movie) => {\n        movie.youtubeId = extractYoutubeId(movie.youtubeLink);\n    });\n    return movies;\n};\n\nexport default moviesData;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,gBAAgB,GAAIC,GAAG,IAAK;EAC9B,MAAMC,MAAM,GAAG,mEAAmE;EAClF,MAAMC,KAAK,GAAGF,GAAG,CAACE,KAAK,CAACD,MAAM,CAAC;EAC/B,OAAOC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACC,MAAM,KAAK,EAAE,GAAGD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;AAC5D,CAAC;AAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,eAAe,CAAC;IACjD,OAAOD,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC,CAAC;EACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO,EAAE;EACb;AACJ,CAAC;AAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC3B,MAAMH,MAAM,GAAG,MAAMJ,WAAW,CAAC,CAAC;EAClCI,MAAM,CAACI,OAAO,CAAEC,KAAK,IAAK;IACtBA,KAAK,CAACC,SAAS,GAAGf,gBAAgB,CAACc,KAAK,CAACE,WAAW,CAAC;EACzD,CAAC,CAAC;EACF,OAAOP,MAAM;AACjB,CAAC;AAED,eAAeG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}