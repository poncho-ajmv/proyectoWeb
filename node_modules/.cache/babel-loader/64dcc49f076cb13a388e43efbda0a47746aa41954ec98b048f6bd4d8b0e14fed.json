{"ast":null,"code":"var _jsxFileName = \"/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { movies } from \"./moviesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = () => {\n  _s();\n  const [randomMovies, setRandomMovies] = useState([]);\n  useEffect(() => {\n    generateRandomMovies();\n  }, []);\n  const generateRandomMovies = () => {\n    const randomIndexes = [];\n    while (randomIndexes.length < 5) {\n      const randomIndex = Math.floor(Math.random() * movies.length);\n      if (!randomIndexes.includes(randomIndex)) {\n        randomIndexes.push(randomIndex);\n      }\n    }\n    const randomMoviesList = randomIndexes.map(index => movies[index]);\n    setRandomMovies(randomMoviesList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Random Movie Posters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card-list\",\n      children: randomMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.poster,\n          alt: movie.title,\n          className: \"movie-poster\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = \"URL_DEL_POSTER_ALTERNATIVO\"; // Aquí puedes proporcionar una URL de imagen alternativa o un mensaje de error\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieCard, \"QewMyE1AR3vt//Ky2asHEZqo2SI=\");\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","useState","useEffect","movies","jsxDEV","_jsxDEV","MovieCard","_s","randomMovies","setRandomMovies","generateRandomMovies","randomIndexes","length","randomIndex","Math","floor","random","includes","push","randomMoviesList","map","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","movie","src","poster","alt","title","onError","e","target","onerror","_c","$RefreshReg$"],"sources":["/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { movies } from \"./moviesData\";\n\nconst MovieCard = () => {\n    const [randomMovies, setRandomMovies] = useState([]);\n\n    useEffect(() => {\n        generateRandomMovies();\n    }, []);\n\n    const generateRandomMovies = () => {\n        const randomIndexes = [];\n        while (randomIndexes.length < 5) {\n            const randomIndex = Math.floor(Math.random() * movies.length);\n            if (!randomIndexes.includes(randomIndex)) {\n                randomIndexes.push(randomIndex);\n            }\n        }\n        const randomMoviesList = randomIndexes.map((index) => movies[index]);\n        setRandomMovies(randomMoviesList);\n    };\n\n    return (\n        <div className=\"movie-card-container\">\n            <h2>Random Movie Posters</h2>\n            <div className=\"movie-card-list\">\n                {randomMovies.map((movie, index) => (\n                    <div key={index} className=\"movie-card\">\n                        <img\n                            src={movie.poster}\n                            alt={movie.title}\n                            className=\"movie-poster\"\n                            onError={(e) => {\n                                e.target.onerror = null;\n                                e.target.src = \"URL_DEL_POSTER_ALTERNATIVO\"; // Aquí puedes proporcionar una URL de imagen alternativa o un mensaje de error\n                            }}\n                        />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default MovieCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZQ,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,aAAa,GAAG,EAAE;IACxB,OAAOA,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGb,MAAM,CAACS,MAAM,CAAC;MAC7D,IAAI,CAACD,aAAa,CAACM,QAAQ,CAACJ,WAAW,CAAC,EAAE;QACtCF,aAAa,CAACO,IAAI,CAACL,WAAW,CAAC;MACnC;IACJ;IACA,MAAMM,gBAAgB,GAAGR,aAAa,CAACS,GAAG,CAAEC,KAAK,IAAKlB,MAAM,CAACkB,KAAK,CAAC,CAAC;IACpEZ,eAAe,CAACU,gBAAgB,CAAC;EACrC,CAAC;EAED,oBACId,OAAA;IAAKiB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACjClB,OAAA;MAAAkB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BtB,OAAA;MAAKiB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3Bf,YAAY,CAACY,GAAG,CAAC,CAACQ,KAAK,EAAEP,KAAK,kBAC3BhB,OAAA;QAAiBiB,SAAS,EAAC,YAAY;QAAAC,QAAA,eACnClB,OAAA;UACIwB,GAAG,EAAED,KAAK,CAACE,MAAO;UAClBC,GAAG,EAAEH,KAAK,CAACI,KAAM;UACjBV,SAAS,EAAC,cAAc;UACxBW,OAAO,EAAGC,CAAC,IAAK;YACZA,CAAC,CAACC,MAAM,CAACC,OAAO,GAAG,IAAI;YACvBF,CAAC,CAACC,MAAM,CAACN,GAAG,GAAG,4BAA4B,CAAC,CAAC;UACjD;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC,GATIN,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpB,EAAA,CAvCID,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}