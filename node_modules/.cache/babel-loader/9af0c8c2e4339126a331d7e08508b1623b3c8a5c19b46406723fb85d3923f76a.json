{"ast":null,"code":"var _jsxFileName = \"/home/poncho/toto/CODE/React/proyect/src/moviesData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { moviesBySagaAndCategory } from './moviesData';\nimport './MovieDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetails() {\n  _s();\n  const [selectedSaga, setSelectedSaga] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const handleSagaChange = event => {\n    setSelectedSaga(event.target.value);\n    setSelectedCategory(null); // Reset category when saga changes\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n    setSelectedSaga(null); // Reset saga when category changes\n  };\n  const getFilteredMovies = () => {\n    if (selectedSaga) {\n      return moviesBySagaAndCategory[selectedSaga];\n    } else if (selectedCategory) {\n      const movies = {};\n      Object.keys(moviesBySagaAndCategory).forEach(saga => {\n        if (moviesBySagaAndCategory[saga][selectedCategory]) {\n          movies[saga] = moviesBySagaAndCategory[saga][selectedCategory];\n        }\n      });\n      return movies;\n    } else {\n      return moviesBySagaAndCategory;\n    }\n  };\n  const renderMovies = movies => {\n    return Object.keys(movies).map(saga => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saga-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: saga\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-grid\",\n        children: movies[saga].map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", movie.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", movie.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, movie.title, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, saga, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movie Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sagas\",\n          children: \"Saga:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"sagas\",\n          onChange: handleSagaChange,\n          value: selectedSaga || '',\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Sagas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), Object.keys(moviesBySagaAndCategory).map(saga => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: saga,\n            children: saga\n          }, saga, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categories\",\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"categories\",\n          onChange: handleCategoryChange,\n          value: selectedCategory || '',\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), Object.keys(moviesBySagaAndCategory).reduce((categories, saga) => {\n            Object.keys(moviesBySagaAndCategory[saga]).forEach(category => {\n              if (!categories.includes(category)) {\n                categories.push(category);\n              }\n            });\n            return categories;\n          }, []).map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies\",\n      children: renderMovies(getFilteredMovies())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"V2qUYEVQ8KhnrsPSB8LmCg3yBxo=\");\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","moviesBySagaAndCategory","jsxDEV","_jsxDEV","MovieDetails","_s","selectedSaga","setSelectedSaga","selectedCategory","setSelectedCategory","handleSagaChange","event","target","value","handleCategoryChange","getFilteredMovies","movies","Object","keys","forEach","saga","renderMovies","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","movie","title","src","poster","alt","rating","description","htmlFor","id","onChange","reduce","categories","category","includes","push","_c","$RefreshReg$"],"sources":["/home/poncho/toto/CODE/React/proyect/src/moviesData.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { moviesBySagaAndCategory } from './moviesData';\nimport './MovieDetails.css';\n\nfunction MovieDetails() {\n  const [selectedSaga, setSelectedSaga] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  const handleSagaChange = (event) => {\n    setSelectedSaga(event.target.value);\n    setSelectedCategory(null); // Reset category when saga changes\n  };\n\n  const handleCategoryChange = (event) => {\n    setSelectedCategory(event.target.value);\n    setSelectedSaga(null); // Reset saga when category changes\n  };\n\n  const getFilteredMovies = () => {\n    if (selectedSaga) {\n      return moviesBySagaAndCategory[selectedSaga];\n    } else if (selectedCategory) {\n      const movies = {};\n      Object.keys(moviesBySagaAndCategory).forEach(saga => {\n        if (moviesBySagaAndCategory[saga][selectedCategory]) {\n          movies[saga] = moviesBySagaAndCategory[saga][selectedCategory];\n        }\n      });\n      return movies;\n    } else {\n      return moviesBySagaAndCategory;\n    }\n  };\n\n  const renderMovies = (movies) => {\n    return Object.keys(movies).map(saga => (\n      <div key={saga} className=\"saga-container\">\n        <h3>{saga}</h3>\n        <div className=\"movies-grid\">\n          {movies[saga].map(movie => (\n            <div key={movie.title} className=\"movie\">\n              <h4>{movie.title}</h4>\n              <img src={movie.poster} alt={movie.title} />\n              <p>Rating: {movie.rating}</p>\n              <p>Description: {movie.description}</p>\n              {/* Aquí podrías agregar más detalles como reseñas */}\n            </div>\n          ))}\n        </div>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"movie-details\">\n      <h2>Movie Details</h2>\n      <div className=\"filters\">\n        <div className=\"filter\">\n          <label htmlFor=\"sagas\">Saga:</label>\n          <select id=\"sagas\" onChange={handleSagaChange} value={selectedSaga || ''}>\n            <option value=\"\">All Sagas</option>\n            {Object.keys(moviesBySagaAndCategory).map(saga => (\n              <option key={saga} value={saga}>{saga}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"filter\">\n          <label htmlFor=\"categories\">Category:</label>\n          <select id=\"categories\" onChange={handleCategoryChange} value={selectedCategory || ''}>\n            <option value=\"\">All Categories</option>\n            {Object.keys(moviesBySagaAndCategory).reduce((categories, saga) => {\n              Object.keys(moviesBySagaAndCategory[saga]).forEach(category => {\n                if (!categories.includes(category)) {\n                  categories.push(category);\n                }\n              });\n              return categories;\n            }, []).map(category => (\n              <option key={category} value={category}>{category}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <div className=\"movies\">\n        {renderMovies(getFilteredMovies())}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}