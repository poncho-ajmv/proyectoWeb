{"ast":null,"code":"var _jsxFileName = \"/home/toto/Downloads/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\";\nimport Footer from \"./Footer\";\nimport MovieDetail from \"./MovieDetail\";\n\n/* CSS */\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"./MovieCarousel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const API_URL = \"https://api.themoviedb.org/3\";\n  const API_KEY = \"674684d28cd5c404ad1bf06cd1a5d482\";\n  const IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\n  const URL_IMAGE = \"https://image.tmdb.org/t/p/original\";\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({\n    title: \"Loading Movies\"\n  });\n  const [playing, setPlaying] = useState(false);\n  const [cast, setCast] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"\");\n  const fetchMovies = async (searchKey, category, searchType, fromDate, toDate) => {\n    const type = searchKey ? \"search\" : \"discover\";\n    let params = {\n      api_key: API_KEY,\n      query: searchKey,\n      with_genres: category ? category : undefined\n    };\n\n    // Si hay un tipo de búsqueda específico, lo agregamos a los parámetros\n    if (searchType) {\n      params = {\n        ...params,\n        ...{\n          sort_by: searchType\n        }\n      };\n    }\n\n    // Agregar parámetros de fecha si se proporcionan\n    if (fromDate && toDate) {\n      params[\"primary_release_date.gte\"] = fromDate;\n      params[\"primary_release_date.lte\"] = toDate;\n    }\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: params\n    });\n    const filteredMovies = results.filter(movie => !movie.title.toLowerCase().includes(\"tiburon\") && movie.title !== \"No Way Up\" && movie.title !== \"Jaws\" && movie.title !== \"Sharknado\" && movie.title !== \"Deep Blue Sea\" && movie.title !== \"The Meg\" && movie.title !== \"Shark\" && movie.title !== \"Under Paris\" // Agregar \"Under Paris\" a la lista de películas filtradas\n    );\n    setMovies(filteredMovies);\n    setMovie(filteredMovies[0]);\n    if (filteredMovies.length) {\n      await fetchMovie(filteredMovies[0].id);\n    }\n  };\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos,credits\"\n      }\n    });\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n    setMovie(data);\n    if (data.credits && data.credits.cast) {\n      setCast(data.credits.cast);\n    }\n  };\n  const selectMovie = async movie => {\n    fetchMovie(movie.id);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchKey, category, searchType);\n  };\n  const handleCategoryChange = category => {\n    setCategory(category);\n    setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n    fetchMovies(searchKey, category, searchType);\n  };\n  useEffect(() => {\n    // eslint-disable-next-line\n    fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n  }, []);\n  const fetchPopularMovies = async () => {\n    setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n    fetchMovies(searchKey, category, \"popularity.desc\");\n  };\n  const fetchRecentMovies = async () => {\n    const currentDate = new Date();\n    const fromDate = new Date(currentDate);\n    const toDate = new Date(currentDate);\n\n    // Restar y sumar 1 mes a la fecha actual\n    fromDate.setMonth(currentDate.getMonth() - 1);\n    toDate.setMonth(currentDate.getMonth() + 1);\n\n    // Formatear las fechas para el formato requerido por la API (YYYY-MM-DD)\n    const fromDateString = fromDate.toISOString().split(\"T\")[0];\n    const toDateString = toDate.toISOString().split(\"T\")[0];\n    setSearchType(\"release_date.desc\"); // Establecer el tipo de búsqueda como más reciente\n\n    // Hacer la llamada a la API con las fechas limitadas\n    fetchMovies(searchKey, category, `release_date.desc`, fromDateString, toDateString);\n  };\n  const fetchTopRatedMovies = async () => {\n    setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n    fetchMovies(searchKey, category, \"vote_average.desc\");\n  };\n  const fetchTopRatedMoviesAll = async () => {\n    setSearchType(\"top_rated\"); // Establece el tipo de búsqueda como top_rated\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/movie/top_rated`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    setMovies(results);\n    setMovie(results[0]);\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  };\n  const categories = {\n    28: \"Action\",\n    35: \"Comedy\",\n    18: \"Drama\",\n    27: \"Horror\",\n    10749: \"Romance\",\n    878: \"Science Fiction\",\n    10751: \"Family\",\n    16: \"Animation\",\n    80: \"Crime\",\n    37: \"Western\",\n    36: \"History\",\n    14: \"Fantasy\",\n    53: \"Thriller\",\n    10752: \"War\",\n    12: \"Adventure\",\n    99: \"Documentary\",\n    10402: \"Music\",\n    10770: \"TV Movie\",\n    9648: \"Mystery\"\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"menu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-and-search\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"logo\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://imgfz.com/i/5hQ3ZSJ.png\",\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"container mb-4\",\n            onSubmit: searchMovies,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"search\",\n              onChange: e => setSearchKey(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: searchMovies,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: category,\n              onChange: e => handleCategoryChange(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this), Object.entries(categories).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: id,\n                children: name\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button\",\n              onClick: fetchTopRatedMoviesAll,\n              children: \"All time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button\",\n              onClick: fetchPopularMovies,\n              children: \"Popular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button\",\n              onClick: fetchRecentMovies,\n              children: \"Recent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button\",\n              onClick: fetchTopRatedMovies,\n              children: \"Top Rated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(MovieCarousel, {\n            movies: movies,\n            selectMovie: selectMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container_movies\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row_movies\",\n              children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col_movies\",\n                onClick: () => selectMovie(movie),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${URL_IMAGE + movie.poster_path}`,\n                  alt: \"\",\n                  height: 600,\n                  width: \"150%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: movie.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Rating: \", movie.vote_average]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 41\n                }, this)]\n              }, movie.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movie/:id\",\n          children: /*#__PURE__*/_jsxDEV(MovieDetail, {\n            movie: movie,\n            trailer: trailer,\n            cast: cast,\n            playing: playing,\n            setPlaying: setPlaying,\n            IMAGE_PATH: IMAGE_PATH\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"dusWROsTQxYpEQFfLbu1OAFHpUk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","BrowserRouter","Router","Route","Switch","Link","MovieCarousel","Footer","MovieDetail","jsxDEV","_jsxDEV","App","_s","API_URL","API_KEY","IMAGE_PATH","URL_IMAGE","movies","setMovies","searchKey","setSearchKey","trailer","setTrailer","movie","setMovie","title","playing","setPlaying","cast","setCast","category","setCategory","searchType","setSearchType","fetchMovies","fromDate","toDate","type","params","api_key","query","with_genres","undefined","sort_by","data","results","get","filteredMovies","filter","toLowerCase","includes","length","fetchMovie","id","append_to_response","videos","find","vid","name","credits","selectMovie","window","scrollTo","searchMovies","e","preventDefault","handleCategoryChange","fetchPopularMovies","fetchRecentMovies","currentDate","Date","setMonth","getMonth","fromDateString","toISOString","split","toDateString","fetchTopRatedMovies","fetchTopRatedMoviesAll","categories","children","className","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","target","value","onClick","Object","entries","map","exact","path","poster_path","height","width","vote_average","_c","$RefreshReg$"],"sources":["/home/toto/Downloads/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\"; \nimport Footer from \"./Footer\";\nimport MovieDetail from \"./MovieDetail\";\n\n/* CSS */\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"./MovieCarousel.css\";\n\nfunction App() {\n    const API_URL = \"https://api.themoviedb.org/3\";\n    const API_KEY = \"674684d28cd5c404ad1bf06cd1a5d482\";\n    const IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\n    const URL_IMAGE = \"https://image.tmdb.org/t/p/original\";\n\n    const [movies, setMovies] = useState([]);\n    const [searchKey, setSearchKey] = useState(\"\");\n    const [trailer, setTrailer] = useState(null);\n    const [movie, setMovie] = useState({ title: \"Loading Movies\" });\n    const [playing, setPlaying] = useState(false);\n    const [cast, setCast] = useState([]);\n    const [category, setCategory] = useState(\"\");\n    const [searchType, setSearchType] = useState(\"\");\n\n    const fetchMovies = async (\n        searchKey,\n        category,\n        searchType,\n        fromDate,\n        toDate\n    ) => {\n        const type = searchKey ? \"search\" : \"discover\";\n        let params = {\n            api_key: API_KEY,\n            query: searchKey,\n            with_genres: category ? category : undefined,\n        };\n\n        // Si hay un tipo de búsqueda específico, lo agregamos a los parámetros\n        if (searchType) {\n            params = { ...params, ...{ sort_by: searchType } };\n        }\n\n        // Agregar parámetros de fecha si se proporcionan\n        if (fromDate && toDate) {\n            params[\"primary_release_date.gte\"] = fromDate;\n            params[\"primary_release_date.lte\"] = toDate;\n        }\n\n        const {\n            data: { results },\n        } = await axios.get(`${API_URL}/${type}/movie`, {\n            params: params,\n        });\n\n        const filteredMovies = results.filter(\n            (movie) =>\n                !movie.title.toLowerCase().includes(\"tiburon\") &&\n                movie.title !== \"No Way Up\" &&\n                movie.title !== \"Jaws\" &&\n                movie.title !== \"Sharknado\" &&\n                movie.title !== \"Deep Blue Sea\" &&\n                movie.title !== \"The Meg\" &&\n                movie.title !== \"Shark\" &&\n                movie.title !== \"Under Paris\" // Agregar \"Under Paris\" a la lista de películas filtradas\n        );\n\n        setMovies(filteredMovies);\n        setMovie(filteredMovies[0]);\n\n        if (filteredMovies.length) {\n            await fetchMovie(filteredMovies[0].id);\n        }\n    };\n\n    const fetchMovie = async (id) => {\n        const { data } = await axios.get(`${API_URL}/movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n                append_to_response: \"videos,credits\",\n            },\n        });\n\n        if (data.videos && data.videos.results) {\n            const trailer = data.videos.results.find(\n                (vid) => vid.name === \"Official Trailer\"\n            );\n            setTrailer(trailer ? trailer : data.videos.results[0]);\n        }\n        setMovie(data);\n        if (data.credits && data.credits.cast) {\n            setCast(data.credits.cast);\n        }\n    };\n\n    const selectMovie = async (movie) => {\n        fetchMovie(movie.id);\n        setMovie(movie);\n        window.scrollTo(0, 0);\n    };\n\n    const searchMovies = (e) => {\n        e.preventDefault();\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    const handleCategoryChange = (category) => {\n        setCategory(category);\n        setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    useEffect(() => {\n        // eslint-disable-next-line\n        fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n    }, []);\n\n    const fetchPopularMovies = async () => {\n        setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n        fetchMovies(searchKey, category, \"popularity.desc\");\n    };\n\n    const fetchRecentMovies = async () => {\n        const currentDate = new Date();\n        const fromDate = new Date(currentDate);\n        const toDate = new Date(currentDate);\n\n        // Restar y sumar 1 mes a la fecha actual\n        fromDate.setMonth(currentDate.getMonth() - 1);\n        toDate.setMonth(currentDate.getMonth() + 1);\n\n        // Formatear las fechas para el formato requerido por la API (YYYY-MM-DD)\n        const fromDateString = fromDate.toISOString().split(\"T\")[0];\n        const toDateString = toDate.toISOString().split(\"T\")[0];\n\n        setSearchType(\"release_date.desc\"); // Establecer el tipo de búsqueda como más reciente\n\n        // Hacer la llamada a la API con las fechas limitadas\n        fetchMovies(\n            searchKey,\n            category,\n            `release_date.desc`,\n            fromDateString,\n            toDateString\n        );\n    };\n\n    const fetchTopRatedMovies = async () => {\n        setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n        fetchMovies(searchKey, category, \"vote_average.desc\");\n    };\n\n    \n    const fetchTopRatedMoviesAll = async () => {\n        setSearchType(\"top_rated\"); // Establece el tipo de búsqueda como top_rated\n        const {\n            data: { results },\n        } = await axios.get(`${API_URL}/movie/top_rated`, {\n            params: {\n                api_key: API_KEY,\n            },\n        });\n\n        setMovies(results);\n        setMovie(results[0]);\n        if (results.length) {\n            await fetchMovie(results[0].id);\n        }\n    };\n\n    const categories = {\n        28: \"Action\",\n        35: \"Comedy\",\n        18: \"Drama\",\n        27: \"Horror\",\n        10749: \"Romance\",\n        878: \"Science Fiction\",\n        10751: \"Family\",\n        16: \"Animation\",\n        80: \"Crime\",\n        37: \"Western\",\n        36: \"History\",\n        14: \"Fantasy\",\n        53: \"Thriller\",\n        10752: \"War\",\n        12: \"Adventure\",\n        99: \"Documentary\",\n        10402: \"Music\",\n        10770: \"TV Movie\",\n        9648: \"Mystery\",\n    };\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <header className=\"menu\">\n                    <div className=\"logo-and-search\">\n                        <Link to=\"/\" className=\"logo\">\n                            <img src=\"http://imgfz.com/i/5hQ3ZSJ.png\" alt=\"Logo\" />\n                        </Link>\n                        <form className=\"container mb-4\" onSubmit={searchMovies}>\n                            <input\n                                type=\"text\"\n                                placeholder=\"search\"\n                                onChange={(e) => setSearchKey(e.target.value)}\n                            />\n                            <button\n                                className=\"btn btn-primary\"\n                                onClick={searchMovies}\n                            >\n                                Search\n                            </button>\n                        </form>\n                        <div className=\"category-buttons\">\n                            <select\n                                value={category}\n                                onChange={(e) =>\n                                    handleCategoryChange(e.target.value)\n                                }\n                            >\n                                <option value=\"\">All</option>\n                                {Object.entries(categories).map(([id, name]) => (\n                                    <option key={id} value={id}>\n                                        {name}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"category-buttons\">\n                            <button className=\"filter-button\" onClick={fetchTopRatedMoviesAll}>All time</button>\n                            <button className=\"filter-button\" onClick={fetchPopularMovies}>Popular</button>\n                            <button className=\"filter-button\" onClick={fetchRecentMovies}>Recent</button>\n                            <button className=\"filter-button\" onClick={fetchTopRatedMovies}>Top Rated</button>\n                        </div>\n                    </div>\n                </header>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <MovieCarousel movies={movies} selectMovie={selectMovie} />\n                        <div className=\"container_movies\">\n                            <div className=\"row_movies\">\n                                {movies.map((movie) => (\n                                    <div\n                                        key={movie.id}\n                                        className=\"col_movies\"\n                                        onClick={() => selectMovie(movie)}\n                                    >\n                                        <img\n                                            src={`${URL_IMAGE + movie.poster_path}`}\n                                            alt=\"\"\n                                            height={600}\n                                            width=\"150%\"\n                                        />\n                                        <h4>{movie.title}</h4>\n                                        <p>Rating: {movie.vote_average}</p>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </Route>\n                    <Route path=\"/movie/:id\">\n                        <MovieDetail\n                            movie={movie}\n                            trailer={trailer}\n                            cast={cast}\n                            playing={playing}\n                            setPlaying={setPlaying}\n                            IMAGE_PATH={IMAGE_PATH}\n                        />\n                    </Route>\n                </Switch>\n\n                <Footer />\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}