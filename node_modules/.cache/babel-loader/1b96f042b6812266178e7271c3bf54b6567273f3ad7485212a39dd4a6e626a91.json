{"ast":null,"code":"var _jsxFileName = \"/home/toto/Downloads/my-app/src/MovieDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\nconst MovieDetail = ({\n  movie,\n  trailer,\n  cast\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewtrailer\",\n    style: {\n      backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`\n    },\n    children: [trailer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trailer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${IMAGE_PATH}${movie.poster_path}`,\n        alt: movie.title,\n        className: \"movie-poster\",\n        width: \"560\",\n        height: \"815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: `https://www.youtube.com/embed/${trailer.key}`,\n        title: \"YouTube video player\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cast-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [cast.filter(actor => actor.department === \"Directing\").map(director => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Director: \", director.name]\n        }, director.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this)), cast.filter(actor => actor.order <= 10 && actor.department !== \"Directing\").map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [actor.character, \" - \", actor.name]\n        }, actor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-white\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white\",\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieDetail, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","IMAGE_PATH","MovieDetail","movie","trailer","cast","_s","id","className","style","backgroundImage","backdrop_path","children","src","poster_path","alt","title","width","height","fileName","_jsxFileName","lineNumber","columnNumber","key","allow","allowFullScreen","filter","actor","department","map","director","name","order","character","overview","_c","$RefreshReg$"],"sources":["/home/toto/Downloads/my-app/src/MovieDetail.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\n\nconst MovieDetail = ({ movie, trailer, cast }) => {\n    const { id } = useParams();\n\n    return (\n        <div\n            className=\"viewtrailer\"\n            style={{\n                backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n            }}\n        >\n            {trailer && (\n                <div className=\"trailer-container\">\n                    <img\n                        src={`${IMAGE_PATH}${movie.poster_path}`}\n                        alt={movie.title}\n                        className=\"movie-poster\"\n                        width=\"560\"\n                        height=\"815\"\n                    />\n                    <iframe\n                        width=\"560\"\n                        height=\"315\"\n                        src={`https://www.youtube.com/embed/${trailer.key}`}\n                        title=\"YouTube video player\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                </div>\n            )}\n            <div className=\"cast-container\">\n                <h2>Cast</h2>\n                <ul>\n                    {cast\n                        .filter((actor) => actor.department === \"Directing\")\n                        .map((director) => (\n                            <li key={director.id}>\n                                Director: {director.name}\n                            </li>\n                        ))}\n                    {cast\n                        .filter(\n                            (actor) =>\n                                actor.order <= 10 &&\n                                actor.department !== \"Directing\"\n                        )\n                        .map((actor) => (\n                            <li key={actor.id}>\n                                {actor.character} - {actor.name}\n                            </li>\n                        ))}\n                </ul>\n            </div>\n            <div className=\"container\">\n                <div>\n                    <h1 className=\"text-white\">{movie.title}</h1>\n                    <p className=\"text-white\">{movie.overview}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MovieDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}