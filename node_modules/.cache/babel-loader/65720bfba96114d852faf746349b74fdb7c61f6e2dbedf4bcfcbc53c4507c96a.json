{"ast":null,"code":"var _jsxFileName = \"/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport movies from \"./moviesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCarousel = () => {\n  _s();\n  const [currentMovieIndex, setCurrentMovieIndex] = useState(0);\n  const [currentDirectors, setCurrentDirectors] = useState([]);\n  const [currentCast, setCurrentCast] = useState([]);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const movie = movies[currentMovieIndex];\n      const {\n        directors,\n        cast\n      } = await getMovieDetails(movie);\n      setCurrentDirectors(directors);\n      setCurrentCast(cast);\n    };\n    fetchMovieDetails();\n  }, [currentMovieIndex]);\n  const handleNext = () => {\n    setCurrentMovieIndex(prevIndex => (prevIndex + 1) % movies.length);\n  };\n  const handlePrev = () => {\n    setCurrentMovieIndex(prevIndex => prevIndex === 0 ? movies.length - 1 : prevIndex - 1);\n  };\n  const getMovieDetails = async movie => {\n    const apiKey = \"674684d28cd5c404ad1bf06cd1a5d482\";\n    const apiUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${encodeURIComponent(movie.title)}`;\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    if (data.results.length > 0) {\n      const movieDetailsUrl = `https://api.themoviedb.org/3/movie/${data.results[0].id}?api_key=${apiKey}&append_to_response=credits,reviews`;\n      const detailsResponse = await fetch(movieDetailsUrl);\n      const detailsData = await detailsResponse.json();\n      const directors = detailsData.credits.crew.filter(person => person.job === \"Director\").map(director => director.name);\n      const cast = detailsData.credits.cast.slice(0, 5).map(actor => ({\n        name: actor.name,\n        character: actor.character\n      }));\n      return {\n        directors,\n        cast\n      };\n    } else {\n      console.log(`No se encontraron detalles para la pelÃ­cula ${movie.title}`);\n      return {\n        directors: [],\n        cast: []\n      };\n    }\n  };\n  const currentMovie = movies[currentMovieIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-fluid\",\n              src: currentMovie.poster,\n              alt: \"Movie Poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trailer-container\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              className: \"embed-responsive-item\",\n              width: \"560\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${currentMovie.youtubeId}`,\n              title: \"YouTube video player\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: currentMovie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Directors:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: currentDirectors.map((director, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: director\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Cast:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: currentCast.map((actor, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [actor.name, \" - \", actor.character]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary me-3\",\n          onClick: handlePrev,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieCarousel, \"Y3KTBjjKeQYElKpDxckKE4U7aPc=\");\n_c = MovieCarousel;\nexport default MovieCarousel;\nvar _c;\n$RefreshReg$(_c, \"MovieCarousel\");","map":{"version":3,"names":["React","useState","useEffect","movies","jsxDEV","_jsxDEV","MovieCarousel","_s","currentMovieIndex","setCurrentMovieIndex","currentDirectors","setCurrentDirectors","currentCast","setCurrentCast","fetchMovieDetails","movie","directors","cast","getMovieDetails","handleNext","prevIndex","length","handlePrev","apiKey","apiUrl","encodeURIComponent","title","response","fetch","data","json","results","movieDetailsUrl","id","detailsResponse","detailsData","credits","crew","filter","person","job","map","director","name","slice","actor","character","console","log","currentMovie","className","children","src","poster","alt","fileName","_jsxFileName","lineNumber","columnNumber","width","height","youtubeId","allow","allowFullScreen","index","onClick","_c","$RefreshReg$"],"sources":["/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieCarousel.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport movies from \"./moviesData\";\n\nconst MovieCarousel = () => {\n    const [currentMovieIndex, setCurrentMovieIndex] = useState(0);\n    const [currentDirectors, setCurrentDirectors] = useState([]);\n    const [currentCast, setCurrentCast] = useState([]);\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            const movie = movies[currentMovieIndex];\n            const { directors, cast } = await getMovieDetails(movie);\n            setCurrentDirectors(directors);\n            setCurrentCast(cast);\n        };\n\n        fetchMovieDetails();\n    }, [currentMovieIndex]);\n\n    const handleNext = () => {\n        setCurrentMovieIndex((prevIndex) => (prevIndex + 1) % movies.length);\n    };\n\n    const handlePrev = () => {\n        setCurrentMovieIndex((prevIndex) =>\n            prevIndex === 0 ? movies.length - 1 : prevIndex - 1\n        );\n    };\n\n    const getMovieDetails = async (movie) => {\n        const apiKey = \"674684d28cd5c404ad1bf06cd1a5d482\";\n        const apiUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${encodeURIComponent(\n            movie.title\n        )}`;\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n\n        if (data.results.length > 0) {\n            const movieDetailsUrl = `https://api.themoviedb.org/3/movie/${data.results[0].id}?api_key=${apiKey}&append_to_response=credits,reviews`;\n            const detailsResponse = await fetch(movieDetailsUrl);\n            const detailsData = await detailsResponse.json();\n            const directors = detailsData.credits.crew\n                .filter((person) => person.job === \"Director\")\n                .map((director) => director.name);\n            const cast = detailsData.credits.cast.slice(0, 5).map((actor) => ({\n                name: actor.name,\n                character: actor.character,\n            }));\n            return { directors, cast };\n        } else {\n            console.log(\n                `No se encontraron detalles para la pelÃ­cula ${movie.title}`\n            );\n            return { directors: [], cast: [] };\n        }\n    };\n\n    const currentMovie = movies[currentMovieIndex];\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-lg-8\">\n                    <div className=\"movie-details\">\n                        <div className=\"poster-container\">\n                            <img\n                                className=\"img-fluid\"\n                                src={currentMovie.poster}\n                                alt=\"Movie Poster\"\n                            />\n                        </div>\n\n                        <div className=\"trailer-container\">\n                            <iframe\n                                className=\"embed-responsive-item\"\n                                width=\"560\"\n                                height=\"315\"\n                                src={`https://www.youtube.com/embed/${currentMovie.youtubeId}`}\n                                title=\"YouTube video player\"\n                                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                                allowFullScreen\n                            ></iframe>\n                        </div>\n\n                        <div className=\"details\">\n                            <h2>{currentMovie.title}</h2>\n                            <h3>Directors:</h3>\n                            <ul>\n                                {currentDirectors.map((director, index) => (\n                                    <li key={index}>{director}</li>\n                                ))}\n                            </ul>\n                            <h3>Cast:</h3>\n                            <ul>\n                                {currentCast.map((actor, index) => (\n                                    <li key={index}>\n                                        {actor.name} - {actor.character}\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row mt-3\">\n                <div className=\"col\">\n                    <button\n                        className=\"btn btn-primary me-3\"\n                        onClick={handlePrev}\n                    >\n                        Previous\n                    </button>\n                    <button className=\"btn btn-primary\" onClick={handleNext}>\n                        Next\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MovieCarousel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}