{"ast":null,"code":"const extractYoutubeId = url => {\n  const regExp = /^.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  return match && match[1].length === 11 ? match[1] : null;\n};\nconst API_KEY = \"TU_CLAVE_DE_API\";\nconst fetchPoster = async title => {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(title)}`);\n    const data = await response.json();\n    if (data.results.length > 0) {\n      return `https://image.tmdb.org/t/p/w500${data.results[0].poster_path}`;\n    } else {\n      console.error(`No se encontró el poster para ${title}`);\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error al obtener el poster:\", error);\n    return null;\n  }\n};\nconst movies = [{\n  title: \"Star Wars Episode I\",\n  poster: \"https://posters.movieposterdb.com/12_10/1999/120915/l_120915_9275ff24.jpg\",\n  youtubeLink: \"https://www.youtube.com/watch?v=bD7bpG-zDJQ\",\n  people: [\"Liam Neeson\", \"Ewan McGregor\", \"Natalie Portman\"],\n  rating: \"6.5\",\n  saga: \"Star Wars\",\n  category: \"Science Fiction\"\n}, {\n  title: \"Avengers: Infinity War\",\n  poster: \"https://posters.movieposterdb.com/12_10/2018/4154756/l_4154756_73b7d5f7.jpg\",\n  youtubeLink: \"https://www.youtube.com/watch?v=6ZfuNTqbHE8\",\n  people: [\"Robert Downey Jr.\", \"Chris Hemsworth\", \"Mark Ruffalo\"],\n  rating: \"8.4\",\n  saga: \"Marvel\",\n  category: \"Super\"\n}];\n\n// Llamada a fetchPoster para obtener los posters de las películas\nconst fetchPosters = async () => {\n  for (const movie of movies) {\n    movie.poster = await fetchPoster(movie.title);\n  }\n};\nfetchPosters();\nconst moviesBySagaAndCategory = movies.reduce((acc, movie) => {\n  const {\n    saga,\n    category\n  } = movie;\n  if (!acc[saga]) {\n    acc[saga] = {};\n  }\n  if (!acc[saga][category]) {\n    acc[saga][category] = [];\n  }\n  acc[saga][category].push(movie);\n  return acc;\n}, {});\nmovies.forEach(movie => {\n  movie.youtubeId = extractYoutubeId(movie.youtubeLink);\n});\nexport { moviesBySagaAndCategory };\nexport default movies;","map":{"version":3,"names":["extractYoutubeId","url","regExp","match","length","API_KEY","fetchPoster","title","response","fetch","encodeURIComponent","data","json","results","poster_path","console","error","movies","poster","youtubeLink","people","rating","saga","category","fetchPosters","movie","moviesBySagaAndCategory","reduce","acc","push","forEach","youtubeId"],"sources":["/home/poncho/toto/CODE/React/proyect/src/moviesData.js"],"sourcesContent":["const extractYoutubeId = (url) => {\n    const regExp =\n        /^.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n    return match && match[1].length === 11 ? match[1] : null;\n};\nconst API_KEY = \"TU_CLAVE_DE_API\";\n\nconst fetchPoster = async (title) => {\n    try {\n        const response = await fetch(\n            `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(\n                title\n            )}`\n        );\n        const data = await response.json();\n        if (data.results.length > 0) {\n            return `https://image.tmdb.org/t/p/w500${data.results[0].poster_path}`;\n        } else {\n            console.error(`No se encontró el poster para ${title}`);\n            return null;\n        }\n    } catch (error) {\n        console.error(\"Error al obtener el poster:\", error);\n        return null;\n    }\n};\n\nconst movies = [\n    {\n        title: \"Star Wars Episode I\",\n        poster: \"https://posters.movieposterdb.com/12_10/1999/120915/l_120915_9275ff24.jpg\",\n        youtubeLink: \"https://www.youtube.com/watch?v=bD7bpG-zDJQ\",\n        people: [\"Liam Neeson\", \"Ewan McGregor\", \"Natalie Portman\"],\n        rating: \"6.5\",\n        saga: \"Star Wars\",\n        category: \"Science Fiction\",\n    },\n    {\n        title: \"Avengers: Infinity War\",\n        poster: \"https://posters.movieposterdb.com/12_10/2018/4154756/l_4154756_73b7d5f7.jpg\",\n        youtubeLink: \"https://www.youtube.com/watch?v=6ZfuNTqbHE8\",\n        people: [\"Robert Downey Jr.\", \"Chris Hemsworth\", \"Mark Ruffalo\"],\n        rating: \"8.4\",\n        saga: \"Marvel\",\n        category: \"Super\",\n    },\n];\n\n// Llamada a fetchPoster para obtener los posters de las películas\nconst fetchPosters = async () => {\n    for (const movie of movies) {\n        movie.poster = await fetchPoster(movie.title);\n    }\n};\n\nfetchPosters();\n\nconst moviesBySagaAndCategory = movies.reduce((acc, movie) => {\n    const { saga, category } = movie;\n    if (!acc[saga]) {\n        acc[saga] = {};\n    }\n    if (!acc[saga][category]) {\n        acc[saga][category] = [];\n    }\n    acc[saga][category].push(movie);\n    return acc;\n}, {});\n\nmovies.forEach((movie) => {\n    movie.youtubeId = extractYoutubeId(movie.youtubeLink);\n});\n\nexport { moviesBySagaAndCategory };\nexport default movies;\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAIC,GAAG,IAAK;EAC9B,MAAMC,MAAM,GACR,gEAAgE;EACpE,MAAMC,KAAK,GAAGF,GAAG,CAACE,KAAK,CAACD,MAAM,CAAC;EAC/B,OAAOC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACC,MAAM,KAAK,EAAE,GAAGD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;AAC5D,CAAC;AACD,MAAME,OAAO,GAAG,iBAAiB;AAEjC,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;EACjC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,qDAAoDJ,OAAQ,UAASK,kBAAkB,CACpFH,KACJ,CAAE,EACN,CAAC;IACD,MAAMI,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,OAAO,CAACT,MAAM,GAAG,CAAC,EAAE;MACzB,OAAQ,kCAAiCO,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,WAAY,EAAC;IAC1E,CAAC,MAAM;MACHC,OAAO,CAACC,KAAK,CAAE,iCAAgCT,KAAM,EAAC,CAAC;MACvD,OAAO,IAAI;IACf;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,IAAI;EACf;AACJ,CAAC;AAED,MAAMC,MAAM,GAAG,CACX;EACIV,KAAK,EAAE,qBAAqB;EAC5BW,MAAM,EAAE,2EAA2E;EACnFC,WAAW,EAAE,6CAA6C;EAC1DC,MAAM,EAAE,CAAC,aAAa,EAAE,eAAe,EAAE,iBAAiB,CAAC;EAC3DC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE;AACd,CAAC,EACD;EACIhB,KAAK,EAAE,wBAAwB;EAC/BW,MAAM,EAAE,6EAA6E;EACrFC,WAAW,EAAE,6CAA6C;EAC1DC,MAAM,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,EAAE,cAAc,CAAC;EAChEC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE;AACd,CAAC,CACJ;;AAED;AACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC7B,KAAK,MAAMC,KAAK,IAAIR,MAAM,EAAE;IACxBQ,KAAK,CAACP,MAAM,GAAG,MAAMZ,WAAW,CAACmB,KAAK,CAAClB,KAAK,CAAC;EACjD;AACJ,CAAC;AAEDiB,YAAY,CAAC,CAAC;AAEd,MAAME,uBAAuB,GAAGT,MAAM,CAACU,MAAM,CAAC,CAACC,GAAG,EAAEH,KAAK,KAAK;EAC1D,MAAM;IAAEH,IAAI;IAAEC;EAAS,CAAC,GAAGE,KAAK;EAChC,IAAI,CAACG,GAAG,CAACN,IAAI,CAAC,EAAE;IACZM,GAAG,CAACN,IAAI,CAAC,GAAG,CAAC,CAAC;EAClB;EACA,IAAI,CAACM,GAAG,CAACN,IAAI,CAAC,CAACC,QAAQ,CAAC,EAAE;IACtBK,GAAG,CAACN,IAAI,CAAC,CAACC,QAAQ,CAAC,GAAG,EAAE;EAC5B;EACAK,GAAG,CAACN,IAAI,CAAC,CAACC,QAAQ,CAAC,CAACM,IAAI,CAACJ,KAAK,CAAC;EAC/B,OAAOG,GAAG;AACd,CAAC,EAAE,CAAC,CAAC,CAAC;AAENX,MAAM,CAACa,OAAO,CAAEL,KAAK,IAAK;EACtBA,KAAK,CAACM,SAAS,GAAG/B,gBAAgB,CAACyB,KAAK,CAACN,WAAW,CAAC;AACzD,CAAC,CAAC;AAEF,SAASO,uBAAuB;AAChC,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}