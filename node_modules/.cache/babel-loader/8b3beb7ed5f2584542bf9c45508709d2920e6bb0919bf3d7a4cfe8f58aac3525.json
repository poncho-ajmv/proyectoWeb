{"ast":null,"code":"var _jsxFileName = \"/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { moviesBySagaAndCategory } from \"./moviesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetails() {\n  _s();\n  var _moviesBySagaAndCateg;\n  const [selectedSaga, setSelectedSaga] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const handleSagaChange = event => {\n    setSelectedSaga(event.target.value);\n    setSelectedCategory(null); // Reset category when saga changes\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n    setSelectedSaga(null); // Reset saga when category changes\n  };\n\n  // Function to get all unique categories\n  const getAllCategories = () => {\n    const categories = new Set();\n    Object.values(moviesBySagaAndCategory).forEach(saga => {\n      Object.keys(saga).forEach(category => {\n        categories.add(category);\n      });\n    });\n    return Array.from(categories);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movie Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sagas\",\n        children: \"Saga:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sagas\",\n        onChange: handleSagaChange,\n        value: selectedSaga || \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Sagas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), Object.keys(moviesBySagaAndCategory).map(saga => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: saga,\n          children: saga\n        }, saga, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), selectedSaga && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"categories\",\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"categories\",\n        onChange: handleCategoryChange,\n        value: selectedCategory || \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), Object.keys(moviesBySagaAndCategory[selectedSaga] || {}).map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), !selectedSaga && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"categories\",\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-container\",\n        children: getAllCategories().map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedCategory(category),\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-list\",\n      children: (selectedSaga && selectedCategory ? (_moviesBySagaAndCateg = moviesBySagaAndCategory[selectedSaga]) === null || _moviesBySagaAndCateg === void 0 ? void 0 : _moviesBySagaAndCateg[selectedCategory] : Object.values(moviesBySagaAndCategory).map(saga => Object.values(saga).flat()).flat()).map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.poster,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", movie.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", movie.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, movie.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieDetails, \"V2qUYEVQ8KhnrsPSB8LmCg3yBxo=\");\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","moviesBySagaAndCategory","jsxDEV","_jsxDEV","MovieDetails","_s","_moviesBySagaAndCateg","selectedSaga","setSelectedSaga","selectedCategory","setSelectedCategory","handleSagaChange","event","target","value","handleCategoryChange","getAllCategories","categories","Set","Object","values","forEach","saga","keys","category","add","Array","from","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","onClick","flat","movie","title","src","poster","alt","rating","description","_c","$RefreshReg$"],"sources":["/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { moviesBySagaAndCategory } from \"./moviesData\";\n\nfunction MovieDetails() {\n    const [selectedSaga, setSelectedSaga] = useState(null);\n    const [selectedCategory, setSelectedCategory] = useState(null);\n\n    const handleSagaChange = (event) => {\n        setSelectedSaga(event.target.value);\n        setSelectedCategory(null); // Reset category when saga changes\n    };\n\n    const handleCategoryChange = (event) => {\n        setSelectedCategory(event.target.value);\n        setSelectedSaga(null); // Reset saga when category changes\n    };\n\n    // Function to get all unique categories\n    const getAllCategories = () => {\n        const categories = new Set();\n        Object.values(moviesBySagaAndCategory).forEach((saga) => {\n            Object.keys(saga).forEach((category) => {\n                categories.add(category);\n            });\n        });\n        return Array.from(categories);\n    };\n\n    return (\n        <div className=\"movie-details\">\n            <h2>Movie Details</h2>\n            <div>\n                <label htmlFor=\"sagas\">Saga:</label>\n                <select\n                    id=\"sagas\"\n                    onChange={handleSagaChange}\n                    value={selectedSaga || \"\"}\n                >\n                    <option value=\"\">All Sagas</option>\n                    {Object.keys(moviesBySagaAndCategory).map((saga) => (\n                        <option key={saga} value={saga}>\n                            {saga}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            {selectedSaga && (\n                <div>\n                    <label htmlFor=\"categories\">Category:</label>\n                    <select\n                        id=\"categories\"\n                        onChange={handleCategoryChange}\n                        value={selectedCategory || \"\"}\n                    >\n                        <option value=\"\">All Categories</option>\n                        {Object.keys(\n                            moviesBySagaAndCategory[selectedSaga] || {}\n                        ).map((category) => (\n                            <option key={category} value={category}>\n                                {category}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            )}\n            {!selectedSaga && (\n                <div>\n                    <label htmlFor=\"categories\">Category:</label>\n                    <div className=\"categories-container\">\n                        {getAllCategories().map((category) => (\n                            <button\n                                key={category}\n                                onClick={() => setSelectedCategory(category)}\n                            >\n                                {category}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n            )}\n            <div className=\"movies-list\">\n                {(selectedSaga && selectedCategory\n                    ? moviesBySagaAndCategory[selectedSaga]?.[selectedCategory]\n                    : Object.values(moviesBySagaAndCategory)\n                          .map((saga) => Object.values(saga).flat())\n                          .flat()\n                ).map((movie) => (\n                    <div key={movie.title} className=\"movie-item\">\n                        <h3>{movie.title}</h3>\n                        <img src={movie.poster} alt={movie.title} />\n                        <p>Rating: {movie.rating}</p>\n                        <p>Description: {movie.description}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MovieDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}