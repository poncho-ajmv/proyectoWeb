{"ast":null,"code":"var _jsxFileName = \"/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { moviesBySagaAndCategory } from \"./moviesData\";\nimport \"./MovieList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetails() {\n  _s();\n  const [selectedSaga, setSelectedSaga] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const handleSagaChange = event => {\n    setSelectedSaga(event.target.value);\n    setSelectedCategory(\"\"); // Reset category when saga changes\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  const getFilteredMovies = () => {\n    if (selectedSaga && selectedCategory) {\n      var _moviesBySagaAndCateg;\n      return ((_moviesBySagaAndCateg = moviesBySagaAndCategory[selectedSaga]) === null || _moviesBySagaAndCateg === void 0 ? void 0 : _moviesBySagaAndCateg[selectedCategory]) || [];\n    } else if (selectedSaga) {\n      return Object.values(moviesBySagaAndCategory[selectedSaga] || {}).flat();\n    } else if (selectedCategory) {\n      return Object.values(moviesBySagaAndCategory).flatMap(saga => Object.values(saga[selectedCategory] || {})).flat();\n    }\n    return [];\n  };\n\n  // Obtener todas las sagas disponibles\n  const allSagas = Object.keys(moviesBySagaAndCategory);\n\n  // Obtener todas las categorías disponibles\n  const allCategories = Object.values(moviesBySagaAndCategory).flatMap(saga => Object.keys(saga)).filter((category, index, self) => self.indexOf(category) === index);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sagas\",\n        children: \"Saga:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sagas\",\n        onChange: handleSagaChange,\n        value: selectedSaga,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Sagas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), allSagas.map(saga => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: saga,\n          children: saga\n        }, saga, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"categories\",\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"categories\",\n        onChange: handleCategoryChange,\n        value: selectedCategory,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), allCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster-list\",\n      children: getFilteredMovies().map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster,\n        alt: movie.title\n      }, movie.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieDetails, \"rPxwGg/t6GT9OCBkQviZKL85fUY=\");\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","moviesBySagaAndCategory","jsxDEV","_jsxDEV","MovieDetails","_s","selectedSaga","setSelectedSaga","selectedCategory","setSelectedCategory","handleSagaChange","event","target","value","handleCategoryChange","getFilteredMovies","_moviesBySagaAndCateg","Object","values","flat","flatMap","saga","allSagas","keys","allCategories","filter","category","index","self","indexOf","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","movie","src","poster","alt","title","_c","$RefreshReg$"],"sources":["/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { moviesBySagaAndCategory } from \"./moviesData\";\nimport \"./MovieList.css\";\n\nfunction MovieDetails() {\n    const [selectedSaga, setSelectedSaga] = useState(\"\");\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\n\n    const handleSagaChange = (event) => {\n        setSelectedSaga(event.target.value);\n        setSelectedCategory(\"\"); // Reset category when saga changes\n    };\n\n    const handleCategoryChange = (event) => {\n        setSelectedCategory(event.target.value);\n    };\n\n    const getFilteredMovies = () => {\n        if (selectedSaga && selectedCategory) {\n            return (\n                moviesBySagaAndCategory[selectedSaga]?.[selectedCategory] || []\n            );\n        } else if (selectedSaga) {\n            return Object.values(\n                moviesBySagaAndCategory[selectedSaga] || {}\n            ).flat();\n        } else if (selectedCategory) {\n            return Object.values(moviesBySagaAndCategory)\n                .flatMap((saga) => Object.values(saga[selectedCategory] || {}))\n                .flat();\n        }\n        return [];\n    };\n\n    // Obtener todas las sagas disponibles\n    const allSagas = Object.keys(moviesBySagaAndCategory);\n\n    // Obtener todas las categorías disponibles\n    const allCategories = Object.values(moviesBySagaAndCategory)\n        .flatMap((saga) => Object.keys(saga))\n        .filter((category, index, self) => self.indexOf(category) === index);\n\n    return (\n        <div className=\"movie-details\">\n            <div>\n                <label htmlFor=\"sagas\">Saga:</label>\n                <select\n                    id=\"sagas\"\n                    onChange={handleSagaChange}\n                    value={selectedSaga}\n                >\n                    <option value=\"\">All Sagas</option>\n                    {allSagas.map((saga) => (\n                        <option key={saga} value={saga}>\n                            {saga}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <div>\n                <label htmlFor=\"categories\">Category:</label>\n                <select\n                    id=\"categories\"\n                    onChange={handleCategoryChange}\n                    value={selectedCategory}\n                >\n                    <option value=\"\">All Categories</option>\n                    {allCategories.map((category) => (\n                        <option key={category} value={category}>\n                            {category}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            {/* Moví este div aquí abajo para que los pósters se muestren debajo de los selectores */}\n            \n            <div className=\"poster-list\">\n                {getFilteredMovies().map((movie) => (\n                    <img\n                        key={movie.title}\n                        src={movie.poster}\n                        alt={movie.title}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MovieDetails;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,uBAAuB,QAAQ,cAAc;AACtD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAChCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACnCJ,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMK,oBAAoB,GAAIH,KAAK,IAAK;IACpCF,mBAAmB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3C,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIT,YAAY,IAAIE,gBAAgB,EAAE;MAAA,IAAAQ,qBAAA;MAClC,OACI,EAAAA,qBAAA,GAAAf,uBAAuB,CAACK,YAAY,CAAC,cAAAU,qBAAA,uBAArCA,qBAAA,CAAwCR,gBAAgB,CAAC,KAAI,EAAE;IAEvE,CAAC,MAAM,IAAIF,YAAY,EAAE;MACrB,OAAOW,MAAM,CAACC,MAAM,CAChBjB,uBAAuB,CAACK,YAAY,CAAC,IAAI,CAAC,CAC9C,CAAC,CAACa,IAAI,CAAC,CAAC;IACZ,CAAC,MAAM,IAAIX,gBAAgB,EAAE;MACzB,OAAOS,MAAM,CAACC,MAAM,CAACjB,uBAAuB,CAAC,CACxCmB,OAAO,CAAEC,IAAI,IAAKJ,MAAM,CAACC,MAAM,CAACG,IAAI,CAACb,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAC9DW,IAAI,CAAC,CAAC;IACf;IACA,OAAO,EAAE;EACb,CAAC;;EAED;EACA,MAAMG,QAAQ,GAAGL,MAAM,CAACM,IAAI,CAACtB,uBAAuB,CAAC;;EAErD;EACA,MAAMuB,aAAa,GAAGP,MAAM,CAACC,MAAM,CAACjB,uBAAuB,CAAC,CACvDmB,OAAO,CAAEC,IAAI,IAAKJ,MAAM,CAACM,IAAI,CAACF,IAAI,CAAC,CAAC,CACpCI,MAAM,CAAC,CAACC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,KAAKA,IAAI,CAACC,OAAO,CAACH,QAAQ,CAAC,KAAKC,KAAK,CAAC;EAExE,oBACIxB,OAAA;IAAK2B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1B5B,OAAA;MAAA4B,QAAA,gBACI5B,OAAA;QAAO6B,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCjC,OAAA;QACIkC,EAAE,EAAC,OAAO;QACVC,QAAQ,EAAE5B,gBAAiB;QAC3BG,KAAK,EAAEP,YAAa;QAAAyB,QAAA,gBAEpB5B,OAAA;UAAQU,KAAK,EAAC,EAAE;UAAAkB,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAClCd,QAAQ,CAACiB,GAAG,CAAElB,IAAI,iBACflB,OAAA;UAAmBU,KAAK,EAAEQ,IAAK;UAAAU,QAAA,EAC1BV;QAAI,GADIA,IAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNjC,OAAA;MAAA4B,QAAA,gBACI5B,OAAA;QAAO6B,OAAO,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CjC,OAAA;QACIkC,EAAE,EAAC,YAAY;QACfC,QAAQ,EAAExB,oBAAqB;QAC/BD,KAAK,EAAEL,gBAAiB;QAAAuB,QAAA,gBAExB5B,OAAA;UAAQU,KAAK,EAAC,EAAE;UAAAkB,QAAA,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACvCZ,aAAa,CAACe,GAAG,CAAEb,QAAQ,iBACxBvB,OAAA;UAAuBU,KAAK,EAAEa,QAAS;UAAAK,QAAA,EAClCL;QAAQ,GADAA,QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGNjC,OAAA;MAAK2B,SAAS,EAAC,aAAa;MAAAC,QAAA,EACvBhB,iBAAiB,CAAC,CAAC,CAACwB,GAAG,CAAEC,KAAK,iBAC3BrC,OAAA;QAEIsC,GAAG,EAAED,KAAK,CAACE,MAAO;QAClBC,GAAG,EAAEH,KAAK,CAACI;MAAM,GAFZJ,KAAK,CAACI,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGnB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC/B,EAAA,CAnFQD,YAAY;AAAAyC,EAAA,GAAZzC,YAAY;AAqFrB,eAAeA,YAAY;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}