{"ast":null,"code":"var _jsxFileName = \"/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { moviesBySagaAndCategory } from \"./moviesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetails() {\n  _s();\n  const [selectedSaga, setSelectedSaga] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const handleSagaChange = event => {\n    setSelectedSaga(event.target.value);\n    setSelectedCategory(\"\"); // Reset category when saga changes\n  };\n  const handleCategoryChange = event => {\n    setSelectedCategory(event.target.value);\n  };\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const movies = getFilteredMovies();\n      const moviesWithDetails = await Promise.all(movies.map(async movie => {\n        const movieDetails = await getMovieDetails(movie);\n        return {\n          ...movie,\n          ...movieDetails\n        };\n      }));\n      setFilteredMovies(moviesWithDetails);\n    };\n    fetchMovieDetails();\n  }, [selectedSaga, selectedCategory]);\n  const getFilteredMovies = () => {\n    if (selectedSaga && selectedCategory) {\n      var _moviesBySagaAndCateg;\n      return ((_moviesBySagaAndCateg = moviesBySagaAndCategory[selectedSaga]) === null || _moviesBySagaAndCateg === void 0 ? void 0 : _moviesBySagaAndCateg[selectedCategory]) || [];\n    } else if (selectedSaga) {\n      return Object.values(moviesBySagaAndCategory[selectedSaga] || {}).flat();\n    } else if (selectedCategory) {\n      return Object.values(moviesBySagaAndCategory).flatMap(saga => Object.values(saga[selectedCategory] || {})).flat();\n    }\n    return [];\n  };\n\n  // Obtener todas las sagas disponibles\n  const allSagas = Object.keys(moviesBySagaAndCategory);\n\n  // Obtener todas las categorías disponibles\n  const allCategories = Object.values(moviesBySagaAndCategory).flatMap(saga => Object.keys(saga)).filter((category, index, self) => self.indexOf(category) === index);\n  const getMovieDetails = async movie => {\n    const TMDBapiKey = \"674684d28cd5c404ad1bf06cd1a5d482\";\n    const apiUrl = `https://api.themoviedb.org/3/movie/${movie.id}?api_key=${TMDBapiKey}&language=en-US`;\n    const response = await fetch(apiUrl);\n    const data = await response.json();\n    return {\n      description: data.overview\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectors\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sagas\",\n          children: \"Saga:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"sagas\",\n          onChange: handleSagaChange,\n          value: selectedSaga,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Sagas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), allSagas.map(saga => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: saga,\n            children: saga\n          }, saga, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"categories\",\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"categories\",\n          onChange: handleCategoryChange,\n          value: selectedCategory,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), allCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, category, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster-list\",\n      children: filteredMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-poster\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.poster,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", movie.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", movie.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, movie.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieDetails, \"nobOyFfCCR6wM4lJqMgaPplZZIk=\");\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","useEffect","moviesBySagaAndCategory","jsxDEV","_jsxDEV","MovieDetails","_s","selectedSaga","setSelectedSaga","selectedCategory","setSelectedCategory","filteredMovies","setFilteredMovies","handleSagaChange","event","target","value","handleCategoryChange","fetchMovieDetails","movies","getFilteredMovies","moviesWithDetails","Promise","all","map","movie","movieDetails","getMovieDetails","_moviesBySagaAndCateg","Object","values","flat","flatMap","saga","allSagas","keys","allCategories","filter","category","index","self","indexOf","TMDBapiKey","apiUrl","id","response","fetch","data","json","description","overview","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","src","poster","alt","title","rating","_c","$RefreshReg$"],"sources":["/home/poncho/toto/CODE/React/proyectotooo/proyectoWeb/src/MovieList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { moviesBySagaAndCategory } from \"./moviesData\";\n\nfunction MovieDetails() {\n    const [selectedSaga, setSelectedSaga] = useState(\"\");\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\n    const [filteredMovies, setFilteredMovies] = useState([]);\n\n    const handleSagaChange = (event) => {\n        setSelectedSaga(event.target.value);\n        setSelectedCategory(\"\"); // Reset category when saga changes\n    };\n\n    const handleCategoryChange = (event) => {\n        setSelectedCategory(event.target.value);\n    };\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            const movies = getFilteredMovies();\n            const moviesWithDetails = await Promise.all(\n                movies.map(async (movie) => {\n                    const movieDetails = await getMovieDetails(movie);\n                    return { ...movie, ...movieDetails };\n                })\n            );\n            setFilteredMovies(moviesWithDetails);\n        };\n\n        fetchMovieDetails();\n    }, [selectedSaga, selectedCategory]);\n\n    const getFilteredMovies = () => {\n        if (selectedSaga && selectedCategory) {\n            return (\n                moviesBySagaAndCategory[selectedSaga]?.[selectedCategory] || []\n            );\n        } else if (selectedSaga) {\n            return Object.values(\n                moviesBySagaAndCategory[selectedSaga] || {}\n            ).flat();\n        } else if (selectedCategory) {\n            return Object.values(moviesBySagaAndCategory)\n                .flatMap((saga) => Object.values(saga[selectedCategory] || {}))\n                .flat();\n        }\n        return [];\n    };\n\n    // Obtener todas las sagas disponibles\n    const allSagas = Object.keys(moviesBySagaAndCategory);\n\n    // Obtener todas las categorías disponibles\n    const allCategories = Object.values(moviesBySagaAndCategory)\n        .flatMap((saga) => Object.keys(saga))\n        .filter((category, index, self) => self.indexOf(category) === index);\n\n    const getMovieDetails = async (movie) => {\n        const TMDBapiKey = \"674684d28cd5c404ad1bf06cd1a5d482\";\n        const apiUrl = `https://api.themoviedb.org/3/movie/${movie.id}?api_key=${TMDBapiKey}&language=en-US`;\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        return {\n            description: data.overview,\n        };\n    };\n\n    return (\n        <div className=\"movie-details\">\n            <div className=\"selectors\">\n                <div>\n                    <label htmlFor=\"sagas\">Saga:</label>\n                    <select\n                        id=\"sagas\"\n                        onChange={handleSagaChange}\n                        value={selectedSaga}\n                    >\n                        <option value=\"\">All Sagas</option>\n                        {allSagas.map((saga) => (\n                            <option key={saga} value={saga}>\n                                {saga}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <div>\n                    <label htmlFor=\"categories\">Category:</label>\n                    <select\n                        id=\"categories\"\n                        onChange={handleCategoryChange}\n                        value={selectedCategory}\n                    >\n                        <option value=\"\">All Categories</option>\n                        {allCategories.map((category) => (\n                            <option key={category} value={category}>\n                                {category}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </div>\n            <div className=\"poster-list\">\n                {filteredMovies.map((movie) => (\n                    <div key={movie.title} className=\"movie-poster\">\n                        <img src={movie.poster} alt={movie.title} />\n                        <p>Rating: {movie.rating}</p>\n                        <p>Description: {movie.description}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MovieDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}