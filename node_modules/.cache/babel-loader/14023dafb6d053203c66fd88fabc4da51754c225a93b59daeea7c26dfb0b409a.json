{"ast":null,"code":"// moviesData.js\nconst fetchMoviePoster = async (title, apiKey) => {\n  try {\n    const response = await fetch(`https://api.movieposterdb.com/posters?title=${title}&api_key=${apiKey}`);\n    const data = await response.json();\n    if (data && data.length > 0) {\n      return data[0].image_url;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error('Error fetching movie poster:', error);\n    return null;\n  }\n};\nconst movies = [{\n  title: \"Pelicula 1\",\n  youtubeLink: \"https://www.youtube.com/watch?v=qIYyXcCwvKc\",\n  people: []\n}, {\n  title: \"Pelicula 2\",\n  youtubeLink: \"https://www.youtube.com/watch?v=abcdefghijk\",\n  people: []\n}\n// Añade más películas si lo deseas\n];\nconst fillMovieDetails = async apiKey => {\n  for (const movie of movies) {\n    const poster = await fetchMoviePoster(movie.title, apiKey);\n    if (poster) {\n      movie.poster = poster;\n    }\n  }\n};\nfillMovieDetails('234|tS5SPZa4ikob6q5ExKK86NRdvLIqAQLWxj93bFxZ');\nexport default movies;","map":{"version":3,"names":["fetchMoviePoster","title","apiKey","response","fetch","data","json","length","image_url","error","console","movies","youtubeLink","people","fillMovieDetails","movie","poster"],"sources":["/home/poncho/toto/CODE/React/proyect/src/moviesData.js"],"sourcesContent":["// moviesData.js\nconst fetchMoviePoster = async (title, apiKey) => {\n    try {\n      const response = await fetch(`https://api.movieposterdb.com/posters?title=${title}&api_key=${apiKey}`);\n      const data = await response.json();\n      if (data && data.length > 0) {\n        return data[0].image_url;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error('Error fetching movie poster:', error);\n      return null;\n    }\n  };\n  \n  const movies = [\n    {\n      title: \"Pelicula 1\",\n      youtubeLink: \"https://www.youtube.com/watch?v=qIYyXcCwvKc\",\n      people: []\n    },\n    {\n      title: \"Pelicula 2\",\n      youtubeLink: \"https://www.youtube.com/watch?v=abcdefghijk\",\n      people: []\n    },\n    // Añade más películas si lo deseas\n  ];\n  \n  const fillMovieDetails = async (apiKey) => {\n    for (const movie of movies) {\n      const poster = await fetchMoviePoster(movie.title, apiKey);\n      if (poster) {\n        movie.poster = poster;\n      }\n    }\n  };\n  \n  fillMovieDetails('234|tS5SPZa4ikob6q5ExKK86NRdvLIqAQLWxj93bFxZ');\n  \n  export default movies;\n  "],"mappings":"AAAA;AACA,MAAMA,gBAAgB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,KAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+CAA8CH,KAAM,YAAWC,MAAO,EAAC,CAAC;IACtG,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;MAC3B,OAAOF,IAAI,CAAC,CAAC,CAAC,CAACG,SAAS;IAC1B,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAME,MAAM,GAAG,CACb;EACEV,KAAK,EAAE,YAAY;EACnBW,WAAW,EAAE,6CAA6C;EAC1DC,MAAM,EAAE;AACV,CAAC,EACD;EACEZ,KAAK,EAAE,YAAY;EACnBW,WAAW,EAAE,6CAA6C;EAC1DC,MAAM,EAAE;AACV;AACA;AAAA,CACD;AAED,MAAMC,gBAAgB,GAAG,MAAOZ,MAAM,IAAK;EACzC,KAAK,MAAMa,KAAK,IAAIJ,MAAM,EAAE;IAC1B,MAAMK,MAAM,GAAG,MAAMhB,gBAAgB,CAACe,KAAK,CAACd,KAAK,EAAEC,MAAM,CAAC;IAC1D,IAAIc,MAAM,EAAE;MACVD,KAAK,CAACC,MAAM,GAAGA,MAAM;IACvB;EACF;AACF,CAAC;AAEDF,gBAAgB,CAAC,8CAA8C,CAAC;AAEhE,eAAeH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}