{"ast":null,"code":"var _jsxFileName = \"/home/toto/Downloads/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\";\nimport Footer from \"./Footer\";\n\n/*CSS*/\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"./MovieCarousel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"674684d28cd5c404ad1bf06cd1a5d482\";\nconst IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\nconst URL_IMAGE = \"https://image.tmdb.org/t/p/original\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({\n    title: \"Loading Movies\"\n  });\n  const [playing, setPlaying] = useState(false);\n  const [cast, setCast] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const categories = {\n    28: \"Action\",\n    35: \"Comedy\",\n    18: \"Drama\",\n    27: \"Horror\",\n    10749: \"Romance\",\n    878: \"Science Fiction\",\n    10751: \"Family\",\n    16: \"Animation\",\n    80: \"Crime\",\n    37: \"Western\",\n    36: \"History\",\n    14: \"Fantasy\",\n    53: \"Thriller\",\n    10752: \"War\",\n    12: \"Adventure\",\n    99: \"Documentary\",\n    10402: \"Music\",\n    10770: \"TV Movie\",\n    9648: \"Mystery\"\n  };\n  const fetchMovies = async (searchKey, category, searchType, fromDate, toDate) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const type = searchKey ? \"search\" : \"discover\";\n      let params = {\n        api_key: API_KEY,\n        query: searchKey,\n        with_genres: category || undefined\n      };\n      if (searchType) {\n        params = {\n          ...params,\n          sort_by: searchType\n        };\n      }\n      if (fromDate && toDate) {\n        params[\"primary_release_date.gte\"] = fromDate;\n        params[\"primary_release_date.lte\"] = toDate;\n      }\n      const {\n        data: {\n          results\n        }\n      } = await axios.get(`${API_URL}/${type}/movie`, {\n        params\n      });\n      const filteredMovies = results.filter(movie => ![\"tiburon\", \"no way up\", \"jaws\", \"sharknado\", \"deep blue sea\", \"the meg\", \"shark\", \"under paris\"].includes(movie.title.toLowerCase()));\n      setMovies(filteredMovies);\n      setMovie(filteredMovies[0]);\n      if (filteredMovies.length) {\n        await fetchMovie(filteredMovies[0].id);\n      }\n    } catch (err) {\n      setError(\"Failed to fetch movies\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchMovie = async id => {\n    try {\n      const {\n        data\n      } = await axios.get(`${API_URL}/movie/${id}`, {\n        params: {\n          api_key: API_KEY,\n          append_to_response: \"videos,credits\"\n        }\n      });\n      if (data.videos && data.videos.results) {\n        const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n        setTrailer(trailer || data.videos.results[0]);\n      }\n      setMovie(data);\n      if (data.credits && data.credits.cast) {\n        setCast(data.credits.cast);\n      }\n    } catch (err) {\n      setError(\"Failed to fetch movie details\");\n    }\n  };\n  const selectMovie = async movie => {\n    await fetchMovie(movie.id);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchKey, category, searchType);\n  };\n  const handleCategoryChange = category => {\n    setCategory(category);\n    setSearchType(\"\");\n    fetchMovies(searchKey, category, searchType);\n  };\n  useEffect(() => {\n    fetchMovies(\"\", \"\", \"\");\n  }, []);\n  const fetchPopularMovies = async () => {\n    setSearchType(\"popularity.desc\");\n    fetchMovies(searchKey, category, \"popularity.desc\");\n  };\n  const fetchRecentMovies = async () => {\n    const currentDate = new Date();\n    const fromDate = new Date(currentDate);\n    const toDate = new Date(currentDate);\n    fromDate.setMonth(currentDate.getMonth() - 1);\n    toDate.setMonth(currentDate.getMonth() + 1);\n    const fromDateString = fromDate.toISOString().split(\"T\")[0];\n    const toDateString = toDate.toISOString().split(\"T\")[0];\n    setSearchType(\"release_date.desc\");\n    fetchMovies(searchKey, category, `release_date.desc`, fromDateString, toDateString);\n  };\n  const fetchTopRatedMovies = async () => {\n    setSearchType(\"vote_average.desc\");\n    fetchMovies(searchKey, category, \"vote_average.desc\");\n  };\n  const fetchTopRatedMoviesAll = async () => {\n    setSearchType(\"top_rated\");\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        data: {\n          results\n        }\n      } = await axios.get(`${API_URL}/movie/top_rated`, {\n        params: {\n          api_key: API_KEY\n        }\n      });\n      setMovies(results);\n      setMovie(results[0]);\n      if (results.length) {\n        await fetchMovie(results[0].id);\n      }\n    } catch (err) {\n      setError(\"Failed to fetch top-rated movies\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"menu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-and-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logo\",\n          onClick: () => window.location.href = \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://imgfz.com/i/5hQ3ZSJ.png\",\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"container mb-4\",\n          onSubmit: searchMovies,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"search\",\n            onChange: e => setSearchKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: category,\n            onChange: e => handleCategoryChange(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), Object.entries(categories).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: fetchTopRatedMoviesAll,\n            children: \"All time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: fetchPopularMovies,\n            children: \"Popular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: fetchRecentMovies,\n            children: \"Recent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: fetchTopRatedMovies,\n            children: \"Top Rated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(MovieCarousel, {\n      movies: movies,\n      selectMovie: selectMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: movie && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"viewtrailer\",\n        style: {\n          backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`\n        },\n        children: [trailer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trailer-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${IMAGE_PATH}${movie.poster_path}`,\n            alt: movie.title,\n            className: \"movie-poster\",\n            width: \"560\",\n            height: \"815\",\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"560\",\n            height: \"315\",\n            src: `https://www.youtube.com/embed/${trailer.key}`,\n            title: \"YouTube video player\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Cast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [cast.filter(actor => actor.department === \"Directing\").map(director => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Director: \", director.name]\n            }, director.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 37\n            }, this)), cast.filter(actor => actor.order <= 10 && actor.department !== \"Directing\").map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [actor.character, \" - \", actor.name]\n            }, actor.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), playing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPlaying(false),\n          className: \"boton\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-white\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white\",\n              children: movie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_movies\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row_movies\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col_movies\",\n          onClick: () => selectMovie(movie),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${URL_IMAGE + movie.poster_path}`,\n            alt: \"\",\n            height: 600,\n            width: \"150%\",\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", movie.vote_average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"5F7Ef7SUNCj4HGULNb3cAioPXPI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieCarousel","Footer","jsxDEV","_jsxDEV","API_URL","API_KEY","IMAGE_PATH","URL_IMAGE","App","_s","movies","setMovies","searchKey","setSearchKey","trailer","setTrailer","movie","setMovie","title","playing","setPlaying","cast","setCast","category","setCategory","searchType","setSearchType","loading","setLoading","error","setError","categories","fetchMovies","fromDate","toDate","type","params","api_key","query","with_genres","undefined","sort_by","data","results","get","filteredMovies","filter","includes","toLowerCase","length","fetchMovie","id","err","append_to_response","videos","find","vid","name","credits","selectMovie","window","scrollTo","searchMovies","e","preventDefault","handleCategoryChange","fetchPopularMovies","fetchRecentMovies","currentDate","Date","setMonth","getMonth","fromDateString","toISOString","split","toDateString","fetchTopRatedMovies","fetchTopRatedMoviesAll","className","children","onClick","location","href","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","target","value","Object","entries","map","style","backgroundImage","backdrop_path","poster_path","width","height","key","allow","allowFullScreen","actor","department","director","order","character","overview","vote_average","_c","$RefreshReg$"],"sources":["/home/toto/Downloads/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\"; \nimport Footer from \"./Footer\";\n\n/*CSS*/\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"./MovieCarousel.css\";\n\nconst API_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"674684d28cd5c404ad1bf06cd1a5d482\";\nconst IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\nconst URL_IMAGE = \"https://image.tmdb.org/t/p/original\";\n\n\n\n\nfunction App() {\n    const [movies, setMovies] = useState([]);\n    const [searchKey, setSearchKey] = useState(\"\");\n    const [trailer, setTrailer] = useState(null);\n    const [movie, setMovie] = useState({ title: \"Loading Movies\" });\n    const [playing, setPlaying] = useState(false);\n    const [cast, setCast] = useState([]);\n    const [category, setCategory] = useState(\"\");\n    const [searchType, setSearchType] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const categories = {\n        28: \"Action\",\n        35: \"Comedy\",\n        18: \"Drama\",\n        27: \"Horror\",\n        10749: \"Romance\",\n        878: \"Science Fiction\",\n        10751: \"Family\",\n        16: \"Animation\",\n        80: \"Crime\",\n        37: \"Western\",\n        36: \"History\",\n        14: \"Fantasy\",\n        53: \"Thriller\",\n        10752: \"War\",\n        12: \"Adventure\",\n        99: \"Documentary\",\n        10402: \"Music\",\n        10770: \"TV Movie\",\n        9648: \"Mystery\",\n    };\n\n    const fetchMovies = async (searchKey, category, searchType, fromDate, toDate) => {\n        setLoading(true);\n        setError(null);\n        try {\n            const type = searchKey ? \"search\" : \"discover\";\n            let params = {\n                api_key: API_KEY,\n                query: searchKey,\n                with_genres: category || undefined,\n            };\n\n            if (searchType) {\n                params = { ...params, sort_by: searchType };\n            }\n\n            if (fromDate && toDate) {\n                params[\"primary_release_date.gte\"] = fromDate;\n                params[\"primary_release_date.lte\"] = toDate;\n            }\n\n            const { data: { results } } = await axios.get(`${API_URL}/${type}/movie`, { params });\n\n            const filteredMovies = results.filter(movie =>\n                ![\"tiburon\", \"no way up\", \"jaws\", \"sharknado\", \"deep blue sea\", \"the meg\", \"shark\", \"under paris\"].includes(movie.title.toLowerCase())\n            );\n\n            setMovies(filteredMovies);\n            setMovie(filteredMovies[0]);\n\n            if (filteredMovies.length) {\n                await fetchMovie(filteredMovies[0].id);\n            }\n        } catch (err) {\n            setError(\"Failed to fetch movies\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const fetchMovie = async (id) => {\n        try {\n            const { data } = await axios.get(`${API_URL}/movie/${id}`, {\n                params: {\n                    api_key: API_KEY,\n                    append_to_response: \"videos,credits\",\n                },\n            });\n\n            if (data.videos && data.videos.results) {\n                const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n                setTrailer(trailer || data.videos.results[0]);\n            }\n            setMovie(data);\n            if (data.credits && data.credits.cast) {\n                setCast(data.credits.cast);\n            }\n        } catch (err) {\n            setError(\"Failed to fetch movie details\");\n        }\n    };\n\n    const selectMovie = async (movie) => {\n        await fetchMovie(movie.id);\n        setMovie(movie);\n        window.scrollTo(0, 0);\n    };\n\n    const searchMovies = (e) => {\n        e.preventDefault();\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    const handleCategoryChange = (category) => {\n        setCategory(category);\n        setSearchType(\"\");\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    useEffect(() => {\n        fetchMovies(\"\", \"\", \"\");\n    }, []);\n\n    const fetchPopularMovies = async () => {\n        setSearchType(\"popularity.desc\");\n        fetchMovies(searchKey, category, \"popularity.desc\");\n    };\n\n    const fetchRecentMovies = async () => {\n        const currentDate = new Date();\n        const fromDate = new Date(currentDate);\n        const toDate = new Date(currentDate);\n        fromDate.setMonth(currentDate.getMonth() - 1);\n        toDate.setMonth(currentDate.getMonth() + 1);\n        const fromDateString = fromDate.toISOString().split(\"T\")[0];\n        const toDateString = toDate.toISOString().split(\"T\")[0];\n        setSearchType(\"release_date.desc\");\n        fetchMovies(searchKey, category, `release_date.desc`, fromDateString, toDateString);\n    };\n\n    const fetchTopRatedMovies = async () => {\n        setSearchType(\"vote_average.desc\");\n        fetchMovies(searchKey, category, \"vote_average.desc\");\n    };\n\n    const fetchTopRatedMoviesAll = async () => {\n        setSearchType(\"top_rated\");\n        setLoading(true);\n        setError(null);\n        try {\n            const { data: { results } } = await axios.get(`${API_URL}/movie/top_rated`, {\n                params: { api_key: API_KEY },\n            });\n            setMovies(results);\n            setMovie(results[0]);\n            if (results.length) {\n                await fetchMovie(results[0].id);\n            }\n        } catch (err) {\n            setError(\"Failed to fetch top-rated movies\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"menu\">\n                <div className=\"logo-and-search\">\n                    <button className=\"logo\" onClick={() => window.location.href = \"/\"}>\n                        <img src=\"http://imgfz.com/i/5hQ3ZSJ.png\" alt=\"Logo\" />\n                    </button>\n                    <form className=\"container mb-4\" onSubmit={searchMovies}>\n                        <input type=\"text\" placeholder=\"search\" onChange={(e) => setSearchKey(e.target.value)} />\n                        <button className=\"btn btn-primary\">Search</button>\n                    </form>\n                    <div className=\"category-buttons\">\n                        <select value={category} onChange={(e) => handleCategoryChange(e.target.value)}>\n                            <option value=\"\">All</option>\n                            {Object.entries(categories).map(([id, name]) => (\n                                <option key={id} value={id}>{name}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"category-buttons\">\n                        <button className=\"filter-button\" onClick={fetchTopRatedMoviesAll}>All time</button>\n                        <button className=\"filter-button\" onClick={fetchPopularMovies}>Popular</button>\n                        <button className=\"filter-button\" onClick={fetchRecentMovies}>Recent</button>\n                        <button className=\"filter-button\" onClick={fetchTopRatedMovies}>Top Rated</button>\n                    </div>\n                </div>\n            </header>\n            {loading && <div>Loading...</div>}\n            {error && <div>{error}</div>}\n            <MovieCarousel movies={movies} selectMovie={selectMovie} />\n            <main>\n                {movie && (\n                    <div className=\"viewtrailer\" style={{ backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")` }}>\n                        {trailer && (\n                            <div className=\"trailer-container\">\n                                <img src={`${IMAGE_PATH}${movie.poster_path}`} alt={movie.title} className=\"movie-poster\" width=\"560\" height=\"815\" loading=\"lazy\" />\n                                <iframe\n                                    width=\"560\"\n                                    height=\"315\"\n                                    src={`https://www.youtube.com/embed/${trailer.key}`}\n                                    title=\"YouTube video player\"\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                    allowFullScreen\n                                ></iframe>\n                            </div>\n                        )}\n                        <div className=\"cast-container\">\n                            <h2>Cast</h2>\n                            <ul>\n                                {cast.filter(actor => actor.department === \"Directing\").map(director => (\n                                    <li key={director.id}>Director: {director.name}</li>\n                                ))}\n                                {cast.filter(actor => actor.order <= 10 && actor.department !== \"Directing\").map(actor => (\n                                    <li key={actor.id}>{actor.character} - {actor.name}</li>\n                                ))}\n                            </ul>\n                        </div>\n                        {playing ? (\n                            <button onClick={() => setPlaying(false)} className=\"boton\">Close</button>\n                        ) : (\n                            <div className=\"container\">\n                                <div>\n                                    <h1 className=\"text-white\">{movie.title}</h1>\n                                    <p className=\"text-white\">{movie.overview}</p>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </main>\n            <div className=\"container_movies\">\n                <div className=\"row_movies\">\n                    {movies.map(movie => (\n                        <div key={movie.id} className=\"col_movies\" onClick={() => selectMovie(movie)}>\n                            <img src={`${URL_IMAGE + movie.poster_path}`} alt=\"\" height={600} width=\"150%\" loading=\"lazy\" />\n                            <h4>{movie.title}</h4>\n                            <p>Rating: {movie.vote_average}</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,OAAO,iBAAiB;AACxB,OAAO,mBAAmB;AAC1B,OAAO,eAAe;AACtB,OAAO,gCAAgC;AACvC,OAAO,sCAAsC;AAC7C,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,OAAO,GAAG,8BAA8B;AAC9C,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,UAAU,GAAG,qCAAqC;AACxD,MAAMC,SAAS,GAAG,qCAAqC;AAKvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC;IAAEoB,KAAK,EAAE;EAAiB,CAAC,CAAC;EAC/D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiC,UAAU,GAAG;IACf,EAAE,EAAE,QAAQ;IACZ,EAAE,EAAE,QAAQ;IACZ,EAAE,EAAE,OAAO;IACX,EAAE,EAAE,QAAQ;IACZ,KAAK,EAAE,SAAS;IAChB,GAAG,EAAE,iBAAiB;IACtB,KAAK,EAAE,QAAQ;IACf,EAAE,EAAE,WAAW;IACf,EAAE,EAAE,OAAO;IACX,EAAE,EAAE,SAAS;IACb,EAAE,EAAE,SAAS;IACb,EAAE,EAAE,SAAS;IACb,EAAE,EAAE,UAAU;IACd,KAAK,EAAE,KAAK;IACZ,EAAE,EAAE,WAAW;IACf,EAAE,EAAE,aAAa;IACjB,KAAK,EAAE,OAAO;IACd,KAAK,EAAE,UAAU;IACjB,IAAI,EAAE;EACV,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAOpB,SAAS,EAAEW,QAAQ,EAAEE,UAAU,EAAEQ,QAAQ,EAAEC,MAAM,KAAK;IAC7EN,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMK,IAAI,GAAGvB,SAAS,GAAG,QAAQ,GAAG,UAAU;MAC9C,IAAIwB,MAAM,GAAG;QACTC,OAAO,EAAEhC,OAAO;QAChBiC,KAAK,EAAE1B,SAAS;QAChB2B,WAAW,EAAEhB,QAAQ,IAAIiB;MAC7B,CAAC;MAED,IAAIf,UAAU,EAAE;QACZW,MAAM,GAAG;UAAE,GAAGA,MAAM;UAAEK,OAAO,EAAEhB;QAAW,CAAC;MAC/C;MAEA,IAAIQ,QAAQ,IAAIC,MAAM,EAAE;QACpBE,MAAM,CAAC,0BAA0B,CAAC,GAAGH,QAAQ;QAC7CG,MAAM,CAAC,0BAA0B,CAAC,GAAGF,MAAM;MAC/C;MAEA,MAAM;QAAEQ,IAAI,EAAE;UAAEC;QAAQ;MAAE,CAAC,GAAG,MAAM5C,KAAK,CAAC6C,GAAG,CAAC,GAAGxC,OAAO,IAAI+B,IAAI,QAAQ,EAAE;QAAEC;MAAO,CAAC,CAAC;MAErF,MAAMS,cAAc,GAAGF,OAAO,CAACG,MAAM,CAAC9B,KAAK,IACvC,CAAC,CAAC,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC+B,QAAQ,CAAC/B,KAAK,CAACE,KAAK,CAAC8B,WAAW,CAAC,CAAC,CACzI,CAAC;MAEDrC,SAAS,CAACkC,cAAc,CAAC;MACzB5B,QAAQ,CAAC4B,cAAc,CAAC,CAAC,CAAC,CAAC;MAE3B,IAAIA,cAAc,CAACI,MAAM,EAAE;QACvB,MAAMC,UAAU,CAACL,cAAc,CAAC,CAAC,CAAC,CAACM,EAAE,CAAC;MAC1C;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVtB,QAAQ,CAAC,wBAAwB,CAAC;IACtC,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMsB,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B,IAAI;MACA,MAAM;QAAET;MAAK,CAAC,GAAG,MAAM3C,KAAK,CAAC6C,GAAG,CAAC,GAAGxC,OAAO,UAAU+C,EAAE,EAAE,EAAE;QACvDf,MAAM,EAAE;UACJC,OAAO,EAAEhC,OAAO;UAChBgD,kBAAkB,EAAE;QACxB;MACJ,CAAC,CAAC;MAEF,IAAIX,IAAI,CAACY,MAAM,IAAIZ,IAAI,CAACY,MAAM,CAACX,OAAO,EAAE;QACpC,MAAM7B,OAAO,GAAG4B,IAAI,CAACY,MAAM,CAACX,OAAO,CAACY,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,KAAK,kBAAkB,CAAC;QAChF1C,UAAU,CAACD,OAAO,IAAI4B,IAAI,CAACY,MAAM,CAACX,OAAO,CAAC,CAAC,CAAC,CAAC;MACjD;MACA1B,QAAQ,CAACyB,IAAI,CAAC;MACd,IAAIA,IAAI,CAACgB,OAAO,IAAIhB,IAAI,CAACgB,OAAO,CAACrC,IAAI,EAAE;QACnCC,OAAO,CAACoB,IAAI,CAACgB,OAAO,CAACrC,IAAI,CAAC;MAC9B;IACJ,CAAC,CAAC,OAAO+B,GAAG,EAAE;MACVtB,QAAQ,CAAC,+BAA+B,CAAC;IAC7C;EACJ,CAAC;EAED,MAAM6B,WAAW,GAAG,MAAO3C,KAAK,IAAK;IACjC,MAAMkC,UAAU,CAAClC,KAAK,CAACmC,EAAE,CAAC;IAC1BlC,QAAQ,CAACD,KAAK,CAAC;IACf4C,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBhC,WAAW,CAACpB,SAAS,EAAEW,QAAQ,EAAEE,UAAU,CAAC;EAChD,CAAC;EAED,MAAMwC,oBAAoB,GAAI1C,QAAQ,IAAK;IACvCC,WAAW,CAACD,QAAQ,CAAC;IACrBG,aAAa,CAAC,EAAE,CAAC;IACjBM,WAAW,CAACpB,SAAS,EAAEW,QAAQ,EAAEE,UAAU,CAAC;EAChD,CAAC;EAED5B,SAAS,CAAC,MAAM;IACZmC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnCxC,aAAa,CAAC,iBAAiB,CAAC;IAChCM,WAAW,CAACpB,SAAS,EAAEW,QAAQ,EAAE,iBAAiB,CAAC;EACvD,CAAC;EAED,MAAM4C,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC9B,MAAMpC,QAAQ,GAAG,IAAIoC,IAAI,CAACD,WAAW,CAAC;IACtC,MAAMlC,MAAM,GAAG,IAAImC,IAAI,CAACD,WAAW,CAAC;IACpCnC,QAAQ,CAACqC,QAAQ,CAACF,WAAW,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7CrC,MAAM,CAACoC,QAAQ,CAACF,WAAW,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3C,MAAMC,cAAc,GAAGvC,QAAQ,CAACwC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,MAAMC,YAAY,GAAGzC,MAAM,CAACuC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvDhD,aAAa,CAAC,mBAAmB,CAAC;IAClCM,WAAW,CAACpB,SAAS,EAAEW,QAAQ,EAAE,mBAAmB,EAAEiD,cAAc,EAAEG,YAAY,CAAC;EACvF,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpClD,aAAa,CAAC,mBAAmB,CAAC;IAClCM,WAAW,CAACpB,SAAS,EAAEW,QAAQ,EAAE,mBAAmB,CAAC;EACzD,CAAC;EAED,MAAMsD,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACvCnD,aAAa,CAAC,WAAW,CAAC;IAC1BE,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAM;QAAEY,IAAI,EAAE;UAAEC;QAAQ;MAAE,CAAC,GAAG,MAAM5C,KAAK,CAAC6C,GAAG,CAAC,GAAGxC,OAAO,kBAAkB,EAAE;QACxEgC,MAAM,EAAE;UAAEC,OAAO,EAAEhC;QAAQ;MAC/B,CAAC,CAAC;MACFM,SAAS,CAACgC,OAAO,CAAC;MAClB1B,QAAQ,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAAC;MACpB,IAAIA,OAAO,CAACM,MAAM,EAAE;QAChB,MAAMC,UAAU,CAACP,OAAO,CAAC,CAAC,CAAC,CAACQ,EAAE,CAAC;MACnC;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVtB,QAAQ,CAAC,kCAAkC,CAAC;IAChD,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAK2E,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChB5E,OAAA;MAAQ2E,SAAS,EAAC,MAAM;MAAAC,QAAA,eACpB5E,OAAA;QAAK2E,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5B5E,OAAA;UAAQ2E,SAAS,EAAC,MAAM;UAACE,OAAO,EAAEA,CAAA,KAAMpB,MAAM,CAACqB,QAAQ,CAACC,IAAI,GAAG,GAAI;UAAAH,QAAA,eAC/D5E,OAAA;YAAKgF,GAAG,EAAC,gCAAgC;YAACC,GAAG,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACTrF,OAAA;UAAM2E,SAAS,EAAC,gBAAgB;UAACW,QAAQ,EAAE3B,YAAa;UAAAiB,QAAA,gBACpD5E,OAAA;YAAOgC,IAAI,EAAC,MAAM;YAACuD,WAAW,EAAC,QAAQ;YAACC,QAAQ,EAAG5B,CAAC,IAAKlD,YAAY,CAACkD,CAAC,CAAC6B,MAAM,CAACC,KAAK;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzFrF,OAAA;YAAQ2E,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACPrF,OAAA;UAAK2E,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC7B5E,OAAA;YAAQ0F,KAAK,EAAEtE,QAAS;YAACoE,QAAQ,EAAG5B,CAAC,IAAKE,oBAAoB,CAACF,CAAC,CAAC6B,MAAM,CAACC,KAAK,CAAE;YAAAd,QAAA,gBAC3E5E,OAAA;cAAQ0F,KAAK,EAAC,EAAE;cAAAd,QAAA,EAAC;YAAG;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC5BM,MAAM,CAACC,OAAO,CAAChE,UAAU,CAAC,CAACiE,GAAG,CAAC,CAAC,CAAC7C,EAAE,EAAEM,IAAI,CAAC,kBACvCtD,OAAA;cAAiB0F,KAAK,EAAE1C,EAAG;cAAA4B,QAAA,EAAEtB;YAAI,GAApBN,EAAE;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2B,CAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACNrF,OAAA;UAAK2E,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7B5E,OAAA;YAAQ2E,SAAS,EAAC,eAAe;YAACE,OAAO,EAAEH,sBAAuB;YAAAE,QAAA,EAAC;UAAQ;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpFrF,OAAA;YAAQ2E,SAAS,EAAC,eAAe;YAACE,OAAO,EAAEd,kBAAmB;YAAAa,QAAA,EAAC;UAAO;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC/ErF,OAAA;YAAQ2E,SAAS,EAAC,eAAe;YAACE,OAAO,EAAEb,iBAAkB;YAAAY,QAAA,EAAC;UAAM;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7ErF,OAAA;YAAQ2E,SAAS,EAAC,eAAe;YAACE,OAAO,EAAEJ,mBAAoB;YAAAG,QAAA,EAAC;UAAS;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACR7D,OAAO,iBAAIxB,OAAA;MAAA4E,QAAA,EAAK;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAChC3D,KAAK,iBAAI1B,OAAA;MAAA4E,QAAA,EAAMlD;IAAK;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5BrF,OAAA,CAACH,aAAa;MAACU,MAAM,EAAEA,MAAO;MAACiD,WAAW,EAAEA;IAAY;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3DrF,OAAA;MAAA4E,QAAA,EACK/D,KAAK,iBACFb,OAAA;QAAK2E,SAAS,EAAC,aAAa;QAACmB,KAAK,EAAE;UAAEC,eAAe,EAAE,QAAQ5F,UAAU,GAAGU,KAAK,CAACmF,aAAa;QAAK,CAAE;QAAApB,QAAA,GACjGjE,OAAO,iBACJX,OAAA;UAAK2E,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAC9B5E,OAAA;YAAKgF,GAAG,EAAE,GAAG7E,UAAU,GAAGU,KAAK,CAACoF,WAAW,EAAG;YAAChB,GAAG,EAAEpE,KAAK,CAACE,KAAM;YAAC4D,SAAS,EAAC,cAAc;YAACuB,KAAK,EAAC,KAAK;YAACC,MAAM,EAAC,KAAK;YAAC3E,OAAO,EAAC;UAAM;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpIrF,OAAA;YACIkG,KAAK,EAAC,KAAK;YACXC,MAAM,EAAC,KAAK;YACZnB,GAAG,EAAE,iCAAiCrE,OAAO,CAACyF,GAAG,EAAG;YACpDrF,KAAK,EAAC,sBAAsB;YAC5BsF,KAAK,EAAC,0FAA0F;YAChGC,eAAe;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CACR,eACDrF,OAAA;UAAK2E,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3B5E,OAAA;YAAA4E,QAAA,EAAI;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbrF,OAAA;YAAA4E,QAAA,GACK1D,IAAI,CAACyB,MAAM,CAAC4D,KAAK,IAAIA,KAAK,CAACC,UAAU,KAAK,WAAW,CAAC,CAACX,GAAG,CAACY,QAAQ,iBAChEzG,OAAA;cAAA4E,QAAA,GAAsB,YAAU,EAAC6B,QAAQ,CAACnD,IAAI;YAAA,GAArCmD,QAAQ,CAACzD,EAAE;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA+B,CACtD,CAAC,EACDnE,IAAI,CAACyB,MAAM,CAAC4D,KAAK,IAAIA,KAAK,CAACG,KAAK,IAAI,EAAE,IAAIH,KAAK,CAACC,UAAU,KAAK,WAAW,CAAC,CAACX,GAAG,CAACU,KAAK,iBAClFvG,OAAA;cAAA4E,QAAA,GAAoB2B,KAAK,CAACI,SAAS,EAAC,KAAG,EAACJ,KAAK,CAACjD,IAAI;YAAA,GAAzCiD,KAAK,CAACvD,EAAE;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAsC,CAC1D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,EACLrE,OAAO,gBACJhB,OAAA;UAAQ6E,OAAO,EAAEA,CAAA,KAAM5D,UAAU,CAAC,KAAK,CAAE;UAAC0D,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAE1ErF,OAAA;UAAK2E,SAAS,EAAC,WAAW;UAAAC,QAAA,eACtB5E,OAAA;YAAA4E,QAAA,gBACI5E,OAAA;cAAI2E,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAE/D,KAAK,CAACE;YAAK;cAAAmE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7CrF,OAAA;cAAG2E,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAE/D,KAAK,CAAC+F;YAAQ;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACPrF,OAAA;MAAK2E,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC7B5E,OAAA;QAAK2E,SAAS,EAAC,YAAY;QAAAC,QAAA,EACtBrE,MAAM,CAACsF,GAAG,CAAChF,KAAK,iBACbb,OAAA;UAAoB2E,SAAS,EAAC,YAAY;UAACE,OAAO,EAAEA,CAAA,KAAMrB,WAAW,CAAC3C,KAAK,CAAE;UAAA+D,QAAA,gBACzE5E,OAAA;YAAKgF,GAAG,EAAE,GAAG5E,SAAS,GAAGS,KAAK,CAACoF,WAAW,EAAG;YAAChB,GAAG,EAAC,EAAE;YAACkB,MAAM,EAAE,GAAI;YAACD,KAAK,EAAC,MAAM;YAAC1E,OAAO,EAAC;UAAM;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChGrF,OAAA;YAAA4E,QAAA,EAAK/D,KAAK,CAACE;UAAK;YAAAmE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBrF,OAAA;YAAA4E,QAAA,GAAG,UAAQ,EAAC/D,KAAK,CAACgG,YAAY;UAAA;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAH7BxE,KAAK,CAACmC,EAAE;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIb,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNrF,OAAA,CAACF,MAAM;MAAAoF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd;AAAC/E,EAAA,CAlPQD,GAAG;AAAAyG,EAAA,GAAHzG,GAAG;AAoPZ,eAAeA,GAAG;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}