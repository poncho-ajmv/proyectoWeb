{"ast":null,"code":"var _jsxFileName = \"/home/toto/Downloads/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\";\nimport Footer from \"./Footer\";\nimport StarRating from './StarRating';\n\n/*CSS*/\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"674684d28cd5c404ad1bf06cd1a5d482\";\nconst IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\nconst URL_IMAGE = \"https://image.tmdb.org/t/p/original\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({\n    title: \"Loading Movies\"\n  });\n  const [playing, setPlaying] = useState(false);\n  const [cast, setCast] = useState([]);\n  const [directors, setDirectors] = useState([]); // Nuevo estado para los directores\n  const [category, setCategory] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"\");\n  const [zoomLevel, setZoomLevel] = useState(window.devicePixelRatio);\n  useEffect(() => {\n    const handleResize = () => {\n      setZoomLevel(window.devicePixelRatio);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const fetchMovies = async (searchKey, category, searchType, fromDate, toDate) => {\n    const type = searchKey ? \"search\" : \"discover\";\n    let params = {\n      api_key: API_KEY,\n      query: searchKey,\n      with_genres: category ? category : undefined\n    };\n    if (searchType) {\n      params = {\n        ...params,\n        ...{\n          sort_by: searchType\n        }\n      };\n    }\n    if (fromDate && toDate) {\n      params[\"primary_release_date.gte\"] = fromDate;\n      params[\"primary_release_date.lte\"] = toDate;\n    }\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: params\n    });\n    const filteredMovies = results.filter(movie => !movie.title.toLowerCase().includes(\"tiburon\") && movie.title !== \"No Way Up\" && movie.title !== \"Jaws\" && movie.title !== \"Sharknado\" && movie.title !== \"Deep Blue Sea\" && movie.title !== \"The Meg\" && movie.title !== \"Under Paris\" && movie.title !== \"Shark\");\n    setMovies(filteredMovies);\n    setMovie(filteredMovies[0]);\n    if (filteredMovies.length) {\n      await fetchMovie(filteredMovies[0].id);\n    }\n  };\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos,credits\"\n      }\n    });\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n    setMovie(data);\n    if (data.credits && data.credits.cast) {\n      setCast(data.credits.cast);\n      setDirectors(data.credits.crew.filter(person => person.job === \"Director\")); // Filtra los directores y actualiza el estado\n    }\n  };\n  const selectMovie = async movie => {\n    fetchMovie(movie.id);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchKey, category, searchType);\n  };\n  const goToHomePage = () => {\n    window.location.href = \"/\";\n  };\n  const handleCategoryChange = category => {\n    setCategory(category);\n    setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n    fetchMovies(searchKey, category, searchType);\n  };\n  useEffect(() => {\n    // eslint-disable-next-line\n    fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n  }, []);\n  const fetchPopularMovies = async () => {\n    setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n    fetchMovies(searchKey, category, \"popularity.desc\");\n  };\n  const fetchRecentMovies = async () => {\n    const currentDate = new Date();\n    const fromDate = new Date(currentDate);\n    const toDate = new Date(currentDate);\n    fromDate.setMonth(currentDate.getMonth() - 1);\n    toDate.setMonth(currentDate.getMonth() + 1);\n    const fromDateString = fromDate.toISOString().split(\"T\")[0];\n    const toDateString = toDate.toISOString().split(\"T\")[0];\n    setSearchType(\"release_date.desc\");\n    fetchMovies(searchKey, category, `release_date.desc`, fromDateString, toDateString);\n  };\n  const fetchTopRatedMovies = async () => {\n    setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n    fetchMovies(searchKey, category, \"vote_average.desc\");\n  };\n  const fetchTopRatedMoviesAll = async () => {\n    setSearchType(\"top_rated\");\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/movie/top_rated`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    setMovies(results);\n    setMovie(results[0]);\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  };\n  const categories = {\n    28: \"Action\",\n    35: \"Comedy\",\n    18: \"Drama\",\n    27: \"Horror\",\n    10749: \"Romance\",\n    878: \"Science Fiction\",\n    10751: \"Family\",\n    16: \"Animation\",\n    80: \"Crime\",\n    37: \"Western\",\n    36: \"History\",\n    14: \"Fantasy\",\n    53: \"Thriller\",\n    10752: \"War\",\n    12: \"Adventure\",\n    99: \"Documentary\",\n    10402: \"Music\",\n    10770: \"TV Movie\",\n    9648: \"Mystery\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      zoom: zoomLevel\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-and-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logo\",\n          onClick: goToHomePage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://imgfz.com/i/5hQ3ZSJ.png\",\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchTopRatedMoviesAll,\n          children: \"All time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search-container\",\n        onSubmit: searchMovies,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search\",\n          className: \"search-input\",\n          onChange: e => setSearchKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: searchMovies,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: e => handleCategoryChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            className: \"category-but\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), Object.entries(categories).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchPopularMovies,\n          children: \"Popular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchRecentMovies,\n          children: \"Recent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchTopRatedMovies,\n          children: \"Top Rated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MovieCarousel, {\n        movies: movies,\n        selectMovie: selectMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewtrailer\",\n          style: {\n            backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(StarRating, {\n            rating: movie.vote_average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), trailer && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trailer-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${IMAGE_PATH}${movie.poster_path}`,\n              alt: movie.title,\n              className: \"movie-poster\",\n              width: \"510\",\n              height: \"815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"560\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${trailer.key}`,\n              title: \"YouTube video player\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cast-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Directors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: directors.map(director => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: director.name\n              }, director.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Cast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cast.filter(actor => actor.order <= 10).map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [actor.character, \" - \", actor.name]\n              }, actor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this), playing ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPlaying(false),\n            className: \"boton\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-white\",\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white\",\n                children: movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_movies\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row_movies\",\n        children: movies.map(movie =>\n        /*#__PURE__*/\n        // eslint-disable-next-line\n        _jsxDEV(\"div\", {\n          // eslint-disable-next-line\n          className: \"col_movies\" // eslint-disable-next-line\n          ,\n          onClick: () => selectMovie(movie),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${URL_IMAGE + movie.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", movie.vote_average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"C84t6Q3W6+YRitB3gqzG7JfzO6Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieCarousel","Footer","StarRating","jsxDEV","_jsxDEV","API_URL","API_KEY","IMAGE_PATH","URL_IMAGE","App","_s","movies","setMovies","searchKey","setSearchKey","trailer","setTrailer","movie","setMovie","title","playing","setPlaying","cast","setCast","directors","setDirectors","category","setCategory","searchType","setSearchType","zoomLevel","setZoomLevel","window","devicePixelRatio","handleResize","addEventListener","removeEventListener","fetchMovies","fromDate","toDate","type","params","api_key","query","with_genres","undefined","sort_by","data","results","get","filteredMovies","filter","toLowerCase","includes","length","fetchMovie","id","append_to_response","videos","find","vid","name","credits","crew","person","job","selectMovie","scrollTo","searchMovies","e","preventDefault","goToHomePage","location","href","handleCategoryChange","fetchPopularMovies","fetchRecentMovies","currentDate","Date","setMonth","getMonth","fromDateString","toISOString","split","toDateString","fetchTopRatedMovies","fetchTopRatedMoviesAll","categories","className","style","zoom","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","target","value","Object","entries","map","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","rating","vote_average","poster_path","width","height","key","allow","allowFullScreen","director","actor","order","character","overview","_c","$RefreshReg$"],"sources":["/home/toto/Downloads/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\"; \nimport Footer from \"./Footer\";\nimport StarRating from './StarRating';\n\n/*CSS*/\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst API_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"674684d28cd5c404ad1bf06cd1a5d482\";\nconst IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\nconst URL_IMAGE = \"https://image.tmdb.org/t/p/original\";\n\nfunction App() {\n    const [movies, setMovies] = useState([]);\n    const [searchKey, setSearchKey] = useState(\"\");\n    const [trailer, setTrailer] = useState(null);\n    const [movie, setMovie] = useState({ title: \"Loading Movies\" });\n    const [playing, setPlaying] = useState(false);\n    const [cast, setCast] = useState([]);\n    const [directors, setDirectors] = useState([]); // Nuevo estado para los directores\n    const [category, setCategory] = useState(\"\");\n    const [searchType, setSearchType] = useState(\"\");\n    const [zoomLevel, setZoomLevel] = useState(window.devicePixelRatio);\n\n    useEffect(() => {\n        const handleResize = () => {\n            setZoomLevel(window.devicePixelRatio);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    const fetchMovies = async (\n        searchKey,\n        category,\n        searchType,\n        fromDate,\n        toDate\n    ) => {\n        const type = searchKey ? \"search\" : \"discover\";\n        let params = {\n            api_key: API_KEY,\n            query: searchKey,\n            with_genres: category ? category : undefined,\n        };\n\n        if (searchType) {\n            params = { ...params, ...{ sort_by: searchType } };\n        }\n\n        if (fromDate && toDate) {\n            params[\"primary_release_date.gte\"] = fromDate;\n            params[\"primary_release_date.lte\"] = toDate;\n        }\n\n        const {\n            data: { results },\n        } = await axios.get(`${API_URL}/${type}/movie`, {\n            params: params,\n        });\n\n        const filteredMovies = results.filter(\n            (movie) =>\n                !movie.title.toLowerCase().includes(\"tiburon\") &&\n                movie.title !== \"No Way Up\" &&\n                movie.title !== \"Jaws\" &&\n                movie.title !== \"Sharknado\" &&\n                movie.title !== \"Deep Blue Sea\" &&\n                movie.title !== \"The Meg\" &&\n                movie.title !== \"Under Paris\" &&\n                movie.title !== \"Shark\"\n        );\n\n        setMovies(filteredMovies);\n        setMovie(filteredMovies[0]);\n\n        if (filteredMovies.length) {\n            await fetchMovie(filteredMovies[0].id);\n        }\n    };\n\n    const fetchMovie = async (id) => {\n        const { data } = await axios.get(`${API_URL}/movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n                append_to_response: \"videos,credits\",\n            },\n        });\n\n        if (data.videos && data.videos.results) {\n            const trailer = data.videos.results.find(\n                (vid) => vid.name === \"Official Trailer\"\n            );\n            setTrailer(trailer ? trailer : data.videos.results[0]);\n        }\n        setMovie(data);\n        if (data.credits && data.credits.cast) {\n            setCast(data.credits.cast);\n            setDirectors(data.credits.crew.filter(person => person.job === \"Director\")); // Filtra los directores y actualiza el estado\n        }\n    };\n\n    const selectMovie = async (movie) => {\n        fetchMovie(movie.id);\n        setMovie(movie);\n        window.scrollTo(0, 0);\n    };\n\n    const searchMovies = (e) => {\n        e.preventDefault();\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    const goToHomePage = () => {\n        window.location.href = \"/\";\n    };\n\n    const handleCategoryChange = (category) => {\n        setCategory(category);\n        setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    useEffect(() => {\n        // eslint-disable-next-line\n        fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n    }, []);\n\n    const fetchPopularMovies = async () => {\n        setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n        fetchMovies(searchKey, category, \"popularity.desc\");\n    };\n\n    const fetchRecentMovies = async () => {\n        const currentDate = new Date();\n        const fromDate = new Date(currentDate);\n        const toDate = new Date(currentDate);\n\n        fromDate.setMonth(currentDate.getMonth() - 1);\n        toDate.setMonth(currentDate.getMonth() + 1);\n\n        const fromDateString = fromDate.toISOString().split(\"T\")[0];\n        const toDateString = toDate.toISOString().split(\"T\")[0];\n\n        setSearchType(\"release_date.desc\");\n\n        fetchMovies(\n            searchKey,\n            category,\n            `release_date.desc`,\n            fromDateString,\n            toDateString\n        );\n    };\n\n    const fetchTopRatedMovies = async () => {\n        setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n        fetchMovies(searchKey, category, \"vote_average.desc\");\n    };\n\n    const fetchTopRatedMoviesAll = async () => {\n        setSearchType(\"top_rated\");\n        const {\n            data: { results },\n        } = await axios.get(`${API_URL}/movie/top_rated`, {\n            params: {\n                api_key: API_KEY,\n            },\n        });\n\n        setMovies(results);\n        setMovie(results[0]);\n        if (results.length) {\n            await fetchMovie(results[0].id);\n        }\n    };\n\n    const categories = {\n        28: \"Action\",\n        35: \"Comedy\",\n        18: \"Drama\",\n        27: \"Horror\",\n        10749: \"Romance\",\n        878: \"Science Fiction\",\n        10751: \"Family\",\n        16: \"Animation\",\n        80: \"Crime\",\n        37: \"Western\",\n        36: \"History\",\n        14: \"Fantasy\",\n        53: \"Thriller\",\n        10752: \"War\",\n        12: \"Adventure\",\n        99: \"Documentary\",\n        10402: \"Music\",\n        10770: \"TV Movie\",\n        9648: \"Mystery\",\n    };\n\n    return (\n        <div className=\"App\" style={{ zoom: zoomLevel }}>\n            <header className=\"menu\">\n                <div className=\"logo-and-search\">\n                    <button className=\"logo\" onClick={goToHomePage}>\n                        <img src=\"http://imgfz.com/i/5hQ3ZSJ.png\" alt=\"Logo\" />\n                    </button>\n                    <button className=\"filter-button\" onClick={fetchTopRatedMoviesAll}>All time</button>\n                </div>\n                <form className=\"search-container\" onSubmit={searchMovies}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        className=\"search-input\"\n                        onChange={(e) => setSearchKey(e.target.value)}\n                    />\n                    <button className=\"search-button\" onClick={searchMovies}>\n                        Search\n                    </button>\n                </form>\n                <div className=\"category-buttons\">\n                    <select\n                        value={category}\n                        onChange={(e) => handleCategoryChange(e.target.value)}\n                    >\n                        <option value=\"\" className=\"category-but\">All</option>\n                        {Object.entries(categories).map(([id, name]) => (\n                            <option key={id} value={id}>\n                                {name}\n                            </option>\n                        ))}\n                    </select>\n                    <button className=\"filter-button\" onClick={fetchPopularMovies}>Popular</button>\n                    <button className=\"filter-button\" onClick={fetchRecentMovies}>Recent</button>\n                    <button className=\"filter-button\" onClick={fetchTopRatedMovies}>Top Rated</button>\n                </div>\n            </header>\n            <div>\n                <MovieCarousel movies={movies} selectMovie={selectMovie} />\n                <main>\n                    {movie ? (\n                        <div\n                            className=\"viewtrailer\"\n                            style={{\n                                backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n                                backgroundSize: \"cover\",\n                                backgroundPosition: \"center\",\n                            }}\n                        >\n                            <StarRating rating={movie.vote_average} />\n                            {trailer && (\n                                <div className=\"trailer-container\">\n                                    <img\n                                        src={`${IMAGE_PATH}${movie.poster_path}`}\n                                        alt={movie.title}\n                                        className=\"movie-poster\"\n                                        width=\"510\"\n                                        height=\"815\"\n                                    />\n                                    <iframe\n                                        width=\"560\"\n                                        height=\"315\"\n                                        src={`https://www.youtube.com/embed/${trailer.key}`}\n                                        title=\"YouTube video player\"\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                        allowFullScreen\n                                    ></iframe>\n                                </div>\n                            )}\n\n                            <div className=\"cast-container\">\n                                <h2>Directors</h2>\n                                <ul>\n                                    {directors.map((director) => (\n                                        <li key={director.id}>{director.name}</li>\n                                    ))}\n                                </ul>\n                                <h2>Cast</h2>\n                                <ul>\n                                    {cast\n                                        .filter(actor => actor.order <= 10)\n                                        .map((actor) => (\n                                            <li key={actor.id}>\n                                                {actor.character} - {actor.name}\n                                            </li>\n                                        ))}\n                                </ul>\n                            </div>\n\n                            {playing ? (\n                                <button\n                                    onClick={() => setPlaying(false)}\n                                    className=\"boton\"\n                                >\n                                    Close\n                                </button>\n                            ) : (\n                                <div className=\"container\">\n                                    <div>\n                                        <h1 className=\"text-white\">\n                                            {movie.title}\n                                        </h1>\n                                        <p className=\"text-white\">\n                                            {movie.overview}\n                                        </p>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    ) : null}\n                </main>\n            </div>\n            <div className=\"container_movies\">\n                <div className=\"row_movies\">\n                    {movies.map((movie) => (// eslint-disable-next-line\n                        <div// eslint-disable-next-line\n                            key={movie.id}// eslint-disable-next-line\n                            className=\"col_movies\"// eslint-disable-next-line\n                            onClick={() => selectMovie(movie)}\n                        >\n                            <img src={`${URL_IMAGE + movie.poster_path}`} /> \n                            <h4>{movie.title}</h4>\n                            <p>Rating: {movie.vote_average}</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}