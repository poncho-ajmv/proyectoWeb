{"ast":null,"code":"// moviesData.js\nconst extractYoutubeId = url => {\n  const regExp = /^.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n  const match = url.match(regExp);\n  return match && match[1].length === 11 ? match[1] : null;\n};\nconst fetchYoutubeVideoDetails = async youtubeId => {\n  try {\n    const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?id=${youtubeId}&part=snippet&key=YOUR_API_KEY`);\n    const data = await response.json();\n    return data.items[0].snippet;\n  } catch (error) {\n    console.error(\"Error fetching YouTube video details:\", error);\n    return null;\n  }\n};\nconst movies = [{\n  title: \"Pelicula 1\",\n  youtubeLink: \"https://www.youtube.com/watch?v=qIYyXcCwvKc\",\n  people: []\n}, {\n  title: \"Pelicula 2\",\n  youtubeLink: \"https://www.youtube.com/watch?v=abcdefghijk\",\n  people: []\n}\n// Añade más películas si lo deseas\n];\nconst fillMovieDetails = async () => {\n  for (const movie of movies) {\n    const youtubeId = extractYoutubeId(movie.youtubeLink);\n    if (youtubeId) {\n      const videoDetails = await fetchYoutubeVideoDetails(youtubeId);\n      if (videoDetails) {\n        movie.title = videoDetails.title;\n        movie.poster = videoDetails.thumbnails.default.url;\n      }\n    }\n  }\n};\nfillMovieDetails();\nexport default movies;","map":{"version":3,"names":["extractYoutubeId","url","regExp","match","length","fetchYoutubeVideoDetails","youtubeId","response","fetch","data","json","items","snippet","error","console","movies","title","youtubeLink","people","fillMovieDetails","movie","videoDetails","poster","thumbnails","default"],"sources":["/home/poncho/toto/CODE/React/proyect/src/App.js"],"sourcesContent":["// moviesData.js\nconst extractYoutubeId = (url) => {\n    const regExp =\n        /^.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=)([^#\\&\\?]*).*/;\n    const match = url.match(regExp);\n    return match && match[1].length === 11 ? match[1] : null;\n};\n\nconst fetchYoutubeVideoDetails = async (youtubeId) => {\n    try {\n        const response = await fetch(\n            `https://www.googleapis.com/youtube/v3/videos?id=${youtubeId}&part=snippet&key=YOUR_API_KEY`\n        );\n        const data = await response.json();\n        return data.items[0].snippet;\n    } catch (error) {\n        console.error(\"Error fetching YouTube video details:\", error);\n        return null;\n    }\n};\n\nconst movies = [\n    {\n        title: \"Pelicula 1\",\n        youtubeLink: \"https://www.youtube.com/watch?v=qIYyXcCwvKc\",\n        people: [],\n    },\n    {\n        title: \"Pelicula 2\",\n        youtubeLink: \"https://www.youtube.com/watch?v=abcdefghijk\",\n        people: [],\n    },\n    // Añade más películas si lo deseas\n];\n\nconst fillMovieDetails = async () => {\n    for (const movie of movies) {\n        const youtubeId = extractYoutubeId(movie.youtubeLink);\n        if (youtubeId) {\n            const videoDetails = await fetchYoutubeVideoDetails(youtubeId);\n            if (videoDetails) {\n                movie.title = videoDetails.title;\n                movie.poster = videoDetails.thumbnails.default.url;\n            }\n        }\n    }\n};\n\nfillMovieDetails();\n\nexport default movies;\n"],"mappings":"AAAA;AACA,MAAMA,gBAAgB,GAAIC,GAAG,IAAK;EAC9B,MAAMC,MAAM,GACR,mEAAmE;EACvE,MAAMC,KAAK,GAAGF,GAAG,CAACE,KAAK,CAACD,MAAM,CAAC;EAC/B,OAAOC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAACC,MAAM,KAAK,EAAE,GAAGD,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI;AAC5D,CAAC;AAED,MAAME,wBAAwB,GAAG,MAAOC,SAAS,IAAK;EAClD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,mDAAkDF,SAAU,gCACjE,CAAC;IACD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,OAAO,IAAI;EACf;AACJ,CAAC;AAED,MAAME,MAAM,GAAG,CACX;EACIC,KAAK,EAAE,YAAY;EACnBC,WAAW,EAAE,6CAA6C;EAC1DC,MAAM,EAAE;AACZ,CAAC,EACD;EACIF,KAAK,EAAE,YAAY;EACnBC,WAAW,EAAE,6CAA6C;EAC1DC,MAAM,EAAE;AACZ;AACA;AAAA,CACH;AAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACjC,KAAK,MAAMC,KAAK,IAAIL,MAAM,EAAE;IACxB,MAAMT,SAAS,GAAGN,gBAAgB,CAACoB,KAAK,CAACH,WAAW,CAAC;IACrD,IAAIX,SAAS,EAAE;MACX,MAAMe,YAAY,GAAG,MAAMhB,wBAAwB,CAACC,SAAS,CAAC;MAC9D,IAAIe,YAAY,EAAE;QACdD,KAAK,CAACJ,KAAK,GAAGK,YAAY,CAACL,KAAK;QAChCI,KAAK,CAACE,MAAM,GAAGD,YAAY,CAACE,UAAU,CAACC,OAAO,CAACvB,GAAG;MACtD;IACJ;EACJ;AACJ,CAAC;AAEDkB,gBAAgB,CAAC,CAAC;AAElB,eAAeJ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}