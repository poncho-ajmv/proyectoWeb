{"ast":null,"code":"var _jsxFileName = \"/home/toto/Downloads/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_URL, API_KEY, IMAGE_PATH, URL_IMAGE } from \"./constants\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\";\nimport Footer from \"./Footer\";\nimport StarRating from './StarRating';\nimport Favorites from './Favorites'; // Import Favorites\n\n/* CSS */\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({\n    title: \"Loading Movies\"\n  });\n  const [playing, setPlaying] = useState(false);\n  const [cast, setCast] = useState([]);\n  const [directors, setDirectors] = useState([]); // Nuevo estado para los directores\n  const [category, setCategory] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"\");\n  const [zoomLevel, setZoomLevel] = useState(window.devicePixelRatio);\n  const [favorites, setFavorites] = useState([]); // Estado para favoritos\n  const [showFavorites, setShowFavorites] = useState(false); // Estado para controlar si se muestran los favoritos\n\n  useEffect(() => {\n    const handleResize = () => {\n      setZoomLevel(window.devicePixelRatio);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const fetchMovies = async (searchKey, category, searchType, fromDate, toDate) => {\n    const type = searchKey ? \"search\" : \"discover\";\n    let params = {\n      api_key: API_KEY,\n      query: searchKey,\n      with_genres: category ? category : undefined\n    };\n    if (searchType) {\n      params = {\n        ...params,\n        ...{\n          sort_by: searchType\n        }\n      };\n    }\n    if (fromDate && toDate) {\n      params[\"primary_release_date.gte\"] = fromDate;\n      params[\"primary_release_date.lte\"] = toDate;\n    }\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: params\n    });\n    const filteredMovies = results.filter(movie => !movie.title.toLowerCase().includes(\"tiburon\") && movie.title !== \"No Way Up\" && movie.title !== \"Jaws\" && movie.title !== \"Sharknado\" && movie.title !== \"Deep Blue Sea\" && movie.title !== \"The Meg\" && movie.title !== \"Under Paris\" && movie.title !== \"Shark\");\n    setMovies(filteredMovies);\n    setMovie(filteredMovies[0]);\n    if (filteredMovies.length) {\n      await fetchMovie(filteredMovies[0].id);\n    }\n  };\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos,credits\"\n      }\n    });\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n    setMovie(data);\n    if (data.credits && data.credits.cast) {\n      setCast(data.credits.cast);\n      setDirectors(data.credits.crew.filter(person => person.job === \"Director\")); // Filtra los directores y actualiza el estado\n    }\n  };\n  const selectMovie = async movie => {\n    fetchMovie(movie.id);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchKey, category, searchType);\n  };\n  const goToHomePage = () => {\n    window.location.href = \"/\";\n  };\n  const handleCategoryChange = category => {\n    setCategory(category);\n    setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n    fetchMovies(searchKey, category, searchType);\n  };\n  useEffect(() => {\n    // eslint-disable-next-line\n    fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n  }, []);\n  const fetchPopularMovies = async () => {\n    setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n    fetchMovies(searchKey, category, \"popularity.desc\");\n  };\n  const fetchRecentMovies = async () => {\n    const currentDate = new Date();\n    const fromDate = new Date(currentDate);\n    const toDate = new Date(currentDate);\n    fromDate.setMonth(currentDate.getMonth() - 1);\n    toDate.setMonth(currentDate.getMonth() + 1);\n    const fromDateString = fromDate.toISOString().split(\"T\")[0];\n    const toDateString = toDate.toISOString().split(\"T\")[0];\n    setSearchType(\"release_date.desc\");\n    fetchMovies(searchKey, category, `release_date.desc`, fromDateString, toDateString);\n  };\n  const fetchTopRatedMovies = async () => {\n    setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n    fetchMovies(searchKey, category, \"vote_average.desc\");\n  };\n  const fetchTopRatedMoviesAll = async () => {\n    setSearchType(\"top_rated\");\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/movie/top_rated`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    setMovies(results);\n    setMovie(results[0]);\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  };\n  const toggleFavorite = movie => {\n    if (favorites.find(fav => fav.id === movie.id)) {\n      setFavorites(favorites.filter(fav => fav.id !== movie.id));\n    } else {\n      setFavorites([...favorites, movie]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      zoom: zoomLevel\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-and-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logo\",\n          onClick: goToHomePage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://imgfz.com/i/5hQ3ZSJ.png\",\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchTopRatedMoviesAll,\n          children: \"All time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: () => window.location.href = \"/favorites\",\n          children: showFavorites ? \"Show All\" : \"Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search-container\",\n        onSubmit: searchMovies,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search\",\n          className: \"search-input\",\n          onChange: e => setSearchKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: searchMovies,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: e => handleCategoryChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            className: \"category-but\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), Object.entries(categories).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchPopularMovies,\n          children: \"Popular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchRecentMovies,\n          children: \"Recent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchTopRatedMovies,\n          children: \"Top Rated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MovieCarousel, {\n        movies: movies,\n        selectMovie: selectMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewtrailer\",\n          style: {\n            backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(StarRating, {\n            rating: movie.vote_average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), trailer && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trailer-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${IMAGE_PATH}${movie.poster_path}`,\n              alt: movie.title,\n              className: \"movie-poster\",\n              width: \"510\",\n              height: \"815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"560\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${trailer.key}`,\n              title: \"YouTube video player\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleFavorite(movie),\n            children: favorites.find(fav => fav.id === movie.id) ? \"Remove from Favorites\" : \"Add to Favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cast-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Directors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: directors.map(director => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: director.name\n              }, director.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Cast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cast.filter(actor => actor.order <= 10).map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [actor.character, \" - \", actor.name]\n              }, actor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), playing ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPlaying(false),\n            className: \"boton\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-white\",\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white\",\n                children: movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), showFavorites ? /*#__PURE__*/_jsxDEV(Favorites, {\n      favorites: favorites,\n      selectMovie: selectMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_movies\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row_movies\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col_movies\",\n          onClick: () => selectMovie(movie),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${URL_IMAGE + movie.poster_path}`,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", movie.vote_average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BGDVAHeCTjRq7pURg6XYBed++9Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","API_URL","API_KEY","IMAGE_PATH","URL_IMAGE","MovieCarousel","Footer","StarRating","Favorites","jsxDEV","_jsxDEV","App","_s","movies","setMovies","searchKey","setSearchKey","trailer","setTrailer","movie","setMovie","title","playing","setPlaying","cast","setCast","directors","setDirectors","category","setCategory","searchType","setSearchType","zoomLevel","setZoomLevel","window","devicePixelRatio","favorites","setFavorites","showFavorites","setShowFavorites","handleResize","addEventListener","removeEventListener","fetchMovies","fromDate","toDate","type","params","api_key","query","with_genres","undefined","sort_by","data","results","get","filteredMovies","filter","toLowerCase","includes","length","fetchMovie","id","append_to_response","videos","find","vid","name","credits","crew","person","job","selectMovie","scrollTo","searchMovies","e","preventDefault","goToHomePage","location","href","handleCategoryChange","fetchPopularMovies","fetchRecentMovies","currentDate","Date","setMonth","getMonth","fromDateString","toISOString","split","toDateString","fetchTopRatedMovies","fetchTopRatedMoviesAll","toggleFavorite","fav","className","style","zoom","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","target","value","Object","entries","categories","map","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","rating","vote_average","poster_path","width","height","key","allow","allowFullScreen","director","actor","order","character","overview","_c","$RefreshReg$"],"sources":["/home/toto/Downloads/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_URL, API_KEY, IMAGE_PATH, URL_IMAGE } from \"./constants\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\";\nimport Footer from \"./Footer\";\nimport StarRating from './StarRating';\nimport Favorites from './Favorites'; // Import Favorites\n\n/* CSS */\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({ title: \"Loading Movies\" });\n  const [playing, setPlaying] = useState(false);\n  const [cast, setCast] = useState([]);\n  const [directors, setDirectors] = useState([]); // Nuevo estado para los directores\n  const [category, setCategory] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"\");\n  const [zoomLevel, setZoomLevel] = useState(window.devicePixelRatio);\n  const [favorites, setFavorites] = useState([]); // Estado para favoritos\n  const [showFavorites, setShowFavorites] = useState(false); // Estado para controlar si se muestran los favoritos\n\n  useEffect(() => {\n    const handleResize = () => {\n      setZoomLevel(window.devicePixelRatio);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const fetchMovies = async (\n    searchKey,\n    category,\n    searchType,\n    fromDate,\n    toDate\n  ) => {\n    const type = searchKey ? \"search\" : \"discover\";\n    let params = {\n      api_key: API_KEY,\n      query: searchKey,\n      with_genres: category ? category : undefined,\n    };\n\n    if (searchType) {\n      params = { ...params, ...{ sort_by: searchType } };\n    }\n\n    if (fromDate && toDate) {\n      params[\"primary_release_date.gte\"] = fromDate;\n      params[\"primary_release_date.lte\"] = toDate;\n    }\n\n    const {\n      data: { results },\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: params,\n    });\n\n    const filteredMovies = results.filter(\n      (movie) =>\n        !movie.title.toLowerCase().includes(\"tiburon\") &&\n        movie.title !== \"No Way Up\" &&\n        movie.title !== \"Jaws\" &&\n        movie.title !== \"Sharknado\" &&\n        movie.title !== \"Deep Blue Sea\" &&\n        movie.title !== \"The Meg\" &&\n        movie.title !== \"Under Paris\" &&\n        movie.title !== \"Shark\"\n    );\n\n    setMovies(filteredMovies);\n    setMovie(filteredMovies[0]);\n\n    if (filteredMovies.length) {\n      await fetchMovie(filteredMovies[0].id);\n    }\n  };\n\n  const fetchMovie = async (id) => {\n    const { data } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos,credits\",\n      },\n    });\n\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(\n        (vid) => vid.name === \"Official Trailer\"\n      );\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n    setMovie(data);\n    if (data.credits && data.credits.cast) {\n      setCast(data.credits.cast);\n      setDirectors(data.credits.crew.filter(person => person.job === \"Director\")); // Filtra los directores y actualiza el estado\n    }\n  };\n\n  const selectMovie = async (movie) => {\n    fetchMovie(movie.id);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n\n  const searchMovies = (e) => {\n    e.preventDefault();\n    fetchMovies(searchKey, category, searchType);\n  };\n\n  const goToHomePage = () => {\n    window.location.href = \"/\";\n  };\n\n  const handleCategoryChange = (category) => {\n    setCategory(category);\n    setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n    fetchMovies(searchKey, category, searchType);\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n  }, []);\n\n  const fetchPopularMovies = async () => {\n    setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n    fetchMovies(searchKey, category, \"popularity.desc\");\n  };\n\n  const fetchRecentMovies = async () => {\n    const currentDate = new Date();\n    const fromDate = new Date(currentDate);\n    const toDate = new Date(currentDate);\n\n    fromDate.setMonth(currentDate.getMonth() - 1);\n    toDate.setMonth(currentDate.getMonth() + 1);\n\n    const fromDateString = fromDate.toISOString().split(\"T\")[0];\n    const toDateString = toDate.toISOString().split(\"T\")[0];\n\n    setSearchType(\"release_date.desc\");\n\n    fetchMovies(\n      searchKey,\n      category,\n      `release_date.desc`,\n      fromDateString,\n      toDateString\n    );\n  };\n\n  const fetchTopRatedMovies = async () => {\n    setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n    fetchMovies(searchKey, category, \"vote_average.desc\");\n  };\n\n  const fetchTopRatedMoviesAll = async () => {\n    setSearchType(\"top_rated\");\n    const {\n      data: { results },\n    } = await axios.get(`${API_URL}/movie/top_rated`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    setMovies(results);\n    setMovie(results[0]);\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  };\n\n  const toggleFavorite = (movie) => {\n    if (favorites.find(fav => fav.id === movie.id)) {\n      setFavorites(favorites.filter(fav => fav.id !== movie.id));\n    } else {\n      setFavorites([...favorites, movie]);\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ zoom: zoomLevel }}>\n      <header className=\"menu\">\n        <div className=\"logo-and-search\">\n          <button className=\"logo\" onClick={goToHomePage}>\n            <img src=\"http://imgfz.com/i/5hQ3ZSJ.png\" alt=\"Logo\" />\n          </button>\n          <button className=\"filter-button\" onClick={fetchTopRatedMoviesAll}>All time</button>\n          <button className=\"filter-button\" onClick={() => window.location.href = \"/favorites\"}>\n            {showFavorites ? \"Show All\" : \"Favorites\"}\n          </button>\n        </div>\n        <form className=\"search-container\" onSubmit={searchMovies}>\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"search-input\"\n            onChange={(e) => setSearchKey(e.target.value)}\n          />\n          <button className=\"search-button\" onClick={searchMovies}>\n            Search\n          </button>\n        </form>\n        <div className=\"category-buttons\">\n          <select\n            value={category}\n            onChange={(e) => handleCategoryChange(e.target.value)}\n          >\n            <option value=\"\" className=\"category-but\">All</option>\n            {Object.entries(categories).map(([id, name]) => (\n              <option key={id} value={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n          <button className=\"filter-button\" onClick={fetchPopularMovies}>Popular</button>\n          <button className=\"filter-button\" onClick={fetchRecentMovies}>Recent</button>\n          <button className=\"filter-button\" onClick={fetchTopRatedMovies}>Top Rated</button>\n        </div>\n      </header>\n      <div>\n        <MovieCarousel movies={movies} selectMovie={selectMovie} />\n        <main>\n          {movie ? (\n            <div\n              className=\"viewtrailer\"\n              style={{\n                backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n              }}\n            >\n              <StarRating rating={movie.vote_average} />\n              {trailer && (\n                <div className=\"trailer-container\">\n                  <img\n                    src={`${IMAGE_PATH}${movie.poster_path}`}\n                    alt={movie.title}\n                    className=\"movie-poster\"\n                    width=\"510\"\n                    height=\"815\"\n                  />\n                  <iframe\n                    width=\"560\"\n                    height=\"315\"\n                    src={`https://www.youtube.com/embed/${trailer.key}`}\n                    title=\"YouTube video player\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                  ></iframe>\n                </div>\n              )}\n              <button onClick={() => toggleFavorite(movie)}>\n                {favorites.find(fav => fav.id === movie.id) ? \"Remove from Favorites\" : \"Add to Favorites\"}\n              </button>\n              <div className=\"cast-container\">\n                <h2>Directors</h2>\n                <ul>\n                  {directors.map((director) => (\n                    <li key={director.id}>{director.name}</li>\n                  ))}\n                </ul>\n                <h2>Cast</h2>\n                <ul>\n                  {cast\n                    .filter(actor => actor.order <= 10)\n                    .map((actor) => (\n                      <li key={actor.id}>\n                        {actor.character} - {actor.name}\n                      </li>\n                    ))}\n                </ul>\n              </div>\n              {playing ? (\n                <button\n                  onClick={() => setPlaying(false)}\n                  className=\"boton\"\n                >\n                  Close\n                </button>\n              ) : (\n                <div className=\"container\">\n                  <div>\n                    <h1 className=\"text-white\">\n                      {movie.title}\n                    </h1>\n                    <p className=\"text-white\">\n                      {movie.overview}\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : null}\n        </main>\n      </div>\n      {showFavorites ? <Favorites favorites={favorites} selectMovie={selectMovie} /> : (\n        <div className=\"container_movies\">\n          <div className=\"row_movies\">\n            {movies.map((movie) => (\n              <div\n                key={movie.id}\n                className=\"col_movies\"\n                onClick={() => selectMovie(movie)}\n              >\n                <img src={`${URL_IMAGE + movie.poster_path}`} alt={movie.title} />\n                <h4>{movie.title}</h4>\n                <p>Rating: {movie.vote_average}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}