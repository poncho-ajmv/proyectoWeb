{"ast":null,"code":"var _jsxFileName = \"/home/toto/Downloads/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\";\nimport Footer from \"./Footer\";\n\n/*CSS*/\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"674684d28cd5c404ad1bf06cd1a5d482\";\nconst IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\nconst URL_IMAGE = \"https://image.tmdb.org/t/p/original\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({\n    title: \"Loading Movies\"\n  });\n  const [playing, setPlaying] = useState(false);\n  const [cast, setCast] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"\");\n  const [zoomLevel, setZoomLevel] = useState(window.devicePixelRatio);\n  const fetchMovies = async (searchKey, category, searchType, fromDate, toDate) => {\n    const type = searchKey ? \"search\" : \"discover\";\n    let params = {\n      api_key: API_KEY,\n      query: searchKey,\n      with_genres: category ? category : undefined\n    };\n\n    // Si hay un tipo de búsqueda específico, lo agregamos a los parámetros\n    if (searchType) {\n      params = {\n        ...params,\n        ...{\n          sort_by: searchType\n        }\n      };\n    }\n\n    // Agregar parámetros de fecha si se proporcionan\n    if (fromDate && toDate) {\n      params[\"primary_release_date.gte\"] = fromDate;\n      params[\"primary_release_date.lte\"] = toDate;\n    }\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: params\n    });\n    const filteredMovies = results.filter(movie => !movie.title.toLowerCase().includes(\"tiburon\") && movie.title !== \"No Way Up\" && movie.title !== \"Jaws\" && movie.title !== \"Sharknado\" && movie.title !== \"Deep Blue Sea\" && movie.title !== \"The Meg\" && movie.title !== \"Under Paris\" && movie.title !== \"Shark\");\n    setMovies(filteredMovies);\n    setMovie(filteredMovies[0]);\n    if (filteredMovies.length) {\n      await fetchMovie(filteredMovies[0].id);\n    }\n  };\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos,credits\"\n      }\n    });\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n    setMovie(data);\n    if (data.credits && data.credits.cast) {\n      setCast(data.credits.cast);\n    }\n  };\n  const selectMovie = async movie => {\n    fetchMovie(movie.id);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchKey, category, searchType);\n  };\n  const goToHomePage = () => {\n    window.location.href = \"/\";\n  };\n  const handleCategoryChange = category => {\n    setCategory(category);\n    setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n    fetchMovies(searchKey, category, searchType);\n  };\n  useEffect(() => {\n    // eslint-disable-next-line\n    fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n  }, []);\n  const fetchPopularMovies = async () => {\n    setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n    fetchMovies(searchKey, category, \"popularity.desc\");\n  };\n  const fetchRecentMovies = async () => {\n    const currentDate = new Date();\n    const fromDate = new Date(currentDate);\n    const toDate = new Date(currentDate);\n\n    // Restar y sumar 1 mes a la fecha actual\n    fromDate.setMonth(currentDate.getMonth() - 1);\n    toDate.setMonth(currentDate.getMonth() + 1);\n\n    // Formatear las fechas para el formato requerido por la API (YYYY-MM-DD)\n    const fromDateString = fromDate.toISOString().split(\"T\")[0];\n    const toDateString = toDate.toISOString().split(\"T\")[0];\n    setSearchType(\"release_date.desc\"); // Establecer el tipo de búsqueda como más reciente\n\n    // Hacer la llamada a la API con las fechas limitadas\n    fetchMovies(searchKey, category, `release_date.desc`, fromDateString, toDateString);\n  };\n  const fetchTopRatedMovies = async () => {\n    setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n    fetchMovies(searchKey, category, \"vote_average.desc\");\n  };\n  const fetchTopRatedMoviesAll = async () => {\n    setSearchType(\"top_rated\"); // Establece el tipo de búsqueda como top_rated\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/movie/top_rated`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    setMovies(results);\n    setMovie(results[0]);\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  };\n  const categories = {\n    28: \"Action\",\n    35: \"Comedy\",\n    18: \"Drama\",\n    27: \"Horror\",\n    10749: \"Romance\",\n    878: \"Science Fiction\",\n    10751: \"Family\",\n    16: \"Animation\",\n    80: \"Crime\",\n    37: \"Western\",\n    36: \"History\",\n    14: \"Fantasy\",\n    53: \"Thriller\",\n    10752: \"War\",\n    12: \"Adventure\",\n    99: \"Documentary\",\n    10402: \"Music\",\n    10770: \"TV Movie\",\n    9648: \"Mystery\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-and-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logo\",\n          onClick: goToHomePage,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://imgfz.com/i/5hQ3ZSJ.png\",\n            alt: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchTopRatedMoviesAll,\n          children: \"All time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search-container\",\n        onSubmit: searchMovies,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search\",\n          className: \"search-input\",\n          onChange: e => setSearchKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: searchMovies,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: e => handleCategoryChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            className: \"category-but\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), Object.entries(categories).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: name\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchPopularMovies,\n          children: \"Popular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchRecentMovies,\n          children: \"Recent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-button\",\n          onClick: fetchTopRatedMovies,\n          children: \"Top Rated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MovieCarousel, {\n        movies: movies,\n        selectMovie: selectMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewtrailer\",\n          style: {\n            backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\"\n          },\n          children: [trailer && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trailer-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${IMAGE_PATH}${movie.poster_path}`,\n              alt: movie.title,\n              className: \"movie-poster\",\n              width: \"510\",\n              height: \"815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"560\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${trailer.key}`,\n              title: \"YouTube video player\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cast-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Cast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [cast.filter(actor => actor.department === \"Directing\").map(director => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Director: \", director.name]\n              }, director.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 45\n              }, this)), cast.filter(actor => actor.order <= 10 && actor.department !== \"Directing\").map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [actor.character, \" - \", actor.name]\n              }, actor.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this), playing ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPlaying(false),\n            className: \"boton\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-white\",\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white\",\n                children: movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_movies\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row_movies\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col_movies\",\n          onClick: () => selectMovie(movie),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${URL_IMAGE + movie.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", movie.vote_average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"9U32lOOoJTWY1MpB4sg7hNX6bJU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","MovieCarousel","Footer","jsxDEV","_jsxDEV","API_URL","API_KEY","IMAGE_PATH","URL_IMAGE","App","_s","movies","setMovies","searchKey","setSearchKey","trailer","setTrailer","movie","setMovie","title","playing","setPlaying","cast","setCast","category","setCategory","searchType","setSearchType","zoomLevel","setZoomLevel","window","devicePixelRatio","fetchMovies","fromDate","toDate","type","params","api_key","query","with_genres","undefined","sort_by","data","results","get","filteredMovies","filter","toLowerCase","includes","length","fetchMovie","id","append_to_response","videos","find","vid","name","credits","selectMovie","scrollTo","searchMovies","e","preventDefault","goToHomePage","location","href","handleCategoryChange","fetchPopularMovies","fetchRecentMovies","currentDate","Date","setMonth","getMonth","fromDateString","toISOString","split","toDateString","fetchTopRatedMovies","fetchTopRatedMoviesAll","categories","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","target","value","Object","entries","map","style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","poster_path","width","height","key","allow","allowFullScreen","actor","department","director","order","character","overview","vote_average","_c","$RefreshReg$"],"sources":["/home/toto/Downloads/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\"; \nimport Footer from \"./Footer\";\n\n/*CSS*/\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\n\n\nconst API_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"674684d28cd5c404ad1bf06cd1a5d482\";\nconst IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\nconst URL_IMAGE = \"https://image.tmdb.org/t/p/original\";\n\nfunction App() {\n    const [movies, setMovies] = useState([]);\n    const [searchKey, setSearchKey] = useState(\"\");\n    const [trailer, setTrailer] = useState(null);\n    const [movie, setMovie] = useState({ title: \"Loading Movies\" });\n    const [playing, setPlaying] = useState(false);\n    const [cast, setCast] = useState([]);\n    const [category, setCategory] = useState(\"\");\n    const [searchType, setSearchType] = useState(\"\");\n    const [zoomLevel, setZoomLevel] = useState(window.devicePixelRatio);\n    \n    \n\n    const fetchMovies = async (\n        searchKey,\n        category,\n        searchType,\n        fromDate,\n        toDate\n    ) => {\n        const type = searchKey ? \"search\" : \"discover\";\n        let params = {\n            api_key: API_KEY,\n            query: searchKey,\n            with_genres: category ? category : undefined,\n        };\n\n        // Si hay un tipo de búsqueda específico, lo agregamos a los parámetros\n        if (searchType) {\n            params = { ...params, ...{ sort_by: searchType } };\n        }\n\n        // Agregar parámetros de fecha si se proporcionan\n        if (fromDate && toDate) {\n            params[\"primary_release_date.gte\"] = fromDate;\n            params[\"primary_release_date.lte\"] = toDate;\n        }\n\n        const {\n            data: { results },\n        } = await axios.get(`${API_URL}/${type}/movie`, {\n            params: params,\n        });\n\n        const filteredMovies = results.filter(\n            (movie) =>\n                !movie.title.toLowerCase().includes(\"tiburon\") &&\n                movie.title !== \"No Way Up\" &&\n                movie.title !== \"Jaws\" &&\n                movie.title !== \"Sharknado\" &&\n                movie.title !== \"Deep Blue Sea\" &&\n                movie.title !== \"The Meg\" &&\n                movie.title !== \"Under Paris\" &&\n                movie.title !== \"Shark\"\n        );\n\n        setMovies(filteredMovies);\n        setMovie(filteredMovies[0]);\n\n        if (filteredMovies.length) {\n            await fetchMovie(filteredMovies[0].id);\n        }\n    };\n\n    const fetchMovie = async (id) => {\n        const { data } = await axios.get(`${API_URL}/movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n                append_to_response: \"videos,credits\",\n            },\n        });\n\n        if (data.videos && data.videos.results) {\n            const trailer = data.videos.results.find(\n                (vid) => vid.name === \"Official Trailer\"\n            );\n            setTrailer(trailer ? trailer : data.videos.results[0]);\n        }\n        setMovie(data);\n        if (data.credits && data.credits.cast) {\n            setCast(data.credits.cast);\n        }\n    };\n\n    const selectMovie = async (movie) => {\n        fetchMovie(movie.id);\n        setMovie(movie);\n        window.scrollTo(0, 0);\n    };\n\n    const searchMovies = (e) => {\n        e.preventDefault();\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    const goToHomePage = () => {\n        window.location.href = \"/\";\n    };\n\n    const handleCategoryChange = (category) => {\n        setCategory(category);\n        setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    useEffect(() => {\n        // eslint-disable-next-line\n        fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n    }, []);\n\n    const fetchPopularMovies = async () => {\n        setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n        fetchMovies(searchKey, category, \"popularity.desc\");\n    };\n\n    const fetchRecentMovies = async () => {\n        const currentDate = new Date();\n        const fromDate = new Date(currentDate);\n        const toDate = new Date(currentDate);\n\n        // Restar y sumar 1 mes a la fecha actual\n        fromDate.setMonth(currentDate.getMonth() - 1);\n        toDate.setMonth(currentDate.getMonth() + 1);\n\n        // Formatear las fechas para el formato requerido por la API (YYYY-MM-DD)\n        const fromDateString = fromDate.toISOString().split(\"T\")[0];\n        const toDateString = toDate.toISOString().split(\"T\")[0];\n\n        setSearchType(\"release_date.desc\"); // Establecer el tipo de búsqueda como más reciente\n\n        // Hacer la llamada a la API con las fechas limitadas\n        fetchMovies(\n            searchKey,\n            category,\n            `release_date.desc`,\n            fromDateString,\n            toDateString\n        );\n    };\n\n    const fetchTopRatedMovies = async () => {\n        setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n        fetchMovies(searchKey, category, \"vote_average.desc\");\n    };\n\n    \n    const fetchTopRatedMoviesAll = async () => {\n        setSearchType(\"top_rated\"); // Establece el tipo de búsqueda como top_rated\n        const {\n            data: { results },\n        } = await axios.get(`${API_URL}/movie/top_rated`, {\n            params: {\n                api_key: API_KEY,\n            },\n        });\n\n        setMovies(results);\n        setMovie(results[0]);\n        if (results.length) {\n            await fetchMovie(results[0].id);\n        }\n    };\n\n    const categories = {\n        28: \"Action\",\n        35: \"Comedy\",\n        18: \"Drama\",\n        27: \"Horror\",\n        10749: \"Romance\",\n        878: \"Science Fiction\",\n        10751: \"Family\",\n        16: \"Animation\",\n        80: \"Crime\",\n        37: \"Western\",\n        36: \"History\",\n        14: \"Fantasy\",\n        53: \"Thriller\",\n        10752: \"War\",\n        12: \"Adventure\",\n        99: \"Documentary\",\n        10402: \"Music\",\n        10770: \"TV Movie\",\n        9648: \"Mystery\",\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"menu\">\n    <div className=\"logo-and-search\">\n        \n        <button className=\"logo\" onClick={goToHomePage}>\n            <img src=\"http://imgfz.com/i/5hQ3ZSJ.png\" alt=\"Logo\" />\n        </button>\n\n        <button className=\"filter-button\" onClick={fetchTopRatedMoviesAll}>All time</button>\n    </div>\n\n    \n    <form className=\"search-container\" onSubmit={searchMovies}>\n        <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"search-input\"\n                onChange={(e) => setSearchKey(e.target.value)}\n        />\n        <button className=\"search-button\" onClick={searchMovies}>\n            Search\n        </button>\n    </form>\n    \n\n\n    <div className=\"category-buttons\">\n    <select\n            value={category}\n            onChange={(e) => handleCategoryChange(e.target.value)}\n        >\n            <option value=\"\" className=\"category-but\">All</option>\n            {Object.entries(categories).map(([id, name]) => (\n                <option key={id} value={id}>\n                    {name}\n                </option>\n            ))}\n        </select>\n    \n        <button className=\"filter-button\" onClick={fetchPopularMovies}>Popular</button>\n        <button className=\"filter-button\" onClick={fetchRecentMovies}>Recent</button>\n        <button className=\"filter-button\" onClick={fetchTopRatedMovies}>Top Rated</button>\n    </div>\n</header>\n\n            \n\n            \n            <div>\n            <MovieCarousel movies={movies} selectMovie={selectMovie} />\n                <main>\n\n\n                    {movie ? (\n                        <div\n                        className=\"viewtrailer\"\n                        style={{\n                            backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n                            backgroundSize: \"cover\",\n                            backgroundPosition: \"center\",\n                        }}\n                    >\n                            {trailer && (\n                                <div className=\"trailer-container\">\n                                    <img\n                                        src={`${IMAGE_PATH}${movie.poster_path}`}\n                                        alt={movie.title}\n                                        className=\"movie-poster\"\n                                        width=\"510\"\n                                        height=\"815\"\n                                    />\n                                    <iframe\n                                        width=\"560\"\n                                        height=\"315\"\n                                        src={`https://www.youtube.com/embed/${trailer.key}`}\n                                        title=\"YouTube video player\"\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                        allowFullScreen\n                                    ></iframe>\n                                </div>\n                            )}\n                            <div className=\"cast-container\">\n                                <h2>Cast</h2>\n                                <ul>\n                                    {cast\n                                        .filter(\n                                            (actor) =>\n                                                actor.department === \"Directing\"\n                                        )\n                                        .map((director) => (\n                                            <li key={director.id}>\n                                                Director: {director.name}\n                                            </li>\n                                        ))}\n                                    {cast\n                                        .filter(\n                                            (actor) =>\n                                                actor.order <= 10 &&\n                                                actor.department !== \"Directing\"\n                                        )\n                                        .map((actor) => (\n                                            <li key={actor.id}>\n                                                {actor.character} - {actor.name}\n                                            </li>\n                                        ))}\n                                </ul>\n                            </div>\n                            {playing ? (\n                                <button\n                                    onClick={() => setPlaying(false)}\n                                    className=\"boton\"\n                                >\n                                    Close\n                                </button>\n                            ) : (\n                                <div className=\"container\">\n                                    <div>\n                                        <h1 className=\"text-white\">\n                                            {movie.title}\n                                        </h1>\n                                        <p className=\"text-white\">\n                                            {movie.overview}\n                                        </p>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    ) : null}\n                </main>\n            </div>\n\n            <div className=\"container_movies\">\n                <div className=\"row_movies\">\n                    {movies.map((movie) => (\n                        <div\n                            key={movie.id}\n                            className=\"col_movies\"\n                            onClick={() => selectMovie(movie)}\n                        ><img src={`${URL_IMAGE + movie.poster_path}`}/>\n                            <h4>{movie.title}</h4>\n                            <p>Rating: {movie.vote_average}</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,OAAO,iBAAiB;AACxB,OAAO,mBAAmB;AAC1B,OAAO,eAAe;AACtB,OAAO,gCAAgC;AACvC,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9C,MAAMC,OAAO,GAAG,8BAA8B;AAC9C,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,UAAU,GAAG,qCAAqC;AACxD,MAAMC,SAAS,GAAG,qCAAqC;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC;IAAEoB,KAAK,EAAE;EAAiB,CAAC,CAAC;EAC/D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC+B,MAAM,CAACC,gBAAgB,CAAC;EAInE,MAAMC,WAAW,GAAG,MAAAA,CAChBnB,SAAS,EACTW,QAAQ,EACRE,UAAU,EACVO,QAAQ,EACRC,MAAM,KACL;IACD,MAAMC,IAAI,GAAGtB,SAAS,GAAG,QAAQ,GAAG,UAAU;IAC9C,IAAIuB,MAAM,GAAG;MACTC,OAAO,EAAE/B,OAAO;MAChBgC,KAAK,EAAEzB,SAAS;MAChB0B,WAAW,EAAEf,QAAQ,GAAGA,QAAQ,GAAGgB;IACvC,CAAC;;IAED;IACA,IAAId,UAAU,EAAE;MACZU,MAAM,GAAG;QAAE,GAAGA,MAAM;QAAE,GAAG;UAAEK,OAAO,EAAEf;QAAW;MAAE,CAAC;IACtD;;IAEA;IACA,IAAIO,QAAQ,IAAIC,MAAM,EAAE;MACpBE,MAAM,CAAC,0BAA0B,CAAC,GAAGH,QAAQ;MAC7CG,MAAM,CAAC,0BAA0B,CAAC,GAAGF,MAAM;IAC/C;IAEA,MAAM;MACFQ,IAAI,EAAE;QAAEC;MAAQ;IACpB,CAAC,GAAG,MAAM3C,KAAK,CAAC4C,GAAG,CAAC,GAAGvC,OAAO,IAAI8B,IAAI,QAAQ,EAAE;MAC5CC,MAAM,EAAEA;IACZ,CAAC,CAAC;IAEF,MAAMS,cAAc,GAAGF,OAAO,CAACG,MAAM,CAChC7B,KAAK,IACF,CAACA,KAAK,CAACE,KAAK,CAAC4B,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,SAAS,CAAC,IAC9C/B,KAAK,CAACE,KAAK,KAAK,WAAW,IAC3BF,KAAK,CAACE,KAAK,KAAK,MAAM,IACtBF,KAAK,CAACE,KAAK,KAAK,WAAW,IAC3BF,KAAK,CAACE,KAAK,KAAK,eAAe,IAC/BF,KAAK,CAACE,KAAK,KAAK,SAAS,IACzBF,KAAK,CAACE,KAAK,KAAK,aAAa,IAC7BF,KAAK,CAACE,KAAK,KAAK,OACxB,CAAC;IAEDP,SAAS,CAACiC,cAAc,CAAC;IACzB3B,QAAQ,CAAC2B,cAAc,CAAC,CAAC,CAAC,CAAC;IAE3B,IAAIA,cAAc,CAACI,MAAM,EAAE;MACvB,MAAMC,UAAU,CAACL,cAAc,CAAC,CAAC,CAAC,CAACM,EAAE,CAAC;IAC1C;EACJ,CAAC;EAED,MAAMD,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B,MAAM;MAAET;IAAK,CAAC,GAAG,MAAM1C,KAAK,CAAC4C,GAAG,CAAC,GAAGvC,OAAO,UAAU8C,EAAE,EAAE,EAAE;MACvDf,MAAM,EAAE;QACJC,OAAO,EAAE/B,OAAO;QAChB8C,kBAAkB,EAAE;MACxB;IACJ,CAAC,CAAC;IAEF,IAAIV,IAAI,CAACW,MAAM,IAAIX,IAAI,CAACW,MAAM,CAACV,OAAO,EAAE;MACpC,MAAM5B,OAAO,GAAG2B,IAAI,CAACW,MAAM,CAACV,OAAO,CAACW,IAAI,CACnCC,GAAG,IAAKA,GAAG,CAACC,IAAI,KAAK,kBAC1B,CAAC;MACDxC,UAAU,CAACD,OAAO,GAAGA,OAAO,GAAG2B,IAAI,CAACW,MAAM,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1D;IACAzB,QAAQ,CAACwB,IAAI,CAAC;IACd,IAAIA,IAAI,CAACe,OAAO,IAAIf,IAAI,CAACe,OAAO,CAACnC,IAAI,EAAE;MACnCC,OAAO,CAACmB,IAAI,CAACe,OAAO,CAACnC,IAAI,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMoC,WAAW,GAAG,MAAOzC,KAAK,IAAK;IACjCiC,UAAU,CAACjC,KAAK,CAACkC,EAAE,CAAC;IACpBjC,QAAQ,CAACD,KAAK,CAAC;IACfa,MAAM,CAAC6B,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB9B,WAAW,CAACnB,SAAS,EAAEW,QAAQ,EAAEE,UAAU,CAAC;EAChD,CAAC;EAED,MAAMqC,YAAY,GAAGA,CAAA,KAAM;IACvBjC,MAAM,CAACkC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC9B,CAAC;EAED,MAAMC,oBAAoB,GAAI1C,QAAQ,IAAK;IACvCC,WAAW,CAACD,QAAQ,CAAC;IACrBG,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IACnBK,WAAW,CAACnB,SAAS,EAAEW,QAAQ,EAAEE,UAAU,CAAC;EAChD,CAAC;EAED5B,SAAS,CAAC,MAAM;IACZ;IACAkC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnCxC,aAAa,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAClCK,WAAW,CAACnB,SAAS,EAAEW,QAAQ,EAAE,iBAAiB,CAAC;EACvD,CAAC;EAED,MAAM4C,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC9B,MAAMrC,QAAQ,GAAG,IAAIqC,IAAI,CAACD,WAAW,CAAC;IACtC,MAAMnC,MAAM,GAAG,IAAIoC,IAAI,CAACD,WAAW,CAAC;;IAEpC;IACApC,QAAQ,CAACsC,QAAQ,CAACF,WAAW,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7CtC,MAAM,CAACqC,QAAQ,CAACF,WAAW,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;IAE3C;IACA,MAAMC,cAAc,GAAGxC,QAAQ,CAACyC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,MAAMC,YAAY,GAAG1C,MAAM,CAACwC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEvDhD,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;;IAEpC;IACAK,WAAW,CACPnB,SAAS,EACTW,QAAQ,EACR,mBAAmB,EACnBiD,cAAc,EACdG,YACJ,CAAC;EACL,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpClD,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACpCK,WAAW,CAACnB,SAAS,EAAEW,QAAQ,EAAE,mBAAmB,CAAC;EACzD,CAAC;EAGD,MAAMsD,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACvCnD,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5B,MAAM;MACFe,IAAI,EAAE;QAAEC;MAAQ;IACpB,CAAC,GAAG,MAAM3C,KAAK,CAAC4C,GAAG,CAAC,GAAGvC,OAAO,kBAAkB,EAAE;MAC9C+B,MAAM,EAAE;QACJC,OAAO,EAAE/B;MACb;IACJ,CAAC,CAAC;IAEFM,SAAS,CAAC+B,OAAO,CAAC;IAClBzB,QAAQ,CAACyB,OAAO,CAAC,CAAC,CAAC,CAAC;IACpB,IAAIA,OAAO,CAACM,MAAM,EAAE;MAChB,MAAMC,UAAU,CAACP,OAAO,CAAC,CAAC,CAAC,CAACQ,EAAE,CAAC;IACnC;EACJ,CAAC;EAED,MAAM4B,UAAU,GAAG;IACf,EAAE,EAAE,QAAQ;IACZ,EAAE,EAAE,QAAQ;IACZ,EAAE,EAAE,OAAO;IACX,EAAE,EAAE,QAAQ;IACZ,KAAK,EAAE,SAAS;IAChB,GAAG,EAAE,iBAAiB;IACtB,KAAK,EAAE,QAAQ;IACf,EAAE,EAAE,WAAW;IACf,EAAE,EAAE,OAAO;IACX,EAAE,EAAE,SAAS;IACb,EAAE,EAAE,SAAS;IACb,EAAE,EAAE,SAAS;IACb,EAAE,EAAE,UAAU;IACd,KAAK,EAAE,KAAK;IACZ,EAAE,EAAE,WAAW;IACf,EAAE,EAAE,aAAa;IACjB,KAAK,EAAE,OAAO;IACd,KAAK,EAAE,UAAU;IACjB,IAAI,EAAE;EACV,CAAC;EAED,oBACI3E,OAAA;IAAK4E,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChB7E,OAAA;MAAQ4E,SAAS,EAAC,MAAM;MAAAC,QAAA,gBAChC7E,OAAA;QAAK4E,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAE5B7E,OAAA;UAAQ4E,SAAS,EAAC,MAAM;UAACE,OAAO,EAAEnB,YAAa;UAAAkB,QAAA,eAC3C7E,OAAA;YAAK+E,GAAG,EAAC,gCAAgC;YAACC,GAAG,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eAETpF,OAAA;UAAQ4E,SAAS,EAAC,eAAe;UAACE,OAAO,EAAEJ,sBAAuB;UAAAG,QAAA,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC,eAGNpF,OAAA;QAAM4E,SAAS,EAAC,kBAAkB;QAACS,QAAQ,EAAE7B,YAAa;QAAAqB,QAAA,gBACtD7E,OAAA;UACI+B,IAAI,EAAC,MAAM;UACXuD,WAAW,EAAC,QAAQ;UACpBV,SAAS,EAAC,cAAc;UACpBW,QAAQ,EAAG9B,CAAC,IAAK/C,YAAY,CAAC+C,CAAC,CAAC+B,MAAM,CAACC,KAAK;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC,eACFpF,OAAA;UAAQ4E,SAAS,EAAC,eAAe;UAACE,OAAO,EAAEtB,YAAa;UAAAqB,QAAA,EAAC;QAEzD;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAIPpF,OAAA;QAAK4E,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBACjC7E,OAAA;UACQyF,KAAK,EAAErE,QAAS;UAChBmE,QAAQ,EAAG9B,CAAC,IAAKK,oBAAoB,CAACL,CAAC,CAAC+B,MAAM,CAACC,KAAK,CAAE;UAAAZ,QAAA,gBAEtD7E,OAAA;YAAQyF,KAAK,EAAC,EAAE;YAACb,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACrDM,MAAM,CAACC,OAAO,CAAChB,UAAU,CAAC,CAACiB,GAAG,CAAC,CAAC,CAAC7C,EAAE,EAAEK,IAAI,CAAC,kBACvCpD,OAAA;YAAiByF,KAAK,EAAE1C,EAAG;YAAA8B,QAAA,EACtBzB;UAAI,GADIL,EAAE;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEP,CACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAETpF,OAAA;UAAQ4E,SAAS,EAAC,eAAe;UAACE,OAAO,EAAEf,kBAAmB;UAAAc,QAAA,EAAC;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/EpF,OAAA;UAAQ4E,SAAS,EAAC,eAAe;UAACE,OAAO,EAAEd,iBAAkB;UAAAa,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7EpF,OAAA;UAAQ4E,SAAS,EAAC,eAAe;UAACE,OAAO,EAAEL,mBAAoB;UAAAI,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAKGpF,OAAA;MAAA6E,QAAA,gBACA7E,OAAA,CAACH,aAAa;QAACU,MAAM,EAAEA,MAAO;QAAC+C,WAAW,EAAEA;MAAY;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDpF,OAAA;QAAA6E,QAAA,EAGKhE,KAAK,gBACFb,OAAA;UACA4E,SAAS,EAAC,aAAa;UACvBiB,KAAK,EAAE;YACHC,eAAe,EAAE,QAAQ3F,UAAU,GAAGU,KAAK,CAACkF,aAAa,IAAI;YAC7DC,cAAc,EAAE,OAAO;YACvBC,kBAAkB,EAAE;UACxB,CAAE;UAAApB,QAAA,GAEGlE,OAAO,iBACJX,OAAA;YAAK4E,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAC9B7E,OAAA;cACI+E,GAAG,EAAE,GAAG5E,UAAU,GAAGU,KAAK,CAACqF,WAAW,EAAG;cACzClB,GAAG,EAAEnE,KAAK,CAACE,KAAM;cACjB6D,SAAS,EAAC,cAAc;cACxBuB,KAAK,EAAC,KAAK;cACXC,MAAM,EAAC;YAAK;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC,eACFpF,OAAA;cACImG,KAAK,EAAC,KAAK;cACXC,MAAM,EAAC,KAAK;cACZrB,GAAG,EAAE,iCAAiCpE,OAAO,CAAC0F,GAAG,EAAG;cACpDtF,KAAK,EAAC,sBAAsB;cAC5BuF,KAAK,EAAC,0FAA0F;cAChGC,eAAe;YAAA;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CACR,eACDpF,OAAA;YAAK4E,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3B7E,OAAA;cAAA6E,QAAA,EAAI;YAAI;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbpF,OAAA;cAAA6E,QAAA,GACK3D,IAAI,CACAwB,MAAM,CACF8D,KAAK,IACFA,KAAK,CAACC,UAAU,KAAK,WAC7B,CAAC,CACAb,GAAG,CAAEc,QAAQ,iBACV1G,OAAA;gBAAA6E,QAAA,GAAsB,YACR,EAAC6B,QAAQ,CAACtD,IAAI;cAAA,GADnBsD,QAAQ,CAAC3D,EAAE;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEhB,CACP,CAAC,EACLlE,IAAI,CACAwB,MAAM,CACF8D,KAAK,IACFA,KAAK,CAACG,KAAK,IAAI,EAAE,IACjBH,KAAK,CAACC,UAAU,KAAK,WAC7B,CAAC,CACAb,GAAG,CAAEY,KAAK,iBACPxG,OAAA;gBAAA6E,QAAA,GACK2B,KAAK,CAACI,SAAS,EAAC,KAAG,EAACJ,KAAK,CAACpD,IAAI;cAAA,GAD1BoD,KAAK,CAACzD,EAAE;gBAAAkC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEb,CACP,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,EACLpE,OAAO,gBACJhB,OAAA;YACI8E,OAAO,EAAEA,CAAA,KAAM7D,UAAU,CAAC,KAAK,CAAE;YACjC2D,SAAS,EAAC,OAAO;YAAAC,QAAA,EACpB;UAED;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,gBAETpF,OAAA;YAAK4E,SAAS,EAAC,WAAW;YAAAC,QAAA,eACtB7E,OAAA;cAAA6E,QAAA,gBACI7E,OAAA;gBAAI4E,SAAS,EAAC,YAAY;gBAAAC,QAAA,EACrBhE,KAAK,CAACE;cAAK;gBAAAkE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ,CAAC,eACLpF,OAAA;gBAAG4E,SAAS,EAAC,YAAY;gBAAAC,QAAA,EACpBhE,KAAK,CAACgG;cAAQ;gBAAA5B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,GACN;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENpF,OAAA;MAAK4E,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC7B7E,OAAA;QAAK4E,SAAS,EAAC,YAAY;QAAAC,QAAA,EACtBtE,MAAM,CAACqF,GAAG,CAAE/E,KAAK,iBACdb,OAAA;UAEI4E,SAAS,EAAC,YAAY;UACtBE,OAAO,EAAEA,CAAA,KAAMxB,WAAW,CAACzC,KAAK,CAAE;UAAAgE,QAAA,gBACrC7E,OAAA;YAAK+E,GAAG,EAAE,GAAG3E,SAAS,GAAGS,KAAK,CAACqF,WAAW;UAAG;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC5CpF,OAAA;YAAA6E,QAAA,EAAKhE,KAAK,CAACE;UAAK;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBpF,OAAA;YAAA6E,QAAA,GAAG,UAAQ,EAAChE,KAAK,CAACiG,YAAY;UAAA;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAL9BvE,KAAK,CAACkC,EAAE;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMZ,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENpF,OAAA,CAACF,MAAM;MAAAmF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd;AAAC9E,EAAA,CA/UQD,GAAG;AAAA0G,EAAA,GAAH1G,GAAG;AAiVZ,eAAeA,GAAG;AAAC,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}