{"ast":null,"code":"var _jsxFileName = \"/home/poncho/toto/Repos/movie-app/src/MovieCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst extractYoutubeId = url => {\n  const regExp = /^.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  return match && match[1].length === 11 ? match[1] : null;\n};\nconst fetchTrailerFromYouTube = async movieTitle => {\n  const apiKey = \"AIzaSyBvRzBS1OvMJRdOqatOKYVHePv_NOkxYr0\";\n  const searchUrl = `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(movieTitle + \" trailer\" // Agregar la palabra clave \"tráiler\"\n  )}&type=video&key=${apiKey}`;\n  const response = await fetch(searchUrl);\n  const data = await response.json();\n  if (data.items && data.items.length > 0) {\n    return data.items[0].id.videoId;\n  } else {\n    return null;\n  }\n};\nconst MovieCarousel = () => {\n  _s();\n  const [currentMovieIndex, setCurrentMovieIndex] = useState(0);\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const movie = movies[currentMovieIndex];\n      const apiKey = \"YOUR_TMDB_API_KEY\";\n      const apiUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${encodeURIComponent(movie.title)}`;\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        if (data.results && data.results.length > 0) {\n          const movieDetailsUrl = `https://api.themoviedb.org/3/movie/${data.results[0].id}?api_key=${apiKey}&append_to_response=credits,reviews,videos`;\n          const detailsResponse = await fetch(movieDetailsUrl);\n          const detailsData = await detailsResponse.json();\n          movie.rating = detailsData.vote_average;\n          if (movie.youtubeLink) {\n            movie.youtubeId = extractYoutubeId(movie.youtubeLink);\n          } else if (detailsData.videos && detailsData.videos.results.length > 0) {\n            const trailer = detailsData.videos.results.find(video => video.type === \"Trailer\");\n            if (trailer) {\n              movie.youtubeId = trailer.key;\n            }\n          }\n          if (!movie.youtubeId) {\n            const trailerId = await fetchTrailerFromYouTube(movie.title);\n            movie.youtubeId = trailerId;\n          }\n        } else {\n          console.log(`No se encontraron detalles para la película ${movie.title}`);\n        }\n      } catch (error) {\n        console.error(\"Error al obtener detalles de la película:\", error);\n      }\n    };\n    fetchMovieDetails();\n  }, [currentMovieIndex, movies]);\n  const handleNext = () => {\n    setCurrentMovieIndex(prevIndex => (prevIndex + 1) % movies.length);\n  };\n  const handlePrev = () => {\n    setCurrentMovieIndex(prevIndex => prevIndex === 0 ? movies.length - 1 : prevIndex - 1);\n  };\n  const currentMovie = movies[currentMovieIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-carousel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trailer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          className: \"trailer\",\n          width: \"560\",\n          height: \"315\",\n          src: `https://www.youtube.com/embed/${currentMovie.youtubeId}`,\n          title: \"YouTube video player\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentMovie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", currentMovie.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prev-btn\",\n        onClick: handlePrev,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-btn\",\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieCarousel, \"L3DeC7TJvT3+K1/RoWHcb52lm10=\");\n_c = MovieCarousel;\nexport default MovieCarousel;\nvar _c;\n$RefreshReg$(_c, \"MovieCarousel\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","extractYoutubeId","url","regExp","match","length","fetchTrailerFromYouTube","movieTitle","apiKey","searchUrl","encodeURIComponent","response","fetch","data","json","items","id","videoId","MovieCarousel","_s","currentMovieIndex","setCurrentMovieIndex","movies","setMovies","fetchMovieDetails","movie","apiUrl","title","results","movieDetailsUrl","detailsResponse","detailsData","rating","vote_average","youtubeLink","youtubeId","videos","trailer","find","video","type","key","trailerId","console","log","error","handleNext","prevIndex","handlePrev","currentMovie","className","children","width","height","src","allow","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/poncho/toto/Repos/movie-app/src/MovieCarousel.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst extractYoutubeId = (url) => {\n    const regExp =\n        /^.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n    return match && match[1].length === 11 ? match[1] : null;\n};\n\nconst fetchTrailerFromYouTube = async (movieTitle) => {\n    const apiKey = \"AIzaSyBvRzBS1OvMJRdOqatOKYVHePv_NOkxYr0\";\n    const searchUrl = `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(\n        movieTitle + \" trailer\" // Agregar la palabra clave \"tráiler\"\n    )}&type=video&key=${apiKey}`;\n    const response = await fetch(searchUrl);\n    const data = await response.json();\n    if (data.items && data.items.length > 0) {\n        return data.items[0].id.videoId;\n    } else {\n        return null;\n    }\n};\n\nconst MovieCarousel = () => {\n    const [currentMovieIndex, setCurrentMovieIndex] = useState(0);\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        const fetchMovieDetails = async () => {\n            const movie = movies[currentMovieIndex];\n            const apiKey = \"YOUR_TMDB_API_KEY\";\n            const apiUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${encodeURIComponent(\n                movie.title\n            )}`;\n            try {\n                const response = await fetch(apiUrl);\n                const data = await response.json();\n\n                if (data.results && data.results.length > 0) {\n                    const movieDetailsUrl = `https://api.themoviedb.org/3/movie/${data.results[0].id}?api_key=${apiKey}&append_to_response=credits,reviews,videos`;\n                    const detailsResponse = await fetch(movieDetailsUrl);\n                    const detailsData = await detailsResponse.json();\n                    movie.rating = detailsData.vote_average;\n                    if (movie.youtubeLink) {\n                        movie.youtubeId = extractYoutubeId(movie.youtubeLink);\n                    } else if (\n                        detailsData.videos &&\n                        detailsData.videos.results.length > 0\n                    ) {\n                        const trailer = detailsData.videos.results.find(\n                            (video) => video.type === \"Trailer\"\n                        );\n                        if (trailer) {\n                            movie.youtubeId = trailer.key;\n                        }\n                    }\n                    if (!movie.youtubeId) {\n                        const trailerId = await fetchTrailerFromYouTube(\n                            movie.title\n                        );\n                        movie.youtubeId = trailerId;\n                    }\n                } else {\n                    console.log(\n                        `No se encontraron detalles para la película ${movie.title}`\n                    );\n                }\n            } catch (error) {\n                console.error(\n                    \"Error al obtener detalles de la película:\",\n                    error\n                );\n            }\n        };\n\n        fetchMovieDetails();\n    }, [currentMovieIndex, movies]);\n\n    const handleNext = () => {\n        setCurrentMovieIndex((prevIndex) => (prevIndex + 1) % movies.length);\n    };\n\n    const handlePrev = () => {\n        setCurrentMovieIndex((prevIndex) =>\n            prevIndex === 0 ? movies.length - 1 : prevIndex - 1\n        );\n    };\n\n    const currentMovie = movies[currentMovieIndex];\n\n    return (\n        <div className=\"movie-carousel\">\n            <div className=\"movie-details\">\n                <div className=\"trailer-container\">\n                    <iframe\n                        className=\"trailer\"\n                        width=\"560\"\n                        height=\"315\"\n                        src={`https://www.youtube.com/embed/${currentMovie.youtubeId}`}\n                        title=\"YouTube video player\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                        allowFullScreen\n                    ></iframe>\n                </div>\n\n                <div className=\"details\">\n                    <h2>{currentMovie.title}</h2>\n                    <p>Rating: {currentMovie.rating}</p>\n                </div>\n            </div>\n            <div className=\"navigation-buttons\">\n                <button className=\"prev-btn\" onClick={handlePrev}>\n                    Previous\n                </button>\n                <button className=\"next-btn\" onClick={handleNext}>\n                    Next\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default MovieCarousel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}