{"ast":null,"code":"var _jsxFileName = \"/home/toto/Downloads/my-app/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\";\nimport Footer from \"./Footer\";\nimport StarRating from './StarRating';\nimport Favorites from \"./Favorites\";\n\n/*CSS*/\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"674684d28cd5c404ad1bf06cd1a5d482\";\nconst IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\nconst URL_IMAGE = \"https://image.tmdb.org/t/p/original\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({\n    title: \"Loading Movies\"\n  });\n  const [playing, setPlaying] = useState(false);\n  const [cast, setCast] = useState([]);\n  const [directors, setDirectors] = useState([]); // Nuevo estado para los directores\n  const [category, setCategory] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"\");\n  const [zoomLevel, setZoomLevel] = useState(window.devicePixelRatio);\n  const [favorites, setFavorites] = useState([]); // Estado para favoritos\n\n  useEffect(() => {\n    const handleResize = () => {\n      setZoomLevel(window.devicePixelRatio);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const fetchMovies = async (searchKey, category, searchType, fromDate, toDate) => {\n    const type = searchKey ? \"search\" : \"discover\";\n    let params = {\n      api_key: API_KEY,\n      query: searchKey,\n      with_genres: category ? category : undefined\n    };\n    if (searchType) {\n      params = {\n        ...params,\n        ...{\n          sort_by: searchType\n        }\n      };\n    }\n    if (fromDate && toDate) {\n      params[\"primary_release_date.gte\"] = fromDate;\n      params[\"primary_release_date.lte\"] = toDate;\n    }\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: params\n    });\n    const filteredMovies = results.filter(movie => !movie.title.toLowerCase().includes(\"tiburon\") && movie.title !== \"No Way Up\" && movie.title !== \"Jaws\" && movie.title !== \"Sharknado\" && movie.title !== \"Deep Blue Sea\" && movie.title !== \"The Meg\" && movie.title !== \"Under Paris\" && movie.title !== \"Shark\");\n    setMovies(filteredMovies);\n    setMovie(filteredMovies[0]);\n    if (filteredMovies.length) {\n      await fetchMovie(filteredMovies[0].id);\n    }\n  };\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos,credits\"\n      }\n    });\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n    setMovie(data);\n    if (data.credits && data.credits.cast) {\n      setCast(data.credits.cast);\n      setDirectors(data.credits.crew.filter(person => person.job === \"Director\")); // Filtra los directores y actualiza el estado\n    }\n  };\n  const selectMovie = async movie => {\n    fetchMovie(movie.id);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchKey, category, searchType);\n  };\n  const goToHomePage = () => {\n    window.location.href = \"/\";\n  };\n  const handleCategoryChange = category => {\n    setCategory(category);\n    setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n    fetchMovies(searchKey, category, searchType);\n  };\n  useEffect(() => {\n    // eslint-disable-next-line\n    fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n  }, []);\n  const fetchPopularMovies = async () => {\n    setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n    fetchMovies(searchKey, category, \"popularity.desc\");\n  };\n  const fetchRecentMovies = async () => {\n    const currentDate = new Date();\n    const fromDate = new Date(currentDate);\n    const toDate = new Date(currentDate);\n    fromDate.setMonth(currentDate.getMonth() - 1);\n    toDate.setMonth(currentDate.getMonth() + 1);\n    const fromDateString = fromDate.toISOString().split(\"T\")[0];\n    const toDateString = toDate.toISOString().split(\"T\")[0];\n    setSearchType(\"release_date.desc\");\n    fetchMovies(searchKey, category, `release_date.desc`, fromDateString, toDateString);\n  };\n  const fetchTopRatedMovies = async () => {\n    setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n    fetchMovies(searchKey, category, \"vote_average.desc\");\n  };\n  const fetchTopRatedMoviesAll = async () => {\n    setSearchType(\"top_rated\");\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/movie/top_rated`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    setMovies(results);\n    setMovie(results[0]);\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  };\n  const toggleFavorite = movie => {\n    if (favorites.find(fav => fav.id === movie.id)) {\n      setFavorites(favorites.filter(fav => fav.id !== movie.id));\n    } else {\n      setFavorites([...favorites, movie]);\n    }\n  };\n  const categories = {\n    28: \"Action\",\n    35: \"Comedy\",\n    18: \"Drama\",\n    27: \"Horror\",\n    10749: \"Romance\",\n    878: \"Science Fiction\",\n    10751: \"Family\",\n    16: \"Animation\",\n    80: \"Crime\",\n    37: \"Western\",\n    36: \"History\",\n    14: \"Fantasy\",\n    53: \"Thriller\",\n    10752: \"War\",\n    12: \"Adventure\",\n    99: \"Documentary\",\n    10402: \"Music\",\n    10770: \"TV Movie\",\n    9648: \"Mystery\"\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        zoom: zoomLevel\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-and-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logo\",\n            onClick: goToHomePage,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://imgfz.com/i/5hQ3ZSJ.png\",\n              alt: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/all-time\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button\",\n              children: \"All time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/favorites\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button\",\n              children: \"Favorites\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"search-container\",\n          onSubmit: searchMovies,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search\",\n            className: \"search-input\",\n            onChange: e => setSearchKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-button\",\n            onClick: searchMovies,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: category,\n            onChange: e => handleCategoryChange(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              className: \"category-but\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), Object.entries(categories).map(([id, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: fetchPopularMovies,\n            children: \"Popular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: fetchRecentMovies,\n            children: \"Recent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button\",\n            onClick: fetchTopRatedMovies,\n            children: \"Top Rated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/favorites\",\n          children: /*#__PURE__*/_jsxDEV(Favorites, {\n            favorites: favorites,\n            selectMovie: selectMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(MovieCarousel, {\n              movies: movies,\n              selectMovie: selectMovie\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n              children: movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"viewtrailer\",\n                style: {\n                  backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n                  backgroundSize: \"cover\",\n                  backgroundPosition: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(StarRating, {\n                  rating: movie.vote_average\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 41\n                }, this), trailer && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"trailer-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `${IMAGE_PATH}${movie.poster_path}`,\n                    alt: movie.title,\n                    className: \"movie-poster\",\n                    width: \"510\",\n                    height: \"815\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                    width: \"560\",\n                    height: \"315\",\n                    src: `https://www.youtube.com/embed/${trailer.key}`,\n                    title: \"YouTube video player\",\n                    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                    allowFullScreen: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleFavorite(movie),\n                  children: favorites.find(fav => fav.id === movie.id) ? \"Remove from Favorites\" : \"Add to Favorites\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cast-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \"Directors\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: directors.map(director => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: director.name\n                    }, director.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 53\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \"Cast\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: cast.filter(actor => actor.order <= 10).map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [actor.character, \" - \", actor.name]\n                    }, actor.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 57\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 41\n                }, this), playing ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setPlaying(false),\n                  className: \"boton\",\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                      className: \"text-white\",\n                      children: movie.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-white\",\n                      children: movie.overview\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 37\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container_movies\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row_movies\",\n              children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col_movies\",\n                onClick: () => selectMovie(movie),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${URL_IMAGE + movie.poster_path}`,\n                  alt: movie.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: movie.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Rating: \", movie.vote_average]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 41\n                }, this)]\n              }, movie.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"FRFcQ42Gh6lAnra2XURL3NSMzp4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","BrowserRouter","Router","Route","Switch","Link","MovieCarousel","Footer","StarRating","Favorites","jsxDEV","_jsxDEV","API_URL","API_KEY","IMAGE_PATH","URL_IMAGE","App","_s","movies","setMovies","searchKey","setSearchKey","trailer","setTrailer","movie","setMovie","title","playing","setPlaying","cast","setCast","directors","setDirectors","category","setCategory","searchType","setSearchType","zoomLevel","setZoomLevel","window","devicePixelRatio","favorites","setFavorites","handleResize","addEventListener","removeEventListener","fetchMovies","fromDate","toDate","type","params","api_key","query","with_genres","undefined","sort_by","data","results","get","filteredMovies","filter","toLowerCase","includes","length","fetchMovie","id","append_to_response","videos","find","vid","name","credits","crew","person","job","selectMovie","scrollTo","searchMovies","e","preventDefault","goToHomePage","location","href","handleCategoryChange","fetchPopularMovies","fetchRecentMovies","currentDate","Date","setMonth","getMonth","fromDateString","toISOString","split","toDateString","fetchTopRatedMovies","fetchTopRatedMoviesAll","toggleFavorite","fav","categories","children","className","style","zoom","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","placeholder","onChange","target","value","Object","entries","map","path","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","rating","vote_average","poster_path","width","height","key","allow","allowFullScreen","director","actor","order","character","overview","_c","$RefreshReg$"],"sources":["/home/toto/Downloads/my-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport MovieCarousel from \"./MovieCarousel\"; \nimport Footer from \"./Footer\";\nimport StarRating from './StarRating';\nimport Favorites from \"./Favorites\";\n\n/*CSS*/\nimport \"./MovieList.css\";\nimport \"./MovieDetail.css\";\nimport \"./Logocss.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst API_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"674684d28cd5c404ad1bf06cd1a5d482\";\nconst IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\nconst URL_IMAGE = \"https://image.tmdb.org/t/p/original\";\n\nfunction App() {\n    const [movies, setMovies] = useState([]);\n    const [searchKey, setSearchKey] = useState(\"\");\n    const [trailer, setTrailer] = useState(null);\n    const [movie, setMovie] = useState({ title: \"Loading Movies\" });\n    const [playing, setPlaying] = useState(false);\n    const [cast, setCast] = useState([]);\n    const [directors, setDirectors] = useState([]); // Nuevo estado para los directores\n    const [category, setCategory] = useState(\"\");\n    const [searchType, setSearchType] = useState(\"\");\n    const [zoomLevel, setZoomLevel] = useState(window.devicePixelRatio);\n    const [favorites, setFavorites] = useState([]); // Estado para favoritos\n\n    useEffect(() => {\n        const handleResize = () => {\n            setZoomLevel(window.devicePixelRatio);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    const fetchMovies = async (\n        searchKey,\n        category,\n        searchType,\n        fromDate,\n        toDate\n    ) => {\n        const type = searchKey ? \"search\" : \"discover\";\n        let params = {\n            api_key: API_KEY,\n            query: searchKey,\n            with_genres: category ? category : undefined,\n        };\n\n        if (searchType) {\n            params = { ...params, ...{ sort_by: searchType } };\n        }\n\n        if (fromDate && toDate) {\n            params[\"primary_release_date.gte\"] = fromDate;\n            params[\"primary_release_date.lte\"] = toDate;\n        }\n\n        const {\n            data: { results },\n        } = await axios.get(`${API_URL}/${type}/movie`, {\n            params: params,\n        });\n\n        const filteredMovies = results.filter(\n            (movie) =>\n                !movie.title.toLowerCase().includes(\"tiburon\") &&\n                movie.title !== \"No Way Up\" &&\n                movie.title !== \"Jaws\" &&\n                movie.title !== \"Sharknado\" &&\n                movie.title !== \"Deep Blue Sea\" &&\n                movie.title !== \"The Meg\" &&\n                movie.title !== \"Under Paris\" &&\n                movie.title !== \"Shark\"\n        );\n\n        setMovies(filteredMovies);\n        setMovie(filteredMovies[0]);\n\n        if (filteredMovies.length) {\n            await fetchMovie(filteredMovies[0].id);\n        }\n    };\n\n    const fetchMovie = async (id) => {\n        const { data } = await axios.get(`${API_URL}/movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n                append_to_response: \"videos,credits\",\n            },\n        });\n\n        if (data.videos && data.videos.results) {\n            const trailer = data.videos.results.find(\n                (vid) => vid.name === \"Official Trailer\"\n            );\n            setTrailer(trailer ? trailer : data.videos.results[0]);\n        }\n        setMovie(data);\n        if (data.credits && data.credits.cast) {\n            setCast(data.credits.cast);\n            setDirectors(data.credits.crew.filter(person => person.job === \"Director\")); // Filtra los directores y actualiza el estado\n        }\n    };\n\n    const selectMovie = async (movie) => {\n        fetchMovie(movie.id);\n        setMovie(movie);\n        window.scrollTo(0, 0);\n    };\n\n    const searchMovies = (e) => {\n        e.preventDefault();\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    const goToHomePage = () => {\n        window.location.href = \"/\";\n    };\n\n    const handleCategoryChange = (category) => {\n        setCategory(category);\n        setSearchType(\"\"); // Resetear el tipo de búsqueda al seleccionar una categoría\n        fetchMovies(searchKey, category, searchType);\n    };\n\n    useEffect(() => {\n        // eslint-disable-next-line\n        fetchMovies(\"\", \"\", \"\"); // eslint-disable-next-line\n    }, []);\n\n    const fetchPopularMovies = async () => {\n        setSearchType(\"popularity.desc\"); // Establecer el tipo de búsqueda como más popular\n        fetchMovies(searchKey, category, \"popularity.desc\");\n    };\n\n    const fetchRecentMovies = async () => {\n        const currentDate = new Date();\n        const fromDate = new Date(currentDate);\n        const toDate = new Date(currentDate);\n\n        fromDate.setMonth(currentDate.getMonth() - 1);\n        toDate.setMonth(currentDate.getMonth() + 1);\n\n        const fromDateString = fromDate.toISOString().split(\"T\")[0];\n        const toDateString = toDate.toISOString().split(\"T\")[0];\n\n        setSearchType(\"release_date.desc\");\n\n        fetchMovies(\n            searchKey,\n            category,\n            `release_date.desc`,\n            fromDateString,\n            toDateString\n        );\n    };\n\n    const fetchTopRatedMovies = async () => {\n        setSearchType(\"vote_average.desc\"); // Establecer el tipo de búsqueda como mejor rating\n        fetchMovies(searchKey, category, \"vote_average.desc\");\n    };\n\n    const fetchTopRatedMoviesAll = async () => {\n        setSearchType(\"top_rated\");\n        const {\n            data: { results },\n        } = await axios.get(`${API_URL}/movie/top_rated`, {\n            params: {\n                api_key: API_KEY,\n            },\n        });\n\n        setMovies(results);\n        setMovie(results[0]);\n        if (results.length) {\n            await fetchMovie(results[0].id);\n        }\n    };\n\n    const toggleFavorite = (movie) => {\n        if (favorites.find(fav => fav.id === movie.id)) {\n            setFavorites(favorites.filter(fav => fav.id !== movie.id));\n        } else {\n            setFavorites([...favorites, movie]);\n        }\n    };\n\n    const categories = {\n        28: \"Action\",\n        35: \"Comedy\",\n        18: \"Drama\",\n        27: \"Horror\",\n        10749: \"Romance\",\n        878: \"Science Fiction\",\n        10751: \"Family\",\n        16: \"Animation\",\n        80: \"Crime\",\n        37: \"Western\",\n        36: \"History\",\n        14: \"Fantasy\",\n        53: \"Thriller\",\n        10752: \"War\",\n        12: \"Adventure\",\n        99: \"Documentary\",\n        10402: \"Music\",\n        10770: \"TV Movie\",\n        9648: \"Mystery\",\n    };\n\n    return (\n        <Router>\n            <div className=\"App\" style={{ zoom: zoomLevel }}>\n                <header className=\"menu\">\n                    <div className=\"logo-and-search\">\n                        <button className=\"logo\" onClick={goToHomePage}>\n                            <img src=\"http://imgfz.com/i/5hQ3ZSJ.png\" alt=\"Logo\" />\n                        </button>\n                        <Link to=\"/all-time\">\n                            <button className=\"filter-button\">All time</button>\n                        </Link>\n                        <Link to=\"/favorites\">\n                            <button className=\"filter-button\">Favorites</button>\n                        </Link>\n                    </div>\n                    <form className=\"search-container\" onSubmit={searchMovies}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search\"\n                            className=\"search-input\"\n                            onChange={(e) => setSearchKey(e.target.value)}\n                        />\n                        <button className=\"search-button\" onClick={searchMovies}>\n                            Search\n                        </button>\n                    </form>\n                    <div className=\"category-buttons\">\n                        <select\n                            value={category}\n                            onChange={(e) => handleCategoryChange(e.target.value)}\n                        >\n                            <option value=\"\" className=\"category-but\">All</option>\n                            {Object.entries(categories).map(([id, name]) => (\n                                <option key={id} value={id}>\n                                    {name}\n                                </option>\n                            ))}\n                        </select>\n                        <button className=\"filter-button\" onClick={fetchPopularMovies}>Popular</button>\n                        <button className=\"filter-button\" onClick={fetchRecentMovies}>Recent</button>\n                        <button className=\"filter-button\" onClick={fetchTopRatedMovies}>Top Rated</button>\n                    </div>\n                </header>\n                <Switch>\n                    <Route path=\"/favorites\">\n                        <Favorites favorites={favorites} selectMovie={selectMovie} />\n                    </Route>\n                    <Route path=\"/\">\n                        <div>\n                            <MovieCarousel movies={movies} selectMovie={selectMovie} />\n                            <main>\n                                {movie ? (\n                                    <div\n                                        className=\"viewtrailer\"\n                                        style={{\n                                            backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n                                            backgroundSize: \"cover\",\n                                            backgroundPosition: \"center\",\n                                        }}\n                                    >\n                                        <StarRating rating={movie.vote_average} />\n                                        {trailer && (\n                                            <div className=\"trailer-container\">\n                                                <img\n                                                    src={`${IMAGE_PATH}${movie.poster_path}`}\n                                                    alt={movie.title}\n                                                    className=\"movie-poster\"\n                                                    width=\"510\"\n                                                    height=\"815\"\n                                                />\n                                                <iframe\n                                                    width=\"560\"\n                                                    height=\"315\"\n                                                    src={`https://www.youtube.com/embed/${trailer.key}`}\n                                                    title=\"YouTube video player\"\n                                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                    allowFullScreen\n                                                ></iframe>\n                                            </div>\n                                        )}\n                                        <button onClick={() => toggleFavorite(movie)}>\n                                            {favorites.find(fav => fav.id === movie.id) ? \"Remove from Favorites\" : \"Add to Favorites\"}\n                                        </button>\n                                        <div className=\"cast-container\">\n                                            <h2>Directors</h2>\n                                            <ul>\n                                                {directors.map((director) => (\n                                                    <li key={director.id}>{director.name}</li>\n                                                ))}\n                                            </ul>\n                                            <h2>Cast</h2>\n                                            <ul>\n                                                {cast\n                                                    .filter(actor => actor.order <= 10)\n                                                    .map((actor) => (\n                                                        <li key={actor.id}>\n                                                            {actor.character} - {actor.name}\n                                                        </li>\n                                                    ))}\n                                            </ul>\n                                        </div>\n                                        {playing ? (\n                                            <button\n                                                onClick={() => setPlaying(false)}\n                                                className=\"boton\"\n                                            >\n                                                Close\n                                            </button>\n                                        ) : (\n                                            <div className=\"container\">\n                                                <div>\n                                                    <h1 className=\"text-white\">\n                                                        {movie.title}\n                                                    </h1>\n                                                    <p className=\"text-white\">\n                                                        {movie.overview}\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </div>\n                                ) : null}\n                            </main>\n                        </div>\n                        <div className=\"container_movies\">\n                            <div className=\"row_movies\">\n                                {movies.map((movie) => (\n                                    <div\n                                        key={movie.id}\n                                        className=\"col_movies\"\n                                        onClick={() => selectMovie(movie)}\n                                    >\n                                        <img src={`${URL_IMAGE + movie.poster_path}`} alt={movie.title} />\n                                        <h4>{movie.title}</h4>\n                                        <p>Rating: {movie.vote_average}</p>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </Route>\n                </Switch>\n                <Footer />\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}