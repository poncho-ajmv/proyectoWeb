{"ast":null,"code":"var _jsxFileName = \"/home/poncho/toto/CODE/React/proyect/src/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { moviesBySagaAndCategory } from './moviesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetails() {\n  _s();\n  const [selectedSaga, setSelectedSaga] = useState(null);\n  const handleSagaChange = event => {\n    setSelectedSaga(event.target.value);\n  };\n  const getSagas = () => {\n    return Object.keys(moviesBySagaAndCategory);\n  };\n  const getCategories = () => {\n    if (selectedSaga && moviesBySagaAndCategory[selectedSaga]) {\n      return Object.keys(moviesBySagaAndCategory[selectedSaga]);\n    }\n    return [];\n  };\n  const getPosters = () => {\n    if (selectedSaga && moviesBySagaAndCategory[selectedSaga]) {\n      const movies = Object.values(moviesBySagaAndCategory[selectedSaga]).flat();\n      return movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster,\n        alt: movie.title\n      }, movie.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this));\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movie Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sagas\",\n        children: \"Saga:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sagas\",\n        onChange: handleSagaChange,\n        value: selectedSaga || '',\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Saga\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), getSagas().map(saga => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: saga,\n          children: saga\n        }, saga, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: getPosters()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"DuYbPyPys3mfFBs+JO6lGqK46+s=\");\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","moviesBySagaAndCategory","jsxDEV","_jsxDEV","MovieDetails","_s","selectedSaga","setSelectedSaga","handleSagaChange","event","target","value","getSagas","Object","keys","getCategories","getPosters","movies","values","flat","map","movie","src","poster","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","className","children","htmlFor","id","onChange","saga","_c","$RefreshReg$"],"sources":["/home/poncho/toto/CODE/React/proyect/src/MovieList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { moviesBySagaAndCategory } from './moviesData';\n\nfunction MovieDetails() {\n  const [selectedSaga, setSelectedSaga] = useState(null);\n\n  const handleSagaChange = (event) => {\n    setSelectedSaga(event.target.value);\n  };\n\n  const getSagas = () => {\n    return Object.keys(moviesBySagaAndCategory);\n  };\n\n  const getCategories = () => {\n    if (selectedSaga && moviesBySagaAndCategory[selectedSaga]) {\n      return Object.keys(moviesBySagaAndCategory[selectedSaga]);\n    }\n    return [];\n  };\n\n  const getPosters = () => {\n    if (selectedSaga && moviesBySagaAndCategory[selectedSaga]) {\n      const movies = Object.values(moviesBySagaAndCategory[selectedSaga]).flat();\n      return movies.map(movie => (\n        <img key={movie.title} src={movie.poster} alt={movie.title} />\n      ));\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"movie-details\">\n      <h2>Movie Details</h2>\n      <div>\n        <label htmlFor=\"sagas\">Saga:</label>\n        <select id=\"sagas\" onChange={handleSagaChange} value={selectedSaga || ''}>\n          <option value=\"\">Select Saga</option>\n          {getSagas().map(saga => (\n            <option key={saga} value={saga}>{saga}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"posters\">\n        {getPosters()}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}